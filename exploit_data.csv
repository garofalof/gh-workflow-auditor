github_org,workflow_path,exploit_type,exploit_severity,exploit_info,vulnerable_inputs,author,author_1,author_2,author_3,author_4,author_5,author_6,author_7,author_8,author_9,author_10
juspay,https://github.com/juspay/hyperswitch-web/blob/HEAD/.github/workflows/conventional-commit-check.yml,Untrusted Input,high,The workflow uses github.event.merge_group.head_commit.message directly in a shell command that runs the 'cog verify' command. An attacker could potentially create a merge group with a malicious commit message to inject arbitrary commands into the shell.,github.event.merge_group.head_commit.message,1805317@kiit.ac.in,1805317@kiit.ac.in,,,,,,,,,
coreos,https://github.com/coreos/fedora-coreos-streams/blob/HEAD/.github/workflows/promote-config.yml,Untrusted Input,high,"The workflow uses github.event.issue.title to extract a stream name and uses it in multiple shell commands, including 'curl' and conditional statements. A malicious actor could craft an issue title that includes shell commands, leading to arbitrary code execution.",github.event.issue.title,aaradhak@redhat.com,aaradhak@redhat.com,bgilbert@redhat.com,jonathan@jlebon.com,dusty@dustymabe.com,,,,,,
atlassian,https://github.com/atlassian/data-center-helm-charts/blob/HEAD/.github/workflows/e2e-tf-deployment.yaml,PR Target,high,"This workflow uses the `pull_request_target` trigger and checks out the PR's code using `actions/checkout@v4`. It then executes various commands, including `helm dependency update` for several charts. While this doesn't directly execute arbitrary code from the PR, it's possible for a malicious PR to craft a chart that could exploit vulnerabilities in the `helm` command. Additionally, the workflow accesses numerous secrets related to AWS and Atlassian products, increasing the potential impact of a successful exploit. The severity is marked as high due to the combination of potential code execution and access to sensitive information.",,abrokes@atlassian.com,abrokes@atlassian.com,yf_zhang@live.com,yivantsov@atlassian.com,,,,,,,
ansible,https://github.com/ansible/awx/blob/HEAD/.github/workflows/update_dependabot_prs.yml,Untrusted Input,high,"The workflow uses github.event.pull_request.body to set an environment variable PR_BODY, which is later used in a shell script. An attacker could craft a malicious pull request body to inject arbitrary commands into the shell script.",github.event.pull_request.body,acorey@redhat.com,rick@elrod.me,alex.swansboro@gmail.com,acorey@redhat.com,,,,,,,
TykTechnologies,https://github.com/TykTechnologies/tyk-1/blob/HEAD/.github/workflows/release.yml,Untrusted Input,high,"The workflow uses github.event.head_commit.message in a curl command without proper sanitization, potentially allowing for code injection.",github.event.head_commit.message,alok@tyk.io,tit.petric@monotek.net,ermirizio@gmail.com,furkan_senharputlu@hotmail.com,jeffy.mathew100@gmail.com,alok@tyk.io,leonsbox@gmail.com,,,,
mitre,https://github.com/mitre/saf_action/blob/HEAD/.github/workflows/auto-approve-and-merge.yml,PR Target,high,"This workflow uses the `pull_request_target` trigger and checks out the pull request's code using `actions/checkout@v4`. It then executes `npm ci`, which could run malicious scripts introduced in the PR. It also uses `gh pr merge` to automatically merge the PR, which significantly increases the impact of potential exploits. The severity is high because it directly executes code from the PR and automatically merges it.",,amann@mitre.org,amann@mitre.org,ecrodriguez@mm279976-pc.lan,,,,,,,,
wazuh,https://github.com/wazuh/wazuh-indexer/blob/HEAD/.github/workflows/check-compatibility.yml,PR Target,high,"This workflow uses the `pull_request_target` trigger, checks out the pull request's code, and then executes `./gradlew checkCompatibility`. This allows a malicious PR to execute arbitrary code within the workflow.",,andriy.redko@aiven.io,andriy.redko@aiven.io,kkotwani@amazon.com,widdis@gmail.com,,,,,,,
showdownjs,https://github.com/showdownjs/showdown/blob/HEAD/.github/workflows/browserstack.yml,Untrusted Input,medium,"The workflow uses github.event.head_commit.message in a printf command. While printf itself is not vulnerable to code injection, using unsanitized user input in command arguments could have unintended consequences depending on how the output is used.",github.event.head_commit.message,estevao.santos@gmail.com,estevao.santos@gmail.com,root@Ciri.localdomain,,,,,,,,
transloadit,https://github.com/transloadit/uppy/blob/HEAD/.github/workflows/e2e.yml,PR Target,high,"This workflow uses the `pull_request_target` trigger and checks out the PR's code using `actions/checkout@v4`. It then executes the PR's code by running `corepack yarn workspaces focus`, `corepack yarn build:js:typeless`, and `corepack yarn install`. It also runs end-to-end browser tests, which could potentially execute arbitrary code from the PR. Additionally, the workflow accesses several secrets, including `COMPANION_UNSPLASH_KEY`, `COMPANION_UNSPLASH_SECRET`, `COMPANION_AWS_KEY`, `COMPANION_AWS_SECRET`, `COMPANION_AWS_BUCKET`, `COMPANION_AWS_REGION`, `TRANSLOADIT_KEY`, `TRANSLOADIT_SECRET`, and `TRANSLOADIT_TEMPLATE`. This allows a malicious PR to execute arbitrary code on the runner with access to sensitive information.",,antoine@transloadit.com,merlijn@soverin.net,antoine@transloadit.com,duhamelantoine1995@gmail.com,finstaden@gmail.com,,,,,,
nuxt,https://github.com/nuxt/nuxt-movies/blob/HEAD/.github/workflows/lighthouse-ci.yaml,PR Target,high,"This workflow uses the `pull_request_target` trigger and checks out the PR's code using `actions/checkout@v2`. It then executes the PR's code by running `yarn install`, `yarn build`, and `lhci autorun`. This allows a malicious PR to execute arbitrary code on the runner with access to repository secrets `FRONTEND_URL`, `API_KEY`, `API_LANG`, `API_COUNTRY`, and `LHCI_GITHUB_APP_TOKEN`.",,antonkarlovskiy@outlook.com,antonkarlovskiy@outlook.com,,,,,,,,,
tastejs,https://github.com/tastejs/nuxt-movies/blob/HEAD/.github/workflows/lighthouse-ci.yaml,PR Target,high,"This workflow uses the `pull_request_target` trigger and checks out the PR's code using `actions/checkout@v2`. It then executes the PR's code by running `yarn install`, `yarn build`, and `lhci autorun`. This allows a malicious PR to execute arbitrary code on the runner with access to repository secrets `FRONTEND_URL`, `API_KEY`, `API_LANG`, `API_COUNTRY`, and `LHCI_GITHUB_APP_TOKEN`.",,antonkarlovskiy@outlook.com,antonkarlovskiy@outlook.com,,,,,,,,,
ether,https://github.com/ether/etherpad-next/blob/HEAD/.github/workflows/lint-and-tests.yml,PR Target,high,"This workflow uses the `pull_request_target` trigger and checks out the pull request's code using `actions/checkout`. It then proceeds to execute the code by running `npm i`, `npm build`, `turbo lint`, `turbo prettier`, `prisma generate`, and `tsc --build`. This allows a malicious pull request to execute arbitrary code on the runner with write access to the repository.",,augustin.mauroy@outlook.fr,augustin.mauroy@outlook.fr,,,,,,,,,
jhipster,https://github.com/jhipster/jhipster-lite/blob/HEAD/.github/workflows/github-actions.yml,Untrusted Input,high,"The workflow uses github.event.pull_request.title in a shell script without proper sanitization, potentially allowing for code injection.",github.event.pull_request.title,aurelien.mino@gmail.com,aurelien.mino@gmail.com,pascalgrimaud@gmail.com,renan.andradefranca@gmail.com,atomfrede@gmail.com,hdurix@ippon.fr,francescoscuccimarri@gmail.com,vladislav.sokolov@hotmail.fr,damon.colin@gmail.com,,
lyft,https://github.com/lyft/libevent/blob/HEAD/.github/workflows/abi.yml,Untrusted Input,high,The workflow uses both github.event.head_commit.author.name and github.event.head_commit.author.email in a series of git commands. A malicious actor could craft a commit with a specially crafted author name or email containing shell metacharacters to inject arbitrary commands into the git commands.,github.event.head_commit.author.name and github.event.head_commit.author.email,azat@libevent.org,azat@libevent.org,,,,,,,,,
lyft,https://github.com/lyft/libevent/blob/HEAD/.github/workflows/doxygen.yml,Untrusted Input,high,The workflow uses both github.event.head_commit.author.name and github.event.head_commit.author.email in a series of git commands. A malicious actor could craft a commit with a specially crafted author name or email containing shell metacharacters to inject arbitrary commands into the git commands.,github.event.head_commit.author.name and github.event.head_commit.author.email,azat@libevent.org,azat@libevent.org,yuangongji@foxmail.com,,,,,,,,
DataDog,https://github.com/DataDog/cilium/blob/HEAD/.github/workflows/build-images-base.yaml,PR Target,very high,"This workflow uses the `pull_request_target` trigger and checks out the PR's code. It then executes various commands, including `images/runtime/update-cilium-runtime-image.sh`, `images/builder/update-cilium-builder-image.sh`, and `git push`. These commands directly modify the target repository, making it very highly exploitable. An attacker could push malicious code to the repository or steal sensitive information.",,birol@cilium.io,umesh.freelance@gmail.com,birolbilgin@gmail.com,birol@cilium.io,nicolas@isovalent.com,feroz.salam@isovalent.com,marco.hofstetter@isovalent.com,samparksandipan@gmail.com,joe@cilium.io,,
DataDog,https://github.com/DataDog/cilium/blob/HEAD/.github/workflows/build-images-docs-builder.yaml,PR Target,very high,"This workflow uses the `pull_request_target` trigger and checks out the PR's code. It then executes `Documentation/update-docs-builder-image.sh` and `git push`, which directly modify the target repository. An attacker could push malicious code to the repository or steal sensitive information, making it very highly exploitable.",,birol@cilium.io,birolbilgin@gmail.com,birol@cilium.io,quentin@isovalent.com,,,,,,,
salesforce,https://github.com/salesforce/secure-pomerium-tunneler/blob/HEAD/.github/workflows/release.yml,Untrusted Input,high,"The workflow uses github.event.release.body to update the changelog. While the provided code snippet doesn't directly execute this input in a shell, it's stored in an environment variable and later used in a 'gradlew patchChangelog' command. Depending on how 'gradlew patchChangelog' handles the input, this could potentially lead to code injection.",github.event.release.body,brian.mcnamara@salesforce.com,brian.mcnamara@salesforce.com,,,,,,,,,
mesosphere,https://github.com/mesosphere/kommander-applications/blob/HEAD/.github/workflows/kommander-branch.yaml,Untrusted Input,high,"The workflow uses github.event.pull_request.body to extract application versions and then uses these versions in a sed command without proper sanitization, potentially allowing for code injection.",github.event.pull_request.body,cbuto@d2iq.com,xgrace@gmail.com,cbuto@d2iq.com,bmendoza@d2iq.com,mxstrbng@gmail.com,mikolajb@gmail.com,,,,,
espressif,https://github.com/espressif/iperf-cmd/blob/HEAD/.github/workflows/dangerjs.yml,PR Target,high,"This workflow uses `pull_request_target`, checks out the PR's code using `actions/checkout@v4`, and then executes code from the PR using `espressif/shared-github-dangerjs@v1`. This action is likely running code from the PR, making it highly exploitable.",,chenyudong@espressif.com,chenyudong@espressif.com,,,,,,,,,
GetStream,https://github.com/GetStream/stream-chat-js/blob/HEAD/.github/workflows/lint.yml,Untrusted Input,medium,"The workflow uses github.event.pull_request.title in an echo command piped to yarn commitlinter. While echo itself is not vulnerable to code injection, using unsanitized user input in command arguments could have unintended consequences depending on how commitlinter processes the input.",github.event.pull_request.title,,snypox@gmail.com,mads.roskar@getstream.io,amin@getstream.io,,,,,,,
Hammerspoon,https://github.com/Hammerspoon/hammerspoon/blob/HEAD/.github/workflows/ci_testbuild.yml,Untrusted Input,high,The workflow uses github.event.head_commit.author.name directly in a curl command that sends a notification. A malicious actor could craft a commit with a specially crafted author name containing shell metacharacters to inject arbitrary commands into the curl command.,github.event.head_commit.author.name,cmsj@tenshu.net,cmsj@tenshu.net,,,,,,,,,
lyft,https://github.com/lyft/SavvyCan/blob/HEAD/.github/workflows/build.yml,Untrusted Input,high,The workflow uses github.event.head_commit.message in a curl command that sends a notification to Discord. A malicious actor could craft a commit message containing shell metacharacters to inject arbitrary commands into the curl command.,github.event.head_commit.message,collink@kkmfg.com,collink@kkmfg.com,,,,,,,,,
segmentio,https://github.com/segmentio/ma-paste-fork/blob/HEAD/.github/workflows/on_release_publish.yml,Untrusted Input,low,"The workflow uses github.event.release.body in echo commands and as slack-text in a Slack notification. While echo itself is not vulnerable to code injection, using unsanitized user input in command arguments could have unintended consequences depending on how the output is used. Additionally, displaying unsanitized user input in Slack messages could lead to XSS vulnerabilities.",github.event.release.body,,rniznik@twilio.com,staggart@twilio.com,,,,,,,,
nodejs,https://github.com/nodejs/nodejs.org/blob/HEAD/.github/workflows/build.yml,PR Target,high,"This workflow uses the `pull_request_target` trigger and checks out the pull request's code using `actions/checkout`. It then executes the code using `npm i`, `turbo build`, and `turbo deploy`. Since `pull_request_target` has write access to the repository, a malicious pull request could modify the code to steal secrets or modify the repository's content.",,cwunder@gnome.org,ciao@micheleriva.it,cwunder@gnome.org,brian.muenzenmeyer@gmail.com,adhirajd007@gmail.com,cwunder@hubspot.com,,,,,
nodejs,https://github.com/nodejs/nodejs.org/blob/HEAD/.github/workflows/lint-and-tests.yml,PR Target,high,"This workflow uses the `pull_request_target` trigger and checks out the pull request's code using `actions/checkout`. It then executes the code using `npm i`, `turbo lint:js lint:md lint:css prettier`, `tsc`, and `turbo test:unit`. Since `pull_request_target` has write access to the repository, a malicious pull request could modify the code to steal secrets or modify the repository's content.",,cwunder@gnome.org,anthonyshew@gmail.com,cwunder@gnome.org,brian.muenzenmeyer@gmail.com,adhirajd007@gmail.com,cwunder@hubspot.com,,,,,
nodejs,https://github.com/nodejs/nodejs.dev/blob/HEAD/.github/workflows/generate-preview.yml,PR Target,high,"This workflow uses the `pull_request_target` trigger and checks out the pull request's code using `actions/checkout`. It then executes the code using `npm ci` and `npm run build-ci`, and accesses secrets like `FIREBASE_SERVICE_ACCOUNT_NODEJS_INFRASTRUCTURE`. A malicious pull request could modify the code to steal these secrets or modify the repository's content.",,cwunder@gnome.org,cwunder@hubspot.com,cwunder@gnome.org,jongwooo.han@gmail.com,rtrott@gmail.com,nschonni@gmail.com,manishprivet@protonmail.com,mylesborins@github.com,,,
nodesource,https://github.com/nodesource/nodejs.org/blob/HEAD/.github/workflows/build.yml,PR Target,high,"This workflow uses the `pull_request_target` trigger and checks out the pull request's code using `actions/checkout`. It then executes the code using `npm i`, `turbo build`, and `turbo deploy`. Since `pull_request_target` has write access to the repository, a malicious pull request could modify the code to steal secrets or modify the repository's content.",,cwunder@gnome.org,ciao@micheleriva.it,cwunder@gnome.org,brian.muenzenmeyer@gmail.com,adhirajd007@gmail.com,cwunder@hubspot.com,,,,,
dair-ai,https://github.com/dair-ai/comet-llm/blob/HEAD/.github/workflows/unit-tests.yml,Untrusted Input,low,"The workflow uses github.event.pull_request.title in an 'echo' command. While this allows printing the potentially malicious content to the log, it doesn't directly execute it as code. The impact is limited to information disclosure.",github.event.pull_request.title,,alexander.kuzmik99@gmail.com,,,,,,,,,
ant-design,https://github.com/ant-design/jest-image-snapshot/blob/HEAD/.github/workflows/release.yml,Untrusted Input,low,"The workflow uses github.event.head_commit.message in an 'echo' command. While this allows printing the potentially malicious content to the log, it doesn't directly execute it as code. The impact is limited to information disclosure.",github.event.head_commit.message,,nelly.j.kiboi@aexp.com,,,,,,,,,
PacktPublishing,https://github.com/PacktPublishing/Build-Your-Own-Web-Framework-in-Elixir/blob/HEAD/.github/workflows/ci.yml,Untrusted Input,low,"The workflow uses github.event.head_commit.message in an 'echo' command. While this allows printing the potentially malicious content to the log, it doesn't directly execute it as code. The impact is limited to information disclosure.",github.event.head_commit.message,,aditya7iyengar@gmail.com,,,,,,,,,
GSA,https://github.com/GSA/notifications-api/blob/HEAD/.github/workflows/adr-accepted.yml,Untrusted Input,medium,"The workflow uses github.event.issue.title for generating a filename and in a 'git commit' command. While some sanitization is applied to the title when creating the filename, it's unclear if this sanitization is sufficient to prevent command injection in the 'git commit' command. Additionally, github.event.issue.body is used directly in the ADR file content, which could lead to unintended information disclosure.",github.event.issue.title and github.event.issue.body,,carlo.costino@gsa.gov,steven.reilly@gsa.gov,,,,,,,,
nodesource,https://github.com/nodesource/nodejs.org/blob/HEAD/.github/workflows/lint-and-tests.yml,PR Target,high,"This workflow uses the `pull_request_target` trigger and checks out the pull request's code using `actions/checkout`. It then executes the code using `npm i`, `turbo lint`, `turbo prettier`, `tsc`, and `turbo test:unit`. Since `pull_request_target` has write access to the repository, a malicious pull request could modify the code to steal secrets or modify the repository's content.",,cwunder@gnome.org,cwunder@gnome.org,brian.muenzenmeyer@gmail.com,adhirajd007@gmail.com,cwunder@hubspot.com,,,,,,
cloudposse,https://github.com/cloudposse/terraform-aws-components/blob/HEAD/.github/workflows/bats.yml,PR Target,high,"This workflow uses the `pull_request_target` trigger and checks out the pull request's code. It then runs `bats` tests on modified modules, which could include malicious code introduced in the PR. This allows for arbitrary code execution within the workflow.",,daniel@cloudposse.com,goruha@gmail.com,daniel@cloudposse.com,ben.smith.developer@gmail.com,,,,,,,
woocommerce,https://github.com/woocommerce/woocommerce/blob/HEAD/.github/workflows/test-assistant-api-rest-change-tracker.yml,Untrusted Input,medium,"The workflow passes github.event.pull_request.milestone.title to a bash script 'determine_milestone_date.sh'. Without knowing the script's content, it's impossible to definitively determine if it's vulnerable. However, passing unsanitized user input to a script is generally risky and could potentially lead to code injection.",github.event.pull_request.milestone.title,,,,,,,,,,,
woocommerce,https://github.com/woocommerce/woocommerce/blob/HEAD/.github/workflows/test-assistant-release-highlight-tracker.yml,Untrusted Input,medium,"The workflow passes github.event.pull_request.milestone.title to a bash script 'determine_milestone_date.sh'. Without knowing the script's content, it's impossible to definitively determine if it's vulnerable. However, passing unsanitized user input to a script is generally risky and could potentially lead to code injection.",github.event.pull_request.milestone.title,,,,,,,,,,,
Azure,https://github.com/Azure/azure-iot-middleware-freertos/blob/HEAD/.github/workflows/ci_tests_linux.yml,PR Target,high,"This workflow uses the `pull_request_target` trigger and checks out the PR's code using `actions/checkout@v2`. It then executes various scripts from the PR, including `.github/scripts/code_style.sh`, `.github/scripts/install_software.sh`, `.github/scripts/clang_build.sh`, `.github/scripts/unit_tests.sh`, and `.github/scripts/e2e_tests.sh`. This allows a malicious PR to execute arbitrary code with access to secrets.",,dawalton@microsoft.com,dawalton@microsoft.com,higupt@microsoft.com,dane.walton@microsoft.com,,,,,,,
sourcegraph,https://github.com/sourcegraph/sourcegraph-jetbrains/blob/HEAD/.github/workflows/release.yml,Untrusted Input,high,The workflow uses github.event.release.body in a shell script that sets an environment variable and uses it in a gradlew command. An attacker could craft a malicious release body to inject arbitrary commands into the shell script.,github.event.release.body,dax@sourcegraph.com,dax@sourcegraph.com,philipp.spiess@sourcegraph.com,,,,,,,,
gradle,https://github.com/gradle/actions/blob/HEAD/.github/workflows/ci-integ-test.yml,Untrusted Input,high,"The workflow uses github.event.head_commit.message in a conditional expression without proper sanitization, potentially allowing for code injection.",github.event.head_commit.message,daz@gradle.com,daz@gradle.com,,,,,,,,,
qgis,https://github.com/qgis/QGIS-Documentation/blob/HEAD/.github/workflows/auto-label.yml,Untrusted Input,high,"The workflow sets the BODY environment variable using github.event.issue.body and then uses it in a sed command without proper sanitization, potentially allowing for code injection.",github.event.issue.body,delazj@gmail.com,delazj@gmail.com,denis.rouzaud@gmail.com,,,,,,,,
codex-team,https://github.com/codex-team/notes.api/blob/HEAD/.github/workflows/send-test-results.yml,Untrusted Input,low,"The workflow uses github.event.pull_request.title in an 'echo' command for constructing a message. While this allows printing the potentially malicious content to the log and including it in a Slack message, it doesn't directly execute it as code. The impact is limited to information disclosure.",github.event.pull_request.title,,yaroslav-gusev-00@mail.ru,,,,,,,,,
codex-team,https://github.com/codex-team/notes.web/blob/HEAD/.github/workflows/send-test-results.yml,Untrusted Input,low,"The workflow uses github.event.pull_request.title in an 'echo' command for constructing a message. While this allows printing the potentially malicious content to the log and including it in a Slack message, it doesn't directly execute it as code. The impact is limited to information disclosure.",github.event.pull_request.title,,Egoramurin@gmail.com,specc.dev@gmail.com,yaroslav-gusev-00@mail.ru,,,,,,,
llvm,https://github.com/llvm/temp-issue-tester/blob/HEAD/.github/workflows/contains-test.yml,Untrusted Input,low,"The workflow uses github.event.issue.body and github.event.comment.body in an 'echo' command. While this allows printing the potentially malicious content to the log, it doesn't directly execute it as code. The impact is limited to information disclosure.",github.event.issue.body and github.event.comment.body,,tstellar@redhat.com,,,,,,,,,
w3c,https://github.com/w3c/specberus/blob/HEAD/.github/workflows/node.js.yml,PR Target,high,"This workflow uses the `pull_request_target` trigger and checks out the pull request's code using `actions/checkout@v4`. It then executes `npm ci` and `npm run coverage`, which could run malicious scripts introduced in the PR. The severity is high because it directly executes code from the PR.",,denis@w3.org,denis@w3.org,jennyliang@w3.org,nschonni@gmail.com,,,,,,,
w3c,https://github.com/w3c/insafe/blob/HEAD/.github/workflows/node.js.yml,PR Target,high,"This workflow uses the `pull_request_target` trigger and checks out the pull request's code using `actions/checkout@v4`. It then executes `npm i` and `npm run coverage`, which could run malicious scripts introduced in the PR. The severity is high because it directly executes code from the PR.",,denis@w3.org,denis@w3.org,,,,,,,,,
10up,https://github.com/10up/wordpress-develop/blob/HEAD/.github/workflows/slack-notifications.yml,Untrusted Input,high,"The workflow uses github.event.head_commit.message in a script that prepares a commit message. Although the script attempts to escape backticks and double quotes, it's still possible for an attacker to inject arbitrary commands using techniques like shell variable expansion or command substitution.",github.event.head_commit.message,desrosj@git.wordpress.org,desrosj@git.wordpress.org,johnbillion@git.wordpress.org,,,,,,,,
WordPress,https://github.com/WordPress/wordpress-develop/blob/HEAD/.github/workflows/slack-notifications.yml,Untrusted Input,high,"The workflow uses github.event.head_commit.message in a complex expression that includes 'awk' and 'sed' commands. A malicious actor could craft a commit message that manipulates these commands, potentially leading to arbitrary code execution.",github.event.head_commit.message,desrosj@git.wordpress.org,desrosj@git.wordpress.org,johnbillion@git.wordpress.org,,,,,,,,
4GeeksAcademy,https://github.com/4GeeksAcademy/DeepSpeed/blob/HEAD/.github/workflows/auto-sync.yml,Untrusted Input,high,"The workflow uses github.event.head_commit.message to construct the PR name and title, and then uses it in a git cherry-pick command. A malicious actor could push a commit with a crafted message containing malicious code, leading to arbitrary command execution during the cherry-pick operation. This could allow modification of the target repository.",github.event.head_commit.message,digger-yu@outlook.com,digger-yu@outlook.com,michaelwyatt@microsoft.com,,,,,,,,
huggingface,https://github.com/huggingface/trident/blob/HEAD/.github/workflows/github-actions.yml,Untrusted Input,low,"The workflow uses github.event.pull_request.title in an 'echo' command. While this allows printing the potentially malicious content to the log, it doesn't directly execute it as code. The impact is limited to information disclosure.",github.event.pull_request.title,,andrew.kerr@netapp.com,,,,,,,,,
duckduckgo,https://github.com/duckduckgo/BrowserServicesKit/blob/HEAD/.github/workflows/create-prs.yml,Untrusted Input,high,"The workflow uses github.event.inputs.pr-title in a gh pr create command without proper sanitization, potentially allowing for code injection.",github.event.inputs.pr,dkapusta@duckduckgo.com,dkapusta@duckduckgo.com,,,,,,,,,
freeCodeCamp,https://github.com/freeCodeCamp/news-translation-tasks/blob/HEAD/.github/workflows/slash-command-action.yml,None,very low,"The workflow uses the 'startsWith' function to check if the comment body starts with specific strings ('/translate' or '/review'). This effectively limits the user input to these predefined commands, preventing arbitrary command injection.",,,,,,,,,,,,
10up,https://github.com/10up/10up-elementor-collaboration/blob/HEAD/.github/workflows/pr-linter.yml,Untrusted Input,high,The workflow uses github.event.pull_request.title directly in a shell command that pipes the title to the commitlint tool. An attacker could craft a malicious pull request title to inject arbitrary commands into the shell.,github.event.pull_request.title,dmytrom@elementor.com,dmytrom@elementor.com,kingyes1@gmail.com,,,,,,,,
GoogleCloudPlatform,https://github.com/GoogleCloudPlatform/nodejs-docs-samples/blob/HEAD/.github/workflows/generative-ai-snippets.yaml,PR Target,high,"This workflow uses the `pull_request_target` trigger and checks out the PR's code using `actions/checkout@v4.1.0` with `ref: ${{github.event.pull_request.head.sha}}`. It then executes the code via `npm install`, `npm run build`, and `npm test`. This allows a malicious PR to execute arbitrary code in the context of the workflow, potentially gaining access to secrets like `caip_id`, `location`, and `datastore_id`.",,drewbr@google.com,drewbr@google.com,itseric@google.com,lukeschlangen@gmail.com,,,,,,,
Shopify,https://github.com/Shopify/dbt-bigquery/blob/HEAD/.github/workflows/integration.yml,PR Target,high,This workflow uses the `pull_request_target` trigger and checks out the pull request's code using `actions/checkout`. It then executes the code using `tox` and accesses secrets like `BIGQUERY_TEST_SERVICE_ACCOUNT_JSON`. A malicious pull request could modify the code to steal these secrets or modify the repository's content.,,emily.rockman@dbtlabs.com,emily.rockman@dbtlabs.com,david.bloss@dbtlabs.com,chenyu.li@dbtlabs.com,jeremy@dbtlabs.com,jeremy@fishtownanalytics.com,,,,,
GoogleCloudPlatform,https://github.com/GoogleCloudPlatform/alloydb-go-connector/blob/HEAD/.github/workflows/lint.yaml,PR Target,high,"This workflow uses the `pull_request_target` trigger, checks out the pull request's code using `actions/checkout`, and then executes the code using `go mod tidy` and `golangci-lint run`. This allows an attacker to execute arbitrary code in the context of the workflow, potentially gaining access to secrets or modifying the repository.",,enocom@google.com,enocom@google.com,jackwoth@google.com,,,,,,,,
GoogleCloudPlatform,https://github.com/GoogleCloudPlatform/alloydb-go-connector/blob/HEAD/.github/workflows/tests.yaml,PR Target,high,"This workflow uses the `pull_request_target` trigger, checks out the pull request's code using `actions/checkout`, and then executes the code using `go test`. This allows an attacker to execute arbitrary code in the context of the workflow, potentially gaining access to secrets or modifying the repository.",,enocom@google.com,enocom@google.com,jackwoth@google.com,shubhadayini@google.com,,,,,,,
GoogleCloudPlatform,https://github.com/GoogleCloudPlatform/alloydb-auth-proxy/blob/HEAD/.github/workflows/lint.yaml,PR Target,high,"This workflow uses the `pull_request_target` trigger, checks out the pull request's code using `actions/checkout`, and then executes the code using `go mod tidy` and `golangci-lint run`. This allows an attacker to execute arbitrary code in the context of the workflow, potentially gaining access to secrets or modifying the repository.",,enocom@google.com,enocom@google.com,jackwoth@google.com,,,,,,,,
GoogleCloudPlatform,https://github.com/GoogleCloudPlatform/alloydb-auth-proxy/blob/HEAD/.github/workflows/sample-tests.yaml,PR Target,high,"This workflow uses the `pull_request_target` trigger, checks out the pull request's code using `actions/checkout`, and then executes a script `./examples/go/run_tests.sh`. This allows an attacker to execute arbitrary code in the context of the workflow, potentially gaining access to secrets or modifying the repository.",,enocom@google.com,enocom@google.com,jackwoth@google.com,jsimonweb@gmail.com,shubhadayini@google.com,,,,,,
GoogleCloudPlatform,https://github.com/GoogleCloudPlatform/alloydb-auth-proxy/blob/HEAD/.github/workflows/tests.yaml,PR Target,high,"This workflow uses the `pull_request_target` trigger, checks out the pull request's code using `actions/checkout`, and then executes the code using `go test`. This allows an attacker to execute arbitrary code in the context of the workflow, potentially gaining access to secrets or modifying the repository.",,enocom@google.com,enocom@google.com,jackwoth@google.com,shubhadayini@google.com,,,,,,,
GoogleCloudPlatform,https://github.com/GoogleCloudPlatform/cloud-sql-proxy-operator/blob/HEAD/.github/workflows/tests.yaml,PR Target,high,"This workflow uses the `pull_request_target` trigger, checks out the pull request's code using `actions/checkout`, and then executes a script `./tools/e2e_test_job.sh`. This allows an attacker to execute arbitrary code in the context of the workflow, potentially gaining access to secrets or modifying the repository.",,enocom@google.com,enocom@google.com,jackwoth@google.com,,,,,,,,
getredash,https://github.com/getredash/redash/blob/HEAD/.github/workflows/ci.yml,PR Target,high,"This workflow uses the `pull_request_target` trigger and checks out the pull request's code using `actions/checkout@v4`. It then executes various commands like `docker compose`, `psql`, `ruff check`, `black`, `npm install`, `yarn`, `python`, and `pytest`, which could potentially run malicious code introduced in the PR. The severity is high because it directly executes code from the PR and uses powerful commands like `docker compose`.",,eradman@starfishstorage.com,eradman@starfishstorage.com,seongtaejg@gmail.com,andrew.chubatiuk@gmail.com,justin@postgresql.org,lucasfc.nunes@gmail.com,sugawara@winebarrel.jp,wlachance@voltus.co,,,
thoughtbot,https://github.com/thoughtbot/houdini/blob/HEAD/.github/workflows/dependabot-notice-ruby-update.yml,PR Target,high,"This workflow uses the `pull_request_target` trigger and checks out the PR's code using `actions/checkout@v3` with a custom token (`secrets.DEPENDABOT_PAT`). It then executes the PR's code by running `bin/rails notice:ruby:update`, modifies the `NOTICE-ruby` file, and pushes the changes back to the repository. This allows a malicious PR to execute arbitrary code on the runner and modify the repository's content.",,eric@commitchange.com,eric@commitchange.com,,,,,,,,,
auth0,https://github.com/auth0/auth0-spa-js/blob/HEAD/.github/workflows/browserstack.yml,PR Target,high,"This workflow uses pull_request_target and actions/checkout to check out the PR's head commit. It then appears to execute the checked out code via 'npm run build' and by running tests against the built assets. While there is an authorize job presumably meant to require approval for forked PRs, it's not clear that this provides real protection - the run job still has access to secrets even without approval. Running untrusted code from a PR with access to secrets is high severity, as it could allow leaking secrets or other malicious actions from a forked PR.",,ewan.harris@okta.com,ewan.harris@okta.com,frederik.prijck@auth0.com,,,,,,,,
scikit-learn,https://github.com/scikit-learn/scikit-learn/blob/HEAD/.github/workflows/check-changelog.yml,Untrusted Input,medium,"The workflow uses github.event.pull_request.milestone.title to construct a file path for checking changelog entries. While this could potentially be used for path traversal, the impact is limited as the workflow only reads the changelog file and does not execute any code from it.",github.event.pull_request.milestone.title,,olivier.grisel@ensta.org,joel.nothman@gmail.com,,,,,,,,
Orange-OpenSource,https://github.com/Orange-OpenSource/hurl-manage-release/blob/HEAD/.github/workflows/accept-pull-request.yml,Untrusted Input,high,The workflow uses github.event.issue.title in a shell script that initializes environment variables. An attacker could craft a malicious issue title to inject arbitrary commands into the shell script.,github.event.issue.title,filipe.pinto@orange.com,filipe.pinto@orange.com,jeanchristophe.amiel@orange.com,fabrice.reix@orange.com,,,,,,,
owncloud,https://github.com/owncloud/uppy/blob/HEAD/.github/workflows/e2e.yml,PR Target,high,"This workflow uses the `pull_request_target` trigger and checks out the PR's code using `actions/checkout@v3`. It then executes the PR's code by running `corepack yarn install`, `corepack yarn build`, and `corepack yarn run e2e:ci`. This last command runs end-to-end browser tests, which could potentially execute arbitrary code from the PR. Additionally, the workflow accesses several secrets, including `COMPANION_UNSPLASH_KEY`, `COMPANION_UNSPLASH_SECRET`, `COMPANION_AWS_KEY`, `COMPANION_AWS_SECRET`, `COMPANION_AWS_BUCKET`, `COMPANION_AWS_REGION`, `TRANSLOADIT_KEY`, `TRANSLOADIT_SECRET`, and `TRANSLOADIT_TEMPLATE`. This allows a malicious PR to execute arbitrary code on the runner with access to sensitive information.",,finstaden@gmail.com,finstaden@gmail.com,duhamelantoine1995@gmail.com,merlijn@soverin.net,,,,,,,
slackapi,https://github.com/slackapi/slack-github-action/blob/HEAD/.github/workflows/main.yml,PR Target,high,"This workflow uses the `pull_request_target` trigger and checks out the PR's code using `github.event.pull_request.head.sha`. It then executes various integration tests, including posting messages to Slack using bot tokens and webhooks. This grants a malicious PR author the ability to execute arbitrary code within the workflow runner, potentially gaining access to sensitive secrets like `SLACK_BOT_TOKEN`, `SLACK_WEBHOOK_URL`, and `SLACK_INCOMING_WEBHOOK_URL`. Due to the potential access to sensitive Slack credentials, the severity is rated as high.",,fmaj@slack-corp.com,fmaj@slack-corp.com,ethan.zimbelman@me.com,stevengill97@gmail.com,umbertix@gmail.com,stevengill@slack-corp.com,,,,,
elastic,https://github.com/elastic/cloudbeat/blob/HEAD/.github/workflows/rerun-flaky-workflows.yml,Untrusted Input,medium,"The workflow uses github.event.workflow_run.head_commit.author.name to display information about the workflow run. While this could potentially be used for information disclosure, the impact is limited as the workflow does not execute any code based on this input.",github.event.workflow_run.head_commit.author.name,,,,,,,,,,,
slackapi,https://github.com/slackapi/slack-health-score/blob/HEAD/.github/workflows/main.yml,PR Target,high,"This workflow uses the `pull_request_target` trigger and checks out the PR's code using `github.event.pull_request.head.sha`. It then runs tests and uploads coverage to CodeCov. It also uses a custom action that requires `codecov_token` and `github_token`. This grants a malicious PR author the ability to execute arbitrary code within the workflow runner, potentially gaining access to sensitive secrets like `CODECOV_TOKEN`, `FILS_CODECOV_API_TOKEN`, and `GITHUB_TOKEN`. Due to the potential access to sensitive CodeCov and GitHub credentials, the severity is rated as high.",,fmaj@slack-corp.com,awesomenitin847@gmail.com,fmaj@slack-corp.com,,,,,,,,
NVIDIA,https://github.com/NVIDIA/cccl/blob/HEAD/.github/workflows/project_automation_set_in_progress.yml,Untrusted Input,medium,"The workflow uses github.event.review.state in a conditional statement. While this could potentially be used for logic manipulation, the impact is limited as the workflow does not execute any code based on this input.",github.event.review.state,,bdice@bradleydice.com,,,,,,,,,
zendesk,https://github.com/zendesk/slack-github-action/blob/HEAD/.github/workflows/main.yml,PR Target,high,"This workflow uses the `pull_request_target` trigger and checks out the pull request's code using `actions/checkout`. It then executes the code using `npm ci`, `npm run build`, `npm test`, and accesses secrets like `SLACK_BOT_TOKEN`, `SLACK_WEBHOOK_URL`, and `SLACK_INCOMING_WEBHOOK_URL`. A malicious pull request could modify the code to steal these secrets or modify the repository's content.",,fmaj@slack-corp.com,fmaj@slack-corp.com,ethan.zimbelman@me.com,stevengill97@gmail.com,umbertix@gmail.com,stevengill@slack-corp.com,,,,,
zendesk,https://github.com/zendesk/action-dependabot-auto-merge/blob/HEAD/.github/workflows/pull_request_target.yml,PR Target,high,This workflow uses the `pull_request_target` trigger and checks out the pull request's code using `actions/checkout`. It then uses `dependabot/fetch-metadata` and `ahmadnassri/action-metadata` to gather information about the pull request. It also uses `gh pr review` and `gh pr merge` to automatically approve and merge dependabot PRs. A malicious pull request could potentially manipulate these actions to gain control of the repository.,,fmaj@slack-corp.com,ahmad@ahmadnassri.com,,,,,,,,,
rstudio,https://github.com/rstudio/academyDatasets/blob/HEAD/.github/workflows/pr-commands.yaml,Untrusted Input,high,"The workflow uses github.event.comment.body in a shell script and passes it to the desc::desc_bump_version function without proper sanitization, potentially allowing for code injection.",github.event.comment.body,garrick@adenbuie.com,garrick@adenbuie.com,,,,,,,,,
puppetlabs,https://github.com/puppetlabs/puppetlabs-sqlserver/blob/HEAD/.github/workflows/ci.yml,PR Target,high,"This workflow uses the `pull_request_target` trigger and checks out the pull request's code using `actions/checkout`. It then executes code from the PR using `bundle exec`, `rake`, and `bolt`. This allows a malicious pull request to execute arbitrary code on the runner with access to repository secrets.",,gavin.patton@puppet.com,jordan.breen@perforce.com,gavin.patton@puppet.com,,,,,,,,
getsentry,https://github.com/getsentry/hackweek-sentry-intellij-plugin/blob/HEAD/.github/workflows/release.yml,Untrusted Input,high,"The workflow uses github.event.release.body to update the changelog. While the provided code snippet doesn't directly execute this input in a shell, it's stored in an environment variable and later used in a 'gradlew patchChangelog' command. Depending on how 'gradlew patchChangelog' handles the input, this could potentially lead to code injection.",github.event.release.body,giancarlo.buenaflor@sentry.io,giancarlo.buenaflor@sentry.io,,,,,,,,,
ClickHouse,https://github.com/ClickHouse/ibis/blob/HEAD/.github/workflows/ibis-backends-cloud.yml,PR Target,high,"This workflow uses the `pull_request_target` trigger and checks out the PR's code using `github.event.pull_request.head.sha`. It then sets up various cloud backend environments (Snowflake, BigQuery) and runs tests against them. This grants a malicious PR author the ability to execute arbitrary code within the workflow runner, potentially gaining access to sensitive secrets like `DOCS_BOT_APP_ID`, `DOCS_BOT_APP_PRIVATE_KEY`, `GCP_CREDENTIALS`, `SNOWFLAKE_USER`, `SNOWFLAKE_PASSWORD`, `SNOWFLAKE_ACCOUNT`, `SNOWFLAKE_DATABASE`, `SNOWFLAKE_SCHEMA`, and `SNOWFLAKE_WAREHOUSE`. Due to the potential access to numerous high-value cloud credentials, the severity is rated as high.",,gil@forsyth.dev,gil@forsyth.dev,,,,,,,,,
conan-io,https://github.com/conan-io/conan-clion-plugin/blob/HEAD/.github/workflows/release.yml,Untrusted Input,high,"The workflow uses github.event.release.body to extract the changelog and passes it to the patchChangelog Gradle task without proper sanitization, potentially allowing for code injection.",github.event.release.body,git@rinconblanco.es,,,,,,,,,,
huggingface,https://github.com/huggingface/trl/blob/HEAD/.github/workflows/benchmark.yml,Untrusted Input,high,"The workflow uses github.event.comment.body to determine which benchmark script to run and executes it using 'bash'. A malicious actor could craft a comment that includes shell commands, leading to arbitrary code execution.",github.event.comment.body,graniet75@gmail.com,graniet75@gmail.com,remy.trompier@gmail.com,costa.huang@outlook.com,,,,,,,
WordPress,https://github.com/WordPress/gutenberg/blob/HEAD/.github/workflows/upload-release-to-plugin-repo.yml,Untrusted Input,high,"The workflow uses github.event.release.body to update the changelog and includes it in a 'cat' command. While the provided code snippet uses a heredoc to handle the input, it's unclear if this is sufficient to prevent potential code injection depending on how the input is later processed.",github.event.release.body,grzegorz@gziolo.pl,grzegorz@gziolo.pl,ockham@raz.or.at,,,,,,,,
prusa3d,https://github.com/prusa3d/Prusa-Firmware/blob/HEAD/.github/workflows/pr-size.yml,PR Target,high,This workflow uses the `pull_request_target` trigger and checks out the pull request's code. It then executes `pr-size.sh` which is located within the checked out PR code. This allows for arbitrary code execution within the workflow.,,gudni.m.g@gmail.com,gudni.m.g@gmail.com,3d.gussner@gmail.com,wavexx@thregr.org,,,,,,,
prusa3d,https://github.com/prusa3d/Prusa-Firmware-MMU/blob/HEAD/.github/workflows/pr-size.yml,PR Target,high,This workflow uses the `pull_request_target` trigger and checks out the pull request's code. It then executes `pr-size.sh` which is located within the checked out PR code. This allows for arbitrary code execution within the workflow.,,gudni.m.g@gmail.com,3d.gussner@gmail.com,gudni.m.g@gmail.com,,,,,,,,
aliyun,https://github.com/aliyun/terraform-provider-alicloud/blob/HEAD/.github/workflows/pull_requests.yml,Untrusted Input,high,The workflow uses github.event.pull_request.title in a series of shell commands that check the PR title for specific patterns. A malicious actor could craft a PR title containing shell metacharacters to inject arbitrary commands into these shell commands.,github.event.pull_request.title,guimin.hgm@alibaba-inc.com,guimin.hgm@alibaba-inc.com,wanghx0991@outlook.com,,,,,,,,
alteryx,https://github.com/alteryx/woodwork/blob/HEAD/.github/workflows/woodwork_main_airflow_performance_tests.yaml,Untrusted Input,high,The workflow uses github.event.head_commit.author.name directly in a curl command that interacts with an Airflow server. A malicious actor could potentially craft a commit with a specially crafted author name to inject malicious code into the command.,github.event.head_commit.author.name,gvsheni@gmail.com,gvsheni@gmail.com,,,,,,,,,
auth0,https://github.com/auth0/auth0-python/blob/HEAD/.github/workflows/test.yml,PR Target,high,"This workflow uses 'pull_request_target', checks out the PR code, and executes code from the PR using 'poetry run pytest'. This allows for arbitrary code execution in the context of the workflow. The severity is high because it involves direct execution of untrusted code.",,hello@evansims.com,adamjmcgrath@gmail.com,hello@evansims.com,,,,,,,,
auth0,https://github.com/auth0/nextjs-auth0/blob/HEAD/.github/workflows/browserstack.yml,PR Target,high,"Similar to the auth0-spa-js browserstack workflow, this uses pull_request_target and actions/checkout to check out the head commit of a PR. It then runs build scripts and tests on the checked out code. The authorize job provides unclear protection, as secrets are still accessible. Executing untrusted code from a PR with secrets access is high severity.",,hello@evansims.com,adam.mcgrath@auth0.com,adamjmcgrath@gmail.com,hello@evansims.com,,,,,,,
auth0,https://github.com/auth0/auth0-react/blob/HEAD/.github/workflows/browserstack.yml,PR Target,high,"Same issue as previous browserstack workflows. Uses pull_request_target, checks out PR head commit, then runs build and tests on the untrusted code. Authorize job provides unclear protection as secrets are still accessible. High severity due to executing untrusted code with secrets.",,hello@evansims.com,frederik.prijck@auth0.com,hello@evansims.com,,,,,,,,
auth0,https://github.com/auth0/auth0-react/blob/HEAD/.github/workflows/integration.yml,PR Target,high,"Uses pull_request_target and actions/checkout to check out PR head commit. Then executes the checked out code via build and test scripts, with secrets accessible. Authorize job does not clearly prevent this. High severity due to untrusted code execution with secrets.",,hello@evansims.com,ewan.harris@okta.com,frederik.prijck@auth0.com,hello@evansims.com,,,,,,,
auth0,https://github.com/auth0/auth0-angular/blob/HEAD/.github/workflows/browserstack.yml,PR Target,high,"Same issue as other browserstack workflows. Uses pull_request_target, checks out PR, builds and tests the untrusted code with secrets accessible. Authorize job doesn't clearly prevent this. High severity due to code execution with secrets.",,hello@evansims.com,ewan.harris@okta.com,frederik.prijck@auth0.com,hello@evansims.com,,,,,,,
coreos,https://github.com/coreos/coreos-installer-dracut/blob/HEAD/.github/workflows/integration.yaml,Untrusted Input,high,"The workflow uses github.event.comment.body to extract repository and branch information, which is then used in 'actions/checkout' steps and 'make rpm' commands. A malicious actor could craft a comment that includes shell commands, leading to arbitrary code execution during the build process.",github.event.comment.body,henrywangxf@me.com,henrywangxf@me.com,,,,,,,,,
cloudposse,https://github.com/cloudposse/terraform-aws-mwaa/blob/HEAD/.github/workflows/auto-format.yml,PR Target,high,"This workflow uses the `pull_request_target` trigger and checks out the pull request's code using a personal access token. It then executes `make` with a dynamically generated Makefile, which could be influenced by the PR's content. This allows for arbitrary code execution within the workflow.",,htplbc@gmail.com,htplbc@gmail.com,,,,,,,,,
AliyunContainerService,https://github.com/AliyunContainerService/ackdistro/blob/HEAD/.github/workflows/auto-build.yml,Untrusted Input,high,"The workflow uses github.event.comment.body to extract tag and branch information, which are then used in shell commands. A malicious actor could craft a comment containing shell metacharacters to inject arbitrary commands into these shell commands.",github.event.comment.body,huaiyou.cyz@alibaba-inc.com,huaiyou.cyz@alibaba-inc.com,wf01031309@alibaba-inc.com,,,,,,,,
AliyunContainerService,https://github.com/AliyunContainerService/ackdistro/blob/HEAD/.github/workflows/test.yml,Untrusted Input,high,"The workflow uses github.event.comment.body to extract imageName, network, e2e, and hold information, which are then used in a 'ginkgo' command. A malicious actor could craft a comment containing shell metacharacters to inject arbitrary commands into the 'ginkgo' command.",github.event.comment.body,huaiyou.cyz@alibaba-inc.com,huaiyou.cyz@alibaba-inc.com,wf01031309@alibaba-inc.com,,,,,,,,
ClickHouse,https://github.com/ClickHouse/retina/blob/HEAD/.github/workflows/commit-message.yaml,Untrusted Input,high,The workflow uses github.event.pull_request.title in a shell script that verifies the commit message format. An attacker could craft a malicious pull request title to inject arbitrary commands into the shell script.,github.event.pull_request.title,jac.massa0908@gmail.com,jac.massa0908@gmail.com,vakr@microsoft.com,,,,,,,,
ansible,https://github.com/ansible/gcp-cloud-sql-proxy/blob/HEAD/.github/workflows/lint.yaml,PR Target,high,"This workflow uses the `pull_request_target` trigger and checks out the pull request's code using `actions/checkout`. It then executes the code using `go mod tidy`, `git diff`, and `golangci-lint run`. Since `pull_request_target` has write access to the repository, a malicious pull request could modify the code to steal secrets or modify the repository's content.",,jackwoth@google.com,jackwoth@google.com,enocom@google.com,,,,,,,,
ansible,https://github.com/ansible/gcp-cloud-sql-proxy/blob/HEAD/.github/workflows/tests.yaml,PR Target,high,"This workflow uses the `pull_request_target` trigger and checks out the pull request's code using `actions/checkout`. It then executes the code using `go build` and `go test`. Since `pull_request_target` has write access to the repository and access to secrets, a malicious pull request could modify the code to steal secrets or modify the repository's content.",,jackwoth@google.com,jackwoth@google.com,enocom@google.com,shubhadayini@google.com,,,,,,,
GoogleCloudPlatform,https://github.com/GoogleCloudPlatform/alloydb-java-connector/blob/HEAD/.github/workflows/ci.yaml,PR Target,high,"This workflow uses the `pull_request_target` trigger, checks out the pull request's code using `actions/checkout`, and then executes scripts using `.kokoro/build.sh`, `.kokoro/build.bat`, `.kokoro/dependencies.sh`, and `.kokoro/check_coverage.sh`. This allows an attacker to execute arbitrary code in the context of the workflow, potentially gaining access to secrets or modifying the repository.",,jackwoth@google.com,nancyhong@google.com,jackwoth@google.com,enocom@google.com,,,,,,,
GoogleCloudPlatform,https://github.com/GoogleCloudPlatform/alloydb-python-connector/blob/HEAD/.github/workflows/coverage.yaml,PR Target,high,"This workflow uses the `pull_request_target` trigger, checks out the pull request's code using `actions/checkout`, and then executes code using `pip install`, `nox`, and `coverage`. This allows an attacker to execute arbitrary code in the context of the workflow, potentially gaining access to secrets or modifying the repository.",,jackwoth@google.com,jackwoth@google.com,,,,,,,,,
GoogleCloudPlatform,https://github.com/GoogleCloudPlatform/alloydb-python-connector/blob/HEAD/.github/workflows/lint.yaml,PR Target,high,"This workflow uses the `pull_request_target` trigger, checks out the pull request's code using `actions/checkout`, and then executes code using `pip install` and `nox`. This allows an attacker to execute arbitrary code in the context of the workflow, potentially gaining access to secrets or modifying the repository.",,jackwoth@google.com,jackwoth@google.com,,,,,,,,,
GoogleCloudPlatform,https://github.com/GoogleCloudPlatform/alloydb-python-connector/blob/HEAD/.github/workflows/tests.yaml,PR Target,high,"This workflow uses the `pull_request_target` trigger, checks out the pull request's code using `actions/checkout`, and then executes code using `pip install` and `nox`. This allows an attacker to execute arbitrary code in the context of the workflow, potentially gaining access to secrets or modifying the repository.",,jackwoth@google.com,jackwoth@google.com,,,,,,,,,
TryGhost,https://github.com/TryGhost/statusboard/blob/HEAD/.github/workflows/publish.yml,PR Target,high,"This workflow uses the `pull_request_target` trigger and checks out the PR's code using `actions/checkout@v3`. It then executes the PR's code by running `npm i`, `npm run build -w www`, and deploys the built website to GitHub Pages. This allows a malicious PR to execute arbitrary code on the runner and potentially deploy malicious content to the website.",,JamesMGreene@github.com,JamesMGreene@github.com,luke@lukekarrys.com,,,,,,,,
SAP,https://github.com/SAP/machine-learning-lab/blob/HEAD/.github/workflows/release-pipeline.yml,Untrusted Input,high,"The workflow uses github.event.milestone.title to extract a version number, which is then used in various shell commands, including 'sed', 'echo', and 'hub pull-request'. A malicious actor could create a milestone with a title containing shell metacharacters to inject arbitrary commands into these shell commands.",github.event.milestone.title,jan.kielmann@sap.com,jan.kielmann@sap.com,,,,,,,,,
pact-foundation,https://github.com/pact-foundation/pact-jvm/blob/HEAD/.github/workflows/issue-comment-created.yml,None,very low,"While the workflow uses `github.event.comment.body` and `github.event.issue.title`, it does so within the context of `echo` commands and as arguments for the `atlassian/gajira-create` action. These usages treat the input as data, not executable code, making it non-exploitable for command injection.",github.event.comment.body and github.event.issue.title,,ronald.holshausen@smartbear.com,,,,,,,,,
pact-foundation,https://github.com/pact-foundation/pact-reference/blob/HEAD/.github/workflows/issue-comment-created.yml,None,very low,"Similar to the previous workflow, this one uses `github.event.comment.body` and `github.event.issue.title` within `echo` commands and as arguments for the `atlassian/gajira-create` action. This usage is not vulnerable to command injection.",github.event.comment.body and github.event.issue.title,,,,,,,,,,,
pact-foundation,https://github.com/pact-foundation/.github/blob/HEAD/.github/workflows/smartbear-issue-comment-created.yml,None,very low,"The workflow uses `github.event.comment.body`, `github.event.issue.title`, and `github.event.issue.body` within `echo` commands and as arguments for the `atlassian/gajira-create` action. These usages are not vulnerable to command injection.","github.event.comment.body, github.event.issue.title, and github.event.issue.body",,josh@jpellis.me,ilia.mogilevsky@smartbear.com,ilia@mogilevsky.com.au,,,,,,,
pact-foundation,https://github.com/pact-foundation/.github/blob/HEAD/.github/workflows/smartbear-pull-request-assigned.yaml,None,very low,The workflow uses `github.event.pull_request.title` within an `echo` command and as an argument for the `atlassian/gajira-find-issue-key` action. This usage is not vulnerable to command injection.,github.event.pull_request.title,,ilia@mogilevsky.com.au,,,,,,,,,
pact-foundation,https://github.com/pact-foundation/.github/blob/HEAD/.github/workflows/smartbear-pull-request-comment-created.yaml,None,very low,The workflow uses `github.event.issue.title` within an `echo` command and as an argument for the `atlassian/gajira-find-issue-key` action. This usage is not vulnerable to command injection.,github.event.issue.title,,ilia@mogilevsky.com.au,,,,,,,,,
pact-foundation,https://github.com/pact-foundation/.github/blob/HEAD/.github/workflows/smartbear-pull-request-merged.yaml,None,very low,The workflow uses `github.event.pull_request.title` within an `echo` command and as an argument for the `tomhjp/gh-action-jira-search` action. This usage is not vulnerable to command injection.,github.event.pull_request.title,,you@saf.dev,ilia.mogilevsky@smartbear.com,ilia@mogilevsky.com.au,,,,,,,
pact-foundation,https://github.com/pact-foundation/.github/blob/HEAD/.github/workflows/smartbear-pull-request-review-submitted.yaml,None,very low,The workflow uses `github.event.pull_request.title` within an `echo` command and as an argument for the `atlassian/gajira-find-issue-key` action. This usage is not vulnerable to command injection.,github.event.pull_request.title,,ilia@mogilevsky.com.au,,,,,,,,,
zendesk,https://github.com/zendesk/karpenter/blob/HEAD/.github/workflows/approval-comment.yml,Untrusted Input,medium,"The workflow uses `github.event.review.commit_id` in a shell script to write to a file. While the impact is limited to file manipulation within the runner, a malicious actor could potentially use this to disrupt the workflow or plant malicious files.",github.event.review.commit_id,,,,,,,,,,,
apache,https://github.com/apache/hudi-rs/blob/HEAD/.github/workflows/pr.yml,Untrusted Input,low,"The workflow uses `github.event.pull_request.title` as input to the `commitlint` command. While this could potentially lead to unexpected behavior in the linting process, it's unlikely to allow arbitrary code execution.",github.event.pull_request.title,,,,,,,,,,,
npm,https://github.com/npm/ci-detect/blob/HEAD/.github/workflows/pull-request.yml,Untrusted Input,low,"The workflow uses `github.event.pull_request.title` as input to the `commitlint` command. While this could potentially lead to unexpected behavior in the linting process, it's unlikely to allow arbitrary code execution.",github.event.pull_request.title,,luke@lukekarrys.com,gar+gh@danger.computer,,,,,,,,
npm,https://github.com/npm/move-file/blob/HEAD/.github/workflows/pull-request.yml,Untrusted Input,low,"The workflow uses `github.event.pull_request.title` as input to the `commitlint` command. While this could potentially lead to unexpected behavior in the linting process, it's unlikely to allow arbitrary code execution.",github.event.pull_request.title,,luke@lukekarrys.com,gar+gh@danger.computer,,,,,,,,
npm,https://github.com/npm/config/blob/HEAD/.github/workflows/pull-request.yml,Untrusted Input,low,"The workflow uses `github.event.pull_request.title` as input to the `commitlint` command. While this could potentially lead to unexpected behavior in the linting process, it's unlikely to allow arbitrary code execution.",github.event.pull_request.title,,luke@lukekarrys.com,quitlahok@gmail.com,,,,,,,,
npm,https://github.com/npm/npm-birthday/blob/HEAD/.github/workflows/pull-request.yml,Untrusted Input,low,"The workflow uses `github.event.pull_request.title` as input to the `commitlint` command. While this could potentially lead to unexpected behavior in the linting process, it's unlikely to allow arbitrary code execution.",github.event.pull_request.title,,luke@lukekarrys.com,quitlahok@gmail.com,,,,,,,,
npm,https://github.com/npm/exec/blob/HEAD/.github/workflows/pull-request.yml,Untrusted Input,low,"The workflow uses `github.event.pull_request.title` as input to the `commitlint` command. While this could potentially lead to unexpected behavior in the linting process, it's unlikely to allow arbitrary code execution.",github.event.pull_request.title,,luke@lukekarrys.com,gar+gh@danger.computer,,,,,,,,
npm,https://github.com/npm/nock-registry/blob/HEAD/.github/workflows/pull-request.yml,Untrusted Input,low,"The workflow uses `github.event.pull_request.title` as input to the `commitlint` command. While this could potentially lead to unexpected behavior in the linting process, it's unlikely to allow arbitrary code execution.",github.event.pull_request.title,,luke@lukekarrys.com,fritzy@github.com,,,,,,,,
npm,https://github.com/npm/publish-test/blob/HEAD/.github/workflows/pull-request.yml,Untrusted Input,low,"The workflow uses `github.event.pull_request.title` as input to the `commitlint` command. While this could potentially lead to unexpected behavior in the linting process, it's unlikely to allow arbitrary code execution.",github.event.pull_request.title,,gar+gh@danger.computer,,,,,,,,,
fsprojects,https://github.com/fsprojects/ExcelFinancialFunctions/blob/HEAD/.github/workflows/release.yml,Untrusted Input,high,"The workflow uses github.event.release.body in a dotnet pack command without proper sanitization, potentially allowing for code injection.",github.event.release.body,jcoliz@outlook.com,jcoliz@outlook.com,,,,,,,,,
scikit-learn,https://github.com/scikit-learn/scikit-learn-benchmarks/blob/HEAD/.github/workflows/check_last_run.yml,Untrusted Input,high,"The workflow uses github.event.head_commit.message to extract a commit hash, which is then used in shell commands to check benchmark results. A malicious actor could craft a commit message containing shell metacharacters to inject arbitrary commands into these shell commands.",github.event.head_commit.message,jeremiedbb@yahoo.fr,jeremiedbb@yahoo.fr,,,,,,,,,
openshift,https://github.com/openshift/loki/blob/HEAD/.github/workflows/operator-check-prepare-release-commit.yml,Untrusted Input,high,The workflow uses github.event.pull_request.title in a shell script that extracts a semver version. An attacker could craft a malicious pull request title to inject arbitrary commands into the shell script.,github.event.pull_request.title,jmarcal@redhat.com,jmarcal@redhat.com,,,,,,,,,
webdriverio,https://github.com/webdriverio/appium-boilerplate/blob/HEAD/.github/workflows/e2e-android-app.yml,Both,medium,"The workflow uses `github.event.pull_request.title` in a `grep` command to check for specific dependencies. This usage treats the input as data, not executable code, making it non-exploitable for command injection.. This workflow uses the `pull_request_target` trigger and checks out the PR's code using `actions/checkout@v4`. It then runs `npm ci` and executes tests using `npm run android.sauce.emulators.app.eu`. While it doesn't directly execute arbitrary code, a malicious PR could potentially modify the test scripts to include malicious code or exfiltrate data.",github.event.pull_request.title,,wim@wswebcreation.nl,,,,,,,,,
webdriverio,https://github.com/webdriverio/visual-testing/blob/HEAD/.github/workflows/tests.yml,Both,medium,"The workflow uses `github.event.pull_request.title` in regular expression matching to determine which tests to run. While this could potentially lead to unexpected test execution, it's unlikely to allow arbitrary code execution.. This workflow uses the `pull_request_target` trigger and checks out the PR's code using `actions/checkout@v3`. It then runs `pnpm install`, `pnpm build`, and executes tests using `pnpm test`, `pnpm test.saucelabs.desktop`, etc. While it doesn't directly execute arbitrary code, a malicious PR could potentially modify the build or test scripts to include malicious code or exfiltrate data.",github.event.pull_request.title,,wim@wswebcreation.nl,git@bromann.dev,,,,,,,,
Azure,https://github.com/Azure/karpenter-provider-azure/blob/HEAD/.github/workflows/approval-comment.yaml,Untrusted Input,medium,"The workflow uses `github.event.pull_request.number` and `github.event.review.commit_id` in a shell script to write to a file. While the impact is limited to file manipulation within the runner, a malicious actor could potentially use this to disrupt the workflow or plant malicious files.",github.event.pull_request.number and github.event.review.commit_id,,Charlie.McBride@microsoft.com,,,,,,,,,
Samsung,https://github.com/Samsung/Universum/blob/HEAD/.github/workflows/telegram-bot.yml,Untrusted Input,medium,"The workflow uses various event data, including `github.event.pull_request`, `github.event.comment`, `github.event.review`, and `github.event.workflow_run`, to construct messages sent to a Telegram bot. While the primary risk is information disclosure, a malicious actor could potentially craft inputs that lead to the execution of arbitrary commands within the Telegram bot environment if the bot itself is vulnerable.","github.event.pull_request, github.event.comment, github.event.review, and github.event.workflow_run",,,,,,,,,,,
newrelic,https://github.com/newrelic/entity-definitions/blob/HEAD/.github/workflows/validate-definition.yml,PR Target,high,"This workflow uses the `pull_request_target` trigger and checks out the PR's code using `actions/checkout@v4`. It then executes the PR's code by running `npm --prefix validator run check-pr` and `npm --prefix validator run sanitize-dashboards`. The `check-pr` script has access to the `GITHUB_TOKEN` secret, which grants write access to the repository. This allows a malicious PR to execute arbitrary code on the runner with write access to the repository.",,joanpujol@gmail.com,joanpujol@gmail.com,a.whole.dev@gmail.com,pkuznetsov@pixielabs.ai,irenemlcarron@gmail.com,,,,,,
pusher,https://github.com/pusher/pusher-http-ruby/blob/HEAD/.github/workflows/release.yml,Untrusted Input,high,The workflow uses github.event.pull_request.body in a shell script that prepares a changelog file. An attacker could craft a malicious pull request body to inject arbitrary commands into the shell script.,github.event.pull_request.body,jon.elverkilde@pusher.com,jon.elverkilde@pusher.com,,,,,,,,,
pusher,https://github.com/pusher/pusher-http-php/blob/HEAD/.github/workflows/release.yml,Untrusted Input,high,The workflow uses github.event.pull_request.body in a shell script that prepares a changelog file. An attacker could craft a malicious pull request body to inject arbitrary commands into the shell script.,github.event.pull_request.body,jon.elverkilde@pusher.com,jon.elverkilde@pusher.com,,,,,,,,,
pusher,https://github.com/pusher/pusher-http-dotnet/blob/HEAD/.github/workflows/release.yml,Untrusted Input,high,The workflow uses github.event.pull_request.body in a shell script that prepares a changelog file. An attacker could craft a malicious pull request body to inject arbitrary commands into the shell script.,github.event.pull_request.body,jon.elverkilde@pusher.com,meena.alfons@messagebird.com,jon.elverkilde@pusher.com,,,,,,,,
pusher,https://github.com/pusher/pusher-websocket-dotnet/blob/HEAD/.github/workflows/release.yml,Untrusted Input,high,The workflow uses github.event.pull_request.body in a shell script that prepares a changelog file. An attacker could craft a malicious pull request body to inject arbitrary commands into the shell script.,github.event.pull_request.body,jon.elverkilde@pusher.com,meena.alfons@messagebird.com,jon.elverkilde@pusher.com,,,,,,,,
JetBrains,https://github.com/JetBrains/Grammar-Kit/blob/HEAD/.github/workflows/release.yml,Untrusted Input,medium,"The workflow uses github.event.release.body to update the changelog file. While this doesn't directly allow code execution, a malicious actor could craft a release body containing malicious markdown content, potentially leading to cross-site scripting (XSS) vulnerabilities when the changelog is viewed.",github.event.release.body,,yann.cebron@jetbrains.com,jakub.chrzanowski@jetbrains.com,,,,,,,,
JetBrains,https://github.com/JetBrains/idea-gitignore/blob/HEAD/.github/workflows/release.yml,Untrusted Input,medium,"The workflow uses github.event.release.body to update the changelog file. While this doesn't directly allow code execution, a malicious actor could craft a release body containing malicious markdown content, potentially leading to cross-site scripting (XSS) vulnerabilities when the changelog is viewed.",github.event.release.body,,jakub.chrzanowski@jetbrains.com,,,,,,,,,
JetBrains,https://github.com/JetBrains/intellij-platform-gradle-plugin/blob/HEAD/.github/workflows/release.yml,Untrusted Input,medium,"The workflow uses github.event.release.body to update the changelog file. While this doesn't directly allow code execution, a malicious actor could craft a release body containing malicious markdown content, potentially leading to cross-site scripting (XSS) vulnerabilities when the changelog is viewed.",github.event.release.body,,jakub.chrzanowski@jetbrains.com,yann.cebron@jetbrains.com,,,,,,,,
JetBrains,https://github.com/JetBrains/gradle-grammar-kit-plugin/blob/HEAD/.github/workflows/release.yml,Untrusted Input,medium,"The workflow uses github.event.release.body to update the changelog file. While this doesn't directly allow code execution, a malicious actor could craft a release body containing malicious markdown content, potentially leading to cross-site scripting (XSS) vulnerabilities when the changelog is viewed.",github.event.release.body,,jakub.chrzanowski@jetbrains.com,,,,,,,,,
JetBrains,https://github.com/JetBrains/azure-tools-for-intellij/blob/HEAD/.github/workflows/release.yml,Untrusted Input,medium,"The workflow uses github.event.release.body to update the changelog file. While this doesn't directly allow code execution, a malicious actor could craft a release body containing malicious markdown content, potentially leading to cross-site scripting (XSS) vulnerabilities when the changelog is viewed.",github.event.release.body,,rival.abdrakhmanov@gmail.com,,,,,,,,,
JetBrains,https://github.com/JetBrains/intellij-platform-plugin-template/blob/HEAD/.github/workflows/release.yml,Untrusted Input,medium,"The workflow uses github.event.release.body to update the changelog file. While this doesn't directly allow code execution, a malicious actor could craft a release body containing malicious markdown content, potentially leading to cross-site scripting (XSS) vulnerabilities when the changelog is viewed.",github.event.release.body,,jakub.chrzanowski@jetbrains.com,jongwooo.han@gmail.com,strajk@me.com,jakob.malezic@gmail.com,baptiste.lecocq@gmail.com,fedor.korotkov@gmail.com,nbadal@smugmug.com,,,
JetBrains,https://github.com/JetBrains/gradle-changelog-plugin/blob/HEAD/.github/workflows/release.yml,Untrusted Input,medium,"The workflow uses github.event.release.body to update the changelog file. While this doesn't directly allow code execution, a malicious actor could craft a release body containing malicious markdown content, potentially leading to cross-site scripting (XSS) vulnerabilities when the changelog is viewed.",github.event.release.body,,jakub.chrzanowski@jetbrains.com,danidani95dani@gmail.com,,,,,,,,
JetBrains,https://github.com/JetBrains/pest-intellij/blob/HEAD/.github/workflows/release.yml,Untrusted Input,medium,"The workflow uses github.event.release.body to update the changelog file. While this doesn't directly allow code execution, a malicious actor could craft a release body containing malicious markdown content, potentially leading to cross-site scripting (XSS) vulnerabilities when the changelog is viewed.",github.event.release.body,,oliver@worksome.com,olivernybroe@gmail.com,,,,,,,,
JetBrains,https://github.com/JetBrains/tinygo-plugin/blob/HEAD/.github/workflows/release.yml,Untrusted Input,medium,"The workflow uses github.event.release.body to update the changelog file. While this doesn't directly allow code execution, a malicious actor could craft a release body containing malicious markdown content, potentially leading to cross-site scripting (XSS) vulnerabilities when the changelog is viewed.",github.event.release.body,,nikita.mironov@jetbrains.com,artem.khvastunov@jetbrains.com,pleomaxx3002@gmail.com,,,,,,,
JetBrains,https://github.com/JetBrains/EzArgs/blob/HEAD/.github/workflows/release.yml,Untrusted Input,medium,"The workflow uses github.event.release.body to update the changelog file. While this doesn't directly allow code execution, a malicious actor could craft a release body containing malicious markdown content, potentially leading to cross-site scripting (XSS) vulnerabilities when the changelog is viewed.",github.event.release.body,,a.g.pirogov@gmail.com,alexander.pirogov@jetbrains.com,,,,,,,,
JetBrains,https://github.com/JetBrains/datagrip-drivers-plugin/blob/HEAD/.github/workflows/release.yml,Untrusted Input,medium,"The workflow uses github.event.release.body to update the changelog file. While this doesn't directly allow code execution, a malicious actor could craft a release body containing malicious markdown content, potentially leading to cross-site scripting (XSS) vulnerabilities when the changelog is viewed.",github.event.release.body,,eugene.petrenko@gmail.com,,,,,,,,,
JetBrains,https://github.com/JetBrains/EnhancedUnrealEngineDocumentation/blob/HEAD/.github/workflows/release.yml,Untrusted Input,medium,"The workflow uses github.event.release.body to update the changelog file. While this doesn't directly allow code execution, a malicious actor could craft a release body containing malicious markdown content, potentially leading to cross-site scripting (XSS) vulnerabilities when the changelog is viewed.",github.event.release.body,,a.g.pirogov@gmail.com,,,,,,,,,
pusher,https://github.com/pusher/push-notifications-ruby/blob/HEAD/.github/workflows/release.yml,Untrusted Input,high,The workflow uses github.event.pull_request.body in a shell script that prepares a changelog file. An attacker could craft a malicious pull request body to inject arbitrary commands into the shell script.,github.event.pull_request.body,jon.elverkilde@pusher.com,jon.elverkilde@pusher.com,,,,,,,,,
Unity-Technologies,https://github.com/Unity-Technologies/ROS-TCP-Endpoint/blob/HEAD/.github/workflows/jira-link.yaml,Untrusted Input,low,"The workflow uses github.event.pull_request.title and github.event.pull_request.head.ref in an echo command and for comparison in a conditional statement. While this doesn't directly allow code execution, a malicious actor could create a pull request with a crafted title or branch name containing special characters that could lead to unexpected behavior or output in the workflow logs.",github.event.pull_request.title and github.event.pull_request.head.ref,,,,,,,,,,,
Unity-Technologies,https://github.com/Unity-Technologies/ROS-TCP-Connector/blob/HEAD/.github/workflows/jira-link.yaml,Untrusted Input,low,"The workflow uses github.event.pull_request.title and github.event.pull_request.head.ref in an echo command and for comparison in a conditional statement. While this doesn't directly allow code execution, a malicious actor could create a pull request with a crafted title or branch name containing special characters that could lead to unexpected behavior or output in the workflow logs.",github.event.pull_request.title and github.event.pull_request.head.ref,,,,,,,,,,,
Unity-Technologies,https://github.com/Unity-Technologies/Unity-Robotics-Hub/blob/HEAD/.github/workflows/jira-link.yaml,Untrusted Input,low,"The workflow uses github.event.pull_request.title and github.event.pull_request.head.ref in an echo command and for comparison in a conditional statement. While this doesn't directly allow code execution, a malicious actor could create a pull request with a crafted title or branch name containing special characters that could lead to unexpected behavior or output in the workflow logs.",github.event.pull_request.title and github.event.pull_request.head.ref,,,,,,,,,,,
Unity-Technologies,https://github.com/Unity-Technologies/URDF-Importer/blob/HEAD/.github/workflows/jira-link.yaml,Untrusted Input,low,"The workflow uses github.event.pull_request.title and github.event.pull_request.head.ref in an echo command and for comparison in a conditional statement. While this doesn't directly allow code execution, a malicious actor could create a pull request with a crafted title or branch name containing special characters that could lead to unexpected behavior or output in the workflow logs.",github.event.pull_request.title and github.event.pull_request.head.ref,,,,,,,,,,,
Unity-Technologies,https://github.com/Unity-Technologies/Robotics-Object-Pose-Estimation/blob/HEAD/.github/workflows/jira-link.yaml,Untrusted Input,low,"The workflow uses github.event.pull_request.title and github.event.pull_request.head.ref in an echo command and for comparison in a conditional statement. While this doesn't directly allow code execution, a malicious actor could create a pull request with a crafted title or branch name containing special characters that could lead to unexpected behavior or output in the workflow logs.",github.event.pull_request.title and github.event.pull_request.head.ref,,peifeng.jing@unity3d.com,,,,,,,,,
Unity-Technologies,https://github.com/Unity-Technologies/Robotics-Warehouse/blob/HEAD/.github/workflows/jira-link.yaml,Untrusted Input,low,"The workflow uses github.event.pull_request.title and github.event.pull_request.head.ref in an echo command and for comparison in a conditional statement. While this doesn't directly allow code execution, a malicious actor could create a pull request with a crafted title or branch name containing special characters that could lead to unexpected behavior or output in the workflow logs.",github.event.pull_request.title and github.event.pull_request.head.ref,,,,,,,,,,,
Unity-Technologies,https://github.com/Unity-Technologies/VHACD/blob/HEAD/.github/workflows/jira-link.yaml,Untrusted Input,low,"The workflow uses github.event.pull_request.title and github.event.pull_request.head.ref in an echo command and for comparison in a conditional statement. While this doesn't directly allow code execution, a malicious actor could create a pull request with a crafted title or branch name containing special characters that could lead to unexpected behavior or output in the workflow logs.",github.event.pull_request.title and github.event.pull_request.head.ref,,,,,,,,,,,
weaveworks,https://github.com/weaveworks/weave-gitops/blob/HEAD/.github/workflows/release.yaml,Untrusted Input,medium,"The workflow uses github.event.pull_request.body to create a changelog file that is passed to the goreleaser action. While this doesn't directly allow code execution, a malicious actor could craft a pull request body containing malicious markdown content that could potentially affect the goreleaser process or lead to vulnerabilities in the generated release artifacts.",github.event.pull_request.body,,yiannis@weave.works,jordan@weave.works,opudrovs@gmail.com,chanwit@weave.works,robin.sonefors@weave.works,max@e13.dev,jrryjcksn@gmail.com,,,
pusher,https://github.com/pusher/push-notifications-node/blob/HEAD/.github/workflows/release.yml,Untrusted Input,high,The workflow uses github.event.pull_request.body in a shell script that prepares a changelog file. An attacker could craft a malicious pull request body to inject arbitrary commands into the shell script.,github.event.pull_request.body,jon.elverkilde@pusher.com,jon.elverkilde@pusher.com,,,,,,,,,
puppetlabs,https://github.com/puppetlabs/puppetlabs-lvm/blob/HEAD/.github/workflows/ci.yml,PR Target,high,This workflow uses the `pull_request_target` trigger and checks out the pull request's code using `actions/checkout`. It then executes code from the PR using `bundle exec` and `rake`. This allows a malicious pull request to execute arbitrary code on the runner with access to repository secrets.,,jordan.breen@perforce.com,jordan.breen@perforce.com,,,,,,,,,
microsoft,https://github.com/microsoft/kiota/blob/HEAD/.github/workflows/project-auto-add.yml,Untrusted Input,medium,"The workflow uses github.event.issue.body to extract the SDK language. While this doesn't directly allow code execution, a malicious actor could craft an issue body containing special characters or unexpected formatting that could lead to incorrect language parsing or potential issues in subsequent workflow steps.",github.event.issue.body,,vibiret@microsoft.com,faithgikundi@microsoft.com,,,,,,,,
vercel,https://github.com/vercel/edge-runtime/blob/HEAD/.github/workflows/update.yml,PR Target,high,"This workflow uses the `pull_request_target` trigger and checks out the PR's code using `actions/checkout@v4`. It then executes `pnpm i --lockfile-only`, modifies the `pnpm-lock.yaml` file, and pushes the changes back to the repository. This allows a malicious PR to modify the repository's dependencies and potentially introduce malicious code.",,josefrancisco.verdu@gmail.com,josefrancisco.verdu@gmail.com,steven@ceriously.com,,,,,,,,
NREL,https://github.com/NREL/OpenStudio-resources/blob/HEAD/.github/workflows/pull_request.yml,Untrusted Input,high,"The workflow uses github.event.pull_request.body in a regular expression search without proper sanitization, potentially allowing for code injection.",github.event.pull_request.body,julien.marrec@gmail.com,julien.marrec@gmail.com,,,,,,,,,
cosmos,https://github.com/cosmos/cosmos-sdk/blob/HEAD/.github/workflows/dependabot-update-all.yml,Untrusted Input,high,"The workflow uses github.event.pull_request.title to extract dependency name and version, and then uses them in a shell script without proper sanitization, potentially allowing for code injection.",github.event.pull_request.title,julien@rbrt.fr,julien@rbrt.fr,emmanuel@orijtech.com,,,,,,,,
trailofbits,https://github.com/trailofbits/cosmos-sdk/blob/HEAD/.github/workflows/dependabot-update-all.yml,Untrusted Input,high,"The workflow uses github.event.pull_request.title to extract dependency information and uses it in a './scripts/go-update-dep-all.sh' command. A malicious actor could craft a PR title that includes shell commands, leading to arbitrary code execution.",github.event.pull_request.title,julien@rbrt.fr,julien@rbrt.fr,emmanuel@orijtech.com,,,,,,,,
microsoft,https://github.com/microsoft/hackers-ground/blob/HEAD/.github/workflows/csc-challenge-submitted.yaml,Untrusted Input,high,"The workflow uses github.event.issue.title and github.event.issue.body without proper sanitization in multiple steps, including passing them to a PowerShell script that interacts with external services. A malicious actor could create an issue with a crafted title or body containing malicious code, leading to arbitrary code execution on the runner. This could potentially allow exfiltration of secrets like GH_PAT, GITHUB_TOKEN, INSPECTORS, PAU_ON_CHALLENGE_SUBMITTED_URL, and CSC_DUE_DATE.",github.event.issue.title and github.event.issue.body,justin.yoojh@gmail.com,justin.yoojh@gmail.com,,,,,,,,,
microsoft,https://github.com/microsoft/hackers-ground/blob/HEAD/.github/workflows/csc-challenge-verified.yaml,Untrusted Input,high,"The workflow uses github.event.issue.title without proper sanitization in a PowerShell script. A malicious actor could create an issue with a crafted title containing malicious code, leading to arbitrary code execution on the runner. This could potentially allow exfiltration of secrets like GITHUB_TOKEN, PAU_ON_CHALLENGE_VERIFIED_URL, and DISCORD_WEBHOOK_URL.",github.event.issue.title,justin.yoojh@gmail.com,justin.yoojh@gmail.com,,,,,,,,,
chaitin,https://github.com/chaitin/lua-resty-t1k/blob/HEAD/.github/workflows/release.yml,Untrusted Input,high,"The workflow uses github.event.head_commit.message in a regular expression match and then uses the extracted version in a luarocks upload command without proper sanitization, potentially allowing for code injection.",github.event.head_commit.message,kaito.kaito.k@gmail.com,kaito.kaito.k@gmail.com,,,,,,,,,
hackclub,https://github.com/hackclub/OnBoard/blob/HEAD/.github/workflows/pull_request_gerbview.yml,PR Target,high,"This workflow uses the `pull_request_target` trigger and checks out the PR's code using `actions/checkout@v4`. It then executes a script from the PR's code using `actions/github-script@v7`. This script has access to the `ORPHEUS_PAT` or `GITHUB_TOKEN` secrets, which grant write access to the repository. This allows a malicious PR to execute arbitrary code on the runner with write access to the repository.",,karmanyaah.gh@malhotra.cc,karmanyaah.gh@malhotra.cc,karmanyaah.git@malhotra.cc,,,,,,,,
official-stockfish,https://github.com/official-stockfish/Stockfish/blob/HEAD/.github/workflows/clang-format.yml,PR Target,medium,"This workflow uses the `pull_request_target` trigger and checks out the PR's code using `actions/checkout@v4`. However, it only runs `clang-format` on the code and doesn't execute any other scripts from the PR. While this limits the potential for arbitrary code execution, it's still possible for a malicious PR to craft input that could exploit vulnerabilities in `clang-format` itself. The severity is marked as medium due to the limited attack surface.",,,disservin.social@gmail.com,,,,,,,,,
status-im,https://github.com/status-im/nixpkgs/blob/HEAD/.github/workflows/backport.yml,PR Target,low,"This workflow uses the `pull_request_target` trigger and checks out the PR's code using `actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b`. It then uses `korthout/backport-action@ef20d86abccbac3ee3a73cb2efbdc06344c390e5` to create backport PRs. While this action has write access to the repository, it doesn't appear to execute any code from the PR itself. The severity is marked as low because the potential for exploitation relies on vulnerabilities in the `korthout/backport-action` itself.",,,victor@engmark.name,silvan.mosberger@tweag.io,hexa@darmstadt.ccc.de,winter@winter.cafe,varunsh@stepsecurity.io,joerg@thalheim.io,domen@dev.si,mail@nh2.me,,
aliyun,https://github.com/aliyun/alibabacloud-landing-zone/blob/HEAD/.github/workflows/truffleHog.yml,Untrusted Input,high,The workflow uses github.event.head_commit.message in a curl command that sends a notification to DingTalk. A malicious actor could craft a commit message containing shell metacharacters to inject arbitrary commands into the curl command.,github.event.head_commit.message,kidccc@gmail.com,kidccc@gmail.com,,,,,,,,,
PX4,https://github.com/PX4/PX4-user_guide/blob/HEAD/.github/workflows/flaw_checker.yml,PR Target,medium,"This workflow uses the `pull_request_target` trigger and checks out the PR's code using `actions/checkout@v3`. It then runs a link checker (`markdown_link_checker_sc`) on the PR's code. While this doesn't directly execute arbitrary code, it's possible for a malicious PR to craft input that could exploit vulnerabilities in the link checker. The severity is marked as medium due to the limited attack surface.",,,hamishwillee@gmail.com,,,,,,,,,
input-output-hk,https://github.com/input-output-hk/nix/blob/HEAD/.github/workflows/backport.yml,PR Target,low,"This workflow uses the `pull_request_target` trigger and checks out the PR's code using `actions/checkout@v2`. It then uses `zeebe-io/backport-action@v0.0.7` to create backport PRs. While this action has write access to the repository, it doesn't appear to execute any code from the PR itself. The severity is marked as low because the potential for exploitation relies on vulnerabilities in the `zeebe-io/backport-action` itself.",,,domen@dev.si,,,,,,,,,
prestodb,https://github.com/prestodb/presto/blob/HEAD/.github/workflows/codenotify.yml,PR Target,low,This workflow uses the `pull_request_target` trigger and checks out the PR's code using `actions/checkout@v4`. It then uses `sourcegraph/codenotify@v0.6.4` to notify users and `actions/labeler@v4.3.0` to apply labels. Neither of these actions appear to execute code from the PR itself. The severity is marked as low because the potential for exploitation relies on vulnerabilities in the `sourcegraph/codenotify` or `actions/labeler` actions themselves.,,,manhtai.lmt@gmail.com,tim@timdmeehan.com,rschlussel@fb.com,,,,,,,
GoogleCloudPlatform,https://github.com/GoogleCloudPlatform/nodejs-docs-samples/blob/HEAD/.github/workflows/functions-slack.yaml,PR Target,high,"This workflow uses the `pull_request_target` trigger and checks out the PR's code using `actions/checkout@v4.1.0` with `ref: ${{github.event.pull_request.head.sha}}`. It then proceeds to execute the code via `make test dir=functions/slack`. This allows a malicious PR to execute arbitrary code in the context of the workflow, potentially gaining access to secrets like `slack_secret` and `kg_api_key`.",,kweinmeister@google.com,roger.that.dev@gmail.com,kweinmeister@google.com,anassri@google.com,renovate@whitesourcesoftware.com,bencoe@google.com,,,,,
GoogleCloudPlatform,https://github.com/GoogleCloudPlatform/nodejs-docs-samples/blob/HEAD/.github/workflows/iam-deny.yaml,PR Target,high,"This workflow uses the `pull_request_target` trigger and checks out the PR's code using `actions/checkout@v4.1.0` with `ref: ${{github.event.pull_request.head.sha}}`. It then executes the code via `npm install`, `npm run build`, and `npm test`. This allows a malicious PR to execute arbitrary code in the context of the workflow, potentially gaining access to the service account credentials used in the `google-github-actions/auth@v1.1.1` step.",,kweinmeister@google.com,katie@glasnt.com,kweinmeister@google.com,,,,,,,,
SonarSource,https://github.com/SonarSource/official-images/blob/HEAD/.github/workflows/munge-pr.yml,PR Target,medium,"This workflow uses the `pull_request_target` trigger and checks out the PR's code using `actions/checkout@v3`. It then performs various git operations and runs a Docker container with a script from the repository. While this doesn't directly execute arbitrary code from the PR, it's possible for a malicious PR to craft input that could exploit vulnerabilities in the Docker container or the scripts it runs. The severity is marked as medium due to the limited attack surface.",,,admwiggin@gmail.com,,,,,,,,,
framer,https://github.com/framer/terraform-provider-aws/blob/HEAD/.github/workflows/library_versions.yml,PR Target,low,This workflow uses the `pull_request_target` trigger and checks out the PR's code using `actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633`. It then runs `git diff` to check for specific library versions and leaves a comment on the PR if necessary. This workflow doesn't appear to execute any code from the PR itself. The severity is marked as low because the potential for exploitation relies on vulnerabilities in the `git diff` command or the comment creation process.,,,Kit_Ewbank@hotmail.com,,,,,,,,,
GoogleCloudPlatform,https://github.com/GoogleCloudPlatform/nodejs-docs-samples/blob/HEAD/.github/workflows/security-center-snippets.yaml,PR Target,high,"This workflow uses the `pull_request_target` trigger and checks out the PR's code using `actions/checkout@v4.1.0` with `ref: ${{github.event.pull_request.head.sha}}`. It then executes the code via `npm install`, `npm run build`, and `npm test`. This allows a malicious PR to execute arbitrary code in the context of the workflow, potentially gaining access to the service account credentials used in the `google-github-actions/auth@v1.1.1` step and the `GCLOUD_ORGANIZATION` environment variable.",,kweinmeister@google.com,katie@glasnt.com,kweinmeister@google.com,aarongabriel@google.com,,,,,,,
GoogleCloudPlatform,https://github.com/GoogleCloudPlatform/nodejs-docs-samples/blob/HEAD/.github/workflows/storagetransfer.yaml,PR Target,high,"This workflow uses the `pull_request_target` trigger and checks out the PR's code using `actions/checkout@v4.1.0` with `ref: ${{github.event.pull_request.head.sha}}`. It then executes the code via `npm install`, `npm run build`, and `npm test`. This allows a malicious PR to execute arbitrary code in the context of the workflow, potentially gaining access to secrets like `sts_aws_secret` and `sts_azure_secret`.",,kweinmeister@google.com,katie@glasnt.com,kweinmeister@google.com,,,,,,,,
GoogleCloudPlatform,https://github.com/GoogleCloudPlatform/nodejs-docs-samples/blob/HEAD/.github/workflows/vision.yaml,PR Target,high,"This workflow uses the `pull_request_target` trigger and checks out the PR's code using `actions/checkout@v4.1.0` with `ref: ${{github.event.pull_request.head.sha}}`. It then executes the code via `npm install`, `npm run build`, and `npm test`. This allows a malicious PR to execute arbitrary code in the context of the workflow, potentially gaining access to the `vision` secret which contains `REDIS_HOST`.",,kweinmeister@google.com,katie@glasnt.com,kweinmeister@google.com,erschmid@google.com,,,,,,,
microsoft,https://github.com/microsoft/file-content-rs/blob/HEAD/.github/workflows/cargo_publish.yml,Untrusted Input,high,"The workflow uses github.event.head_commit.message to determine whether to publish a package to Crates.io. A malicious actor could push a commit with a crafted message containing '[deploy]' and malicious code, leading to the execution of the malicious code and potential compromise of the package published to Crates.io. This could allow the attacker to distribute malicious code to users of the package.",github.event.head_commit.message,kyle.rader@microsoft.com,kyle.rader@microsoft.com,,,,,,,,,
emberjs,https://github.com/emberjs/rfcs/blob/HEAD/.github/workflows/label-opened-new-rfc-prs.yml,PR Target,low,"This workflow uses the `pull_request_target` trigger and checks out the PR's code using `actions/checkout@v3`. However, it only uses the PR's code to determine which labels to apply and doesn't execute any scripts from the PR. The severity is marked as low because the potential for exploitation relies on vulnerabilities in the label application process.",,,katie@kmg.io,,,,,,,,,
cncf,https://github.com/cncf/tag-app-delivery/blob/HEAD/.github/workflows/notice-i18n-tasks.yml,PR Target,low,This workflow uses the `pull_request_target` trigger and checks out the PR's code using `actions/checkout@v4`. It then runs a script to check for changes in specific files and leaves a comment on the PR. This workflow doesn't appear to execute any code from the PR itself. The severity is marked as low because the potential for exploitation relies on vulnerabilities in the script or the comment creation process.,,,hi@lianmakesthings.dev,hhiroshell@gmail.com,,,,,,,,
pinterest,https://github.com/pinterest/ray/blob/HEAD/.github/workflows/external-code-affected.yml,PR Target,low,"This workflow uses the `pull_request_target` trigger and checks out the PR's code using `actions/checkout@v2`. It then clones a repository, checks for changes in specific files, and leaves a comment on the PR. This workflow doesn't appear to execute any code from the PR itself. The severity is marked as low because the potential for exploitation relies on vulnerabilities in the cloned repository or the comment creation process.",,,,,,,,,,,,
nats-io,https://github.com/nats-io/official-images/blob/HEAD/.github/workflows/munge-pr.yml,PR Target,medium,"This workflow uses the `pull_request_target` trigger and checks out the PR's code using `actions/checkout@v3`. It then performs various git operations and runs a Docker container with a script from the repository. While this doesn't directly execute arbitrary code from the PR, it's possible for a malicious PR to craft input that could exploit vulnerabilities in the Docker container or the scripts it runs. The severity is marked as medium due to the limited attack surface.",,,admwiggin@gmail.com,,,,,,,,,
Tencent,https://github.com/Tencent/tdesign-miniprogram/blob/HEAD/.github/workflows/auto-release.yml,Untrusted Input,high,The workflow uses github.event.comment.body to update the CHANGELOG.md file. A malicious actor could craft a comment containing shell metacharacters that would be interpreted as commands when the changelog is updated.,github.event.comment.body,leejimqiu@gmail.com,anly_yaw@163.com,xiaosansiji@gmail.com,leejimqiu@gmail.com,,,,,,,
docker-library,https://github.com/docker-library/official-images/blob/HEAD/.github/workflows/munge-pr.yml,PR Target,medium,"This workflow uses the `pull_request_target` trigger and checks out the PR's code using `actions/checkout@v4`. It then performs various git operations and runs a Docker container with a script from the repository. While this doesn't directly execute arbitrary code from the PR, it's possible for a malicious PR to craft input that could exploit vulnerabilities in the Docker container or the scripts it runs. The severity is marked as medium due to the limited attack surface.",,,mgrigorov@openeuler.sh,admwiggin@gmail.com,,,,,,,,
odoo,https://github.com/odoo/docker-official-images/blob/HEAD/.github/workflows/munge-pr.yml,PR Target,medium,"This workflow uses the `pull_request_target` trigger and checks out the PR's code using `actions/checkout@v4`. It then performs various git operations and runs a Docker container with a script from the repository. While this doesn't directly execute arbitrary code from the PR, it's possible for a malicious PR to craft input that could exploit vulnerabilities in the Docker container or the scripts it runs. The severity is marked as medium due to the limited attack surface.",,,mgrigorov@openeuler.sh,admwiggin@gmail.com,,,,,,,,
Tencent,https://github.com/Tencent/tdesign-miniprogram/blob/HEAD/.github/workflows/preview.yml,Untrusted Input,high,The workflow uses github.event.comment.body to extract a robot identifier and uses it in a 'setup-miniprogram' action. A malicious actor could craft a comment containing malicious code that could be executed during the action.,github.event.comment.body,leejimqiu@gmail.com,leejimqiu@gmail.com,273743552@qq.com,,,,,,,,
ray-project,https://github.com/ray-project/ray/blob/HEAD/.github/workflows/external-code-affected.yml,PR Target,low,"This workflow uses the `pull_request_target` trigger and checks out the PR's code using `actions/checkout@v2`. It then clones a repository, checks for changes in specific files, and leaves a comment on the PR. This workflow doesn't appear to execute any code from the PR itself. The severity is marked as low because the potential for exploitation relies on vulnerabilities in the cloned repository or the comment creation process.",,,,,,,,,,,,
espressif,https://github.com/espressif/esp-iot-solution/blob/HEAD/.github/workflows/dangerjs.yml,PR Target,high,"This workflow uses `pull_request_target`, checks out the PR's code using `actions/checkout@v4`, and then executes code from the PR using `espressif/shared-github-dangerjs@v1`. This action is likely running code from the PR, making it highly exploitable.",,libo@espressif.com,libo@espressif.com,,,,,,,,,
digitalocean,https://github.com/digitalocean/cilium/blob/HEAD/.github/workflows/build-images-base.yaml,PR Target,medium,"This workflow uses the `pull_request_target` trigger and checks out the PR's code using `actions/checkout@5a4ac9002d0be2fb38bd78e4b4dbde5606d7042f`. It then builds and pushes Docker images using `docker/build-push-action@a66e35b9cbcf4ad0ea91ffcaf7bbad63ad9e0229`. While this doesn't directly execute arbitrary code from the PR, it's possible for a malicious PR to modify the Dockerfiles in the repository, leading to the creation of malicious images. The severity is marked as medium because the potential for exploitation relies on the attacker's ability to modify the Dockerfiles before the workflow runs.",,,andre@cilium.io,nicolas@isovalent.com,,,,,,,,
hasura,https://github.com/hasura/official-images/blob/HEAD/.github/workflows/munge-pr.yml,PR Target,medium,"This workflow uses the `pull_request_target` trigger and checks out the PR's code using `actions/checkout@v2`. It then performs various git operations and runs a Docker container with a script from the repository. While this doesn't directly execute arbitrary code from the PR, it's possible for a malicious PR to craft input that could exploit vulnerabilities in the Docker container or the scripts it runs. The severity is marked as medium due to the limited attack surface.",,,admwiggin@gmail.com,,,,,,,,,
taosdata,https://github.com/taosdata/grafanaplugin/blob/HEAD/.github/workflows/release-pr-merged.yaml,Untrusted Input,high,"The workflow uses github.event.pull_request.title to extract a version and uses it in a './scripts/release.sh' command. A malicious actor could craft a PR title that includes shell commands, leading to arbitrary code execution.",github.event.pull_request.title,linhehuo@gmail.com,linhehuo@gmail.com,,,,,,,,,
taosdata,https://github.com/taosdata/grafanaplugin/blob/HEAD/.github/workflows/release-pr.yaml,Untrusted Input,high,"The workflow uses github.event.pull_request.title to extract a version and uses it in a 'git show-ref' command. A malicious actor could craft a PR title that includes shell commands, leading to arbitrary code execution.",github.event.pull_request.title,linhehuo@gmail.com,linhehuo@gmail.com,,,,,,,,,
cypress-io,https://github.com/cypress-io/cypress/blob/HEAD/.github/workflows/semantic-pull-request.yml,PR Target,medium,"This workflow uses the `pull_request_target` trigger and checks out the PR's code using `actions/checkout@v4`. It then runs `npm install` and executes a script from the repository using `actions/github-script@v7`. While this doesn't directly execute arbitrary code from the PR, it's possible for a malicious PR to craft input that could exploit vulnerabilities in the script. The severity is marked as medium due to the limited attack surface.",,,jennifer@cypress.io,bglesias@gmail.com,ryanm@cypress.io,git@chary.us,,,,,,
adafruit,https://github.com/adafruit/arduino-esp32/blob/HEAD/.github/workflows/dangerjs.yml,PR Target,low,"This workflow uses the `pull_request_target` trigger and checks out the PR's code using `actions/checkout@v4`. It then runs `espressif/shared-github-dangerjs@v1` to lint the PR. While this action has write access to the repository, it doesn't appear to execute any code from the PR itself. The severity is marked as low because the potential for exploitation relies on vulnerabilities in the `espressif/shared-github-dangerjs` action itself.",,,,,,,,,,,,
Azure,https://github.com/Azure/sql-action/blob/HEAD/.github/workflows/pr-check.yml,PR Target,high,"This workflow uses the `pull_request_target` trigger and checks out the PR's code using `actions/checkout@v4`. It then executes the checked-out code using `npm install`, `npm run build`, and runs the action itself with various parameters, including connection strings and file paths. This allows a malicious PR to execute arbitrary code with access to secrets and potentially compromise the database.",,llali@microsoft.com,llali@microsoft.com,balaga-gayatri@github.com,,,,,,,,
Kotlin,https://github.com/Kotlin/llvm-project/blob/HEAD/.github/workflows/pr-code-format.yml,PR Target,medium,"This workflow uses the `pull_request_target` trigger and checks out the PR's code using `actions/checkout@v4`. It then runs a Python script (`code-format-helper.py`) to format the code. While this doesn't directly execute arbitrary code from the PR, it's possible for a malicious PR to craft input that could exploit vulnerabilities in the Python script or the formatting tools it uses. The severity is marked as medium due to the limited attack surface.",,,agrossman154@yahoo.com,chris.bieneman@me.com,tobias@hieta.se,,,,,,,
neovim,https://github.com/neovim/nvim-lspconfig/blob/HEAD/.github/workflows/comment-config-changes.yml,PR Target,low,This workflow uses the `pull_request_target` trigger and checks out the PR's code using `actions/checkout@v4`. It then runs `git diff` to check for changes in specific files and leaves a comment on the PR if necessary. This workflow doesn't appear to execute any code from the PR itself. The severity is marked as low because the potential for exploitation relies on vulnerabilities in the `git diff` command or the comment creation process.,,,glephunter@gmail.com,gocdundar@gmail.com,justinkz@gmail.com,,,,,,,
mkdocs,https://github.com/mkdocs/best-of-generator/blob/HEAD/.github/workflows/release-pipeline.yml,Untrusted Input,high,"The workflow uses github.event.milestone.title in a sed command and in a conditional expression without proper sanitization, potentially allowing for code injection.",github.event.milestone.title,lukas.masuch@gmail.com,Lukas.Masuch@gmail.com,lukas.masuch@gmail.com,,,,,,,,
python,https://github.com/python/python-docs-es/blob/HEAD/.github/workflows/pr-comment.yml,PR Target,medium,"This workflow uses the `pull_request_target` trigger and checks out the PR's code using `actions/checkout@v4`. It then runs a Python script (`list_missing_entries.py`) to calculate missing entries and leaves a comment on the PR. While this doesn't directly execute arbitrary code from the PR, it's possible for a malicious PR to craft input that could exploit vulnerabilities in the Python script. The severity is marked as medium due to the limited attack surface.",,,pedro.k.night@gmail.com,rtobarc@gmail.com,,,,,,,,
grafana,https://github.com/grafana/community-operators/blob/HEAD/.github/workflows/operator_test.yaml,PR Target,high,"This workflow uses the `pull_request_target` trigger and checks out the pull request's code using `actions/checkout`. It then executes various scripts and commands, including `ansible-pull`, `bash <(curl -sL $OPP_SCRIPT_URL)`, and `docker cp`. Since `pull_request_target` has write access to the repository and access to secrets like `IIB_INPUT_REGISTRY_TOKEN`, a malicious pull request could modify the code to steal secrets or modify the repository's content.",,mavala@redhat.com,mavala@redhat.com,jbreza@redhat.com,,,,,,,,
grafana,https://github.com/grafana/community-operators-prod/blob/HEAD/.github/workflows/operator_test.yaml,PR Target,high,"This workflow uses the `pull_request_target` trigger and checks out the pull request's code using `actions/checkout`. It then executes various scripts and commands, including `ansible-pull`, `bash <(curl -sL $OPP_SCRIPT_URL)`, and `docker cp`. Since `pull_request_target` has write access to the repository and access to secrets like `IIB_INPUT_REGISTRY_TOKEN`, a malicious pull request could modify the code to steal secrets or modify the repository's content.",,mavala@redhat.com,mavala@redhat.com,jbreza@redhat.com,,,,,,,,
snyk,https://github.com/snyk/community-operators-prod/blob/HEAD/.github/workflows/operator_test.yaml,PR Target,high,"This workflow uses the `pull_request_target` trigger and checks out the PR's code using `github.event.pull_request.head.sha`. It then performs various operator tests using Ansible playbooks and scripts fetched from external URLs. This allows a malicious PR author to modify the playbooks or scripts, potentially gaining access to sensitive secrets like `IIB_INPUT_REGISTRY_TOKEN` or executing arbitrary code on the runner. Due to the potential for remote code execution and secret access, the severity is rated as high.",,mavala@redhat.com,mavala@redhat.com,jbreza@redhat.com,,,,,,,,
github,https://github.com/github/opensource.guide/blob/HEAD/.github/workflows/jekyll-preview.yml,PR Target,medium,"This workflow uses the `pull_request_target` trigger and checks out the pull request's code using `actions/checkout`. While it builds the Jekyll site, it doesn't appear to execute any arbitrary code from the PR. However, since it has write permissions to the target repository, a malicious PR could potentially modify the workflow itself or other repository files during the checkout process.",,,ahpook@github.com,JamesMGreene@github.com,,,,,,,,
snyk,https://github.com/snyk/community-operators/blob/HEAD/.github/workflows/operator_test.yaml,PR Target,high,"This workflow uses the `pull_request_target` trigger and checks out the PR's code using `github.event.pull_request.head.sha`. It then performs various operator tests using Ansible playbooks and scripts fetched from external URLs. This allows a malicious PR author to modify the playbooks or scripts, potentially gaining access to sensitive secrets like `IIB_INPUT_REGISTRY_TOKEN` or executing arbitrary code on the runner. Due to the potential for remote code execution and secret access, the severity is rated as high.",,mavala@redhat.com,mavala@redhat.com,jbreza@redhat.com,,,,,,,,
alteryx,https://github.com/alteryx/evalml/blob/HEAD/.github/workflows/evalml_main_airflow_performance_tests.yaml,Untrusted Input,high,The workflow uses github.event.head_commit.author.name in a curl command that sends data to an Airflow server. A malicious actor could craft a commit with a specially crafted author name containing shell metacharacters to inject arbitrary commands into the curl command.,github.event.head_commit.author.name,michael.fu@alteryx.com,michael.fu@alteryx.com,jeremyliweishih@gmail.com,,,,,,,,
wazuh,https://github.com/wazuh/wazuh-indexer/blob/HEAD/.github/workflows/gradle-check.yml,PR Target,medium,"This workflow uses the `pull_request_target` trigger and checks out the pull request's code. However, it doesn't appear to directly execute any code from the PR. The potential risk lies in the use of `jq` to parse the `GITHUB_EVENT_PATH`, which could be manipulated by a malicious PR to inject arbitrary commands. The severity is medium because the exploitability depends on the specific `jq` commands used and whether they allow for command injection.",,,andriy.redko@aiven.io,andrross@amazon.com,kkotwani@amazon.com,widdis@gmail.com,handalm@amazon.com,dblock@amazon.com,,,,
OpenRCT2,https://github.com/OpenRCT2/Localisation/blob/HEAD/.github/workflows/translation_check.yml,PR Target,medium,"This workflow uses the `pull_request_target` trigger and checks out the pull request's code multiple times. While it runs a Python script (`translation_check.py`), it's unclear whether this script executes any code from the PR. The potential risk lies in the use of user-supplied data in shell commands, such as the `git checkout` command. A malicious PR could potentially manipulate the `merge_base` variable to execute arbitrary commands. The severity is medium because the exploitability depends on the specific implementation of `translation_check.py` and how it handles user-supplied data.",,,the.martines@gmail.com,,,,,,,,,
dmlc,https://github.com/dmlc/DeepSpeed/blob/HEAD/.github/workflows/auto-sync.yml,Untrusted Input,high,"The workflow uses github.event.head_commit.message to construct a PR name and uses it in a 'git cherry-pick' command. A malicious actor could craft a commit message that includes shell commands, leading to arbitrary code execution on the runner.",github.event.head_commit.message,michaelwyatt@microsoft.com,digger-yu@outlook.com,michaelwyatt@microsoft.com,,,,,,,,
MaaAssistantArknights,https://github.com/MaaAssistantArknights/MaaAssistantArknights/blob/HEAD/.github/workflows/gen-changelog.yml,Untrusted Input,high,"The workflow uses github.event.pull_request.title to extract a tag name and uses it in a 'python3' command for changelog generation. A malicious actor could craft a PR title that includes shell commands, leading to arbitrary code execution during changelog generation.",github.event.pull_request.title,mistereo@hotmail.com,naganjue@vip.qq.com,253294679@qq.com,mistereo@hotmail.com,,,,,,,
MaaAssistantArknights,https://github.com/MaaAssistantArknights/MaaAssistantArknights/blob/HEAD/.github/workflows/pr-auto-tag.yml,Untrusted Input,high,"The workflow uses github.event.pull_request.title to extract a tag name and uses it in 'git tag' and 'git merge' commands. A malicious actor could craft a PR title that includes shell commands, leading to arbitrary code execution.",github.event.pull_request.title,mistereo@hotmail.com,253294679@qq.com,mistereo@hotmail.com,,,,,,,,
Xilinx,https://github.com/Xilinx/XRT/blob/HEAD/.github/workflows/xrt_ci.yml,PR Target,high,This workflow uses the `pull_request_target` trigger and checks out the PR's code using `actions/checkout@v3`. It then proceeds to execute the checked-out code in the `XRT build` step using a composite action. This allows a malicious PR to execute arbitrary code with write access to the repository and access to secrets.,,msubrama@xilinx.com,,,,,,,,,,
99designs,https://github.com/99designs/dbt_artifacts/blob/HEAD/.github/workflows/ci_sqlfluff.yml,PR Target,medium,"This workflow uses the `pull_request_target` trigger and checks out the pull request's code. It then runs `sqlfluff lint` on modified SQL files. While it doesn't directly execute code from the PR, a malicious PR could potentially craft SQL files that exploit vulnerabilities in `sqlfluff` itself. The severity is medium because the exploitability depends on the existence of such vulnerabilities in `sqlfluff`.",,,niall@niallrees.com,,,,,,,,,
99designs,https://github.com/99designs/dbt_artifacts/blob/HEAD/.github/workflows/ci_test_package.yml,PR Target,low,"This workflow uses the `pull_request_target` trigger and checks out the pull request's code. However, it only runs `tox` tests, which are executed in isolated environments. While a malicious PR could potentially introduce malicious test code, the impact is limited to the test environment. The severity is low because the potential for exploitation is limited.",,,niall@niallrees.com,,,,,,,,,
llvm,https://github.com/llvm/temp-issue-tester/blob/HEAD/.github/workflows/email-check.yaml,PR Target,low,"This workflow uses the `pull_request_target` trigger and checks out the pull request's code. However, it only extracts the author's email address from the commit history and validates it. It doesn't execute any arbitrary code from the PR. The severity is low because the potential for exploitation is limited.",,,anton@korobeynikov.info,,,,,,,,,
NixOS,https://github.com/NixOS/nix/blob/HEAD/.github/workflows/backport.yml,Both,low,"This workflow uses the `pull_request_target` trigger and checks out the pull request's code. However, it only uses the `zeebe-io/backport-action` to create backport PRs. It doesn't execute any arbitrary code from the PR. The severity is low because the potential for exploitation is limited.. This workflow uses `pull_request_target` and checks out the PR's code. However, it only uses it for creating backport PRs using `zeebe-io/backport-action`. It doesn't seem to execute any code directly from the PR. The risk is low as the workflow's purpose is limited to backporting.",,,valentin.gagarin@tweag.io,domen@dev.si,,,,,,,,
NixOS,https://github.com/NixOS/nixpkgs/blob/HEAD/.github/workflows/backport.yml,PR Target,low,"This workflow uses the `pull_request_target` trigger and checks out the pull request's code. However, it only uses the `korthout/backport-action` to create backport PRs. It doesn't execute any arbitrary code from the PR. The severity is low because the potential for exploitation is limited.",,,victor@engmark.name,silvan.mosberger@tweag.io,hexa@darmstadt.ccc.de,winter@winter.cafe,varunsh@stepsecurity.io,joerg@thalheim.io,domen@dev.si,mail@nh2.me,,
RocketChat,https://github.com/RocketChat/official-images/blob/HEAD/.github/workflows/munge-pr.yml,PR Target,medium,"This workflow uses the `pull_request_target` trigger and checks out the pull request's code. It then runs a series of commands, including `git diff`, `jq`, and `docker run`. While it doesn't directly execute code from the PR, a malicious PR could potentially manipulate the input to these commands to achieve arbitrary code execution. The severity is medium because the exploitability depends on the specific commands used and whether they allow for command injection.",,,admwiggin@gmail.com,,,,,,,,,
RocketChat,https://github.com/RocketChat/bitnami-containers/blob/HEAD/.github/workflows/ci-pipeline.yml,PR Target,medium,"This workflow uses the `pull_request_target` trigger and checks out the pull request's code. It then uses `curl` and `jq` to fetch and parse data from the GitHub API. While it doesn't directly execute code from the PR, a malicious PR could potentially manipulate the API responses to inject arbitrary commands into the workflow. The severity is medium because the exploitability depends on the specific `jq` commands used and whether they allow for command injection.",,,fmulero@vmware.com,carlosrh@vmware.com,morona@vmware.com,,,,,,,
trailofbits,https://github.com/trailofbits/dylint/blob/HEAD/.github/workflows/dependabot.yml,PR Target,low,"This workflow uses the `pull_request_target` trigger and checks out the pull request's code. However, it only runs `cargo update` to update lockfiles and pushes the changes back to the repository. It doesn't execute any arbitrary code from the PR. The severity is low because the potential for exploitation is limited.",,,samuel.moelius@trailofbits.com,sam@moeli.us,sam.moelius@trailofbits.com,,,,,,,
mdn,https://github.com/mdn/content/blob/HEAD/.github/workflows/pr-check-lint_content.yml,PR Target,medium,"This workflow uses the `pull_request_target` trigger and checks out the pull request's code. It then runs a series of linters and formatters on markdown files, including `markdownlint-cli2`, `prettier`, and a custom `front-matter_linter.js` script. While it doesn't directly execute code from the PR, a malicious PR could potentially exploit vulnerabilities in these tools to achieve arbitrary code execution. The severity is medium because the exploitability depends on the existence of such vulnerabilities in the used tools.",,,vinyldarkscratch@gmail.com,yin199909@aliyun.com,,,,,,,,
mdn,https://github.com/mdn/translated-content/blob/HEAD/.github/workflows/pr-check-lint_content.yml,PR Target,medium,"This workflow uses the `pull_request_target` trigger and checks out the pull request's code. It then runs a series of linters and formatters on markdown files, including `markdownlint-cli2`, `prettier`, `check-url-locale.js`, and `autocorrect`. While it doesn't directly execute code from the PR, a malicious PR could potentially exploit vulnerabilities in these tools to achieve arbitrary code execution. The severity is medium because the exploitability depends on the existence of such vulnerabilities in the used tools.",,,yin199909@aliyun.com,huacnlee@gmail.com,vinyldarkscratch@gmail.com,brian@smith.berlin,,,,,,
getsentry,https://github.com/getsentry/sentry-python/blob/HEAD/.github/workflows/test-integrations-aws-lambda.yml,PR Target,medium,"This workflow uses the `pull_request_target` trigger and checks out the pull request's code. It then runs tests using `tox` and a custom `runtox.sh` script. While it doesn't directly execute arbitrary code from the PR, a malicious PR could potentially modify the test suite or the `runtox.sh` script to execute malicious code. The severity is medium because the exploitability depends on the specific implementation of the test suite and the `runtox.sh` script.",,,ivana.kellyerova@sentry.io,,,,,,,,,
Xilinx,https://github.com/Xilinx/preflight-check/blob/HEAD/.github/workflows/xrt_pr.yml,PR Target,high,This workflow uses the `pull_request_target` trigger and checks out the PR's code using `actions/checkout@v4`. It then proceeds to execute the checked-out code in the `XRT build` step using a composite action. This allows a malicious PR to execute arbitrary code with write access to the repository and access to secrets.,,msubrama@xilinx.com,msubrama@xilinx.com,,,,,,,,,
mongodb,https://github.com/mongodb/mongodb-kubernetes-operator/blob/HEAD/.github/workflows/e2e-fork.yml,PR Target,high,"This workflow is vulnerable to PR target attacks. The workflow uses the `pull_request_target` trigger and checks out the PR's code using `actions/checkout@v2`. It then proceeds to build and push images, potentially executing malicious code from the PR. The use of `secrets.QUAY_USERNAME` and `secrets.QUAY_ROBOT_TOKEN` further increases the severity of this vulnerability.",,nam.nguyen@mongodb.com,nam.nguyen@mongodb.com,lukasz.sierant@mongodb.com,cianhatton@gmail.com,rodrigo.valin@mongodb.com,ciprian.tibulca@mongodb.com,nikolas.de-giorgis@10gen.com,,,,
chef,https://github.com/chef/ngx_upstream_jdomain/blob/HEAD/.github/workflows/main.yml,Untrusted Input,high,"The workflow uses github.event.head_commit.message in a regular expression match without proper sanitization, potentially allowing for code injection.",github.event.head_commit.message,nicholasomerchiasson@gmail.com,nicholasomerchiasson@gmail.com,,,,,,,,,
aws-samples,https://github.com/aws-samples/amazon-s3-object-lambda-default-configuration/blob/HEAD/.github/workflows/run_integration_tests.yaml,PR Target,medium,"This workflow uses `pull_request_target` and checks out the PR code. While it doesn't seem to execute code directly from the PR, it uploads a template file (`s3objectlambda_defaultconfig.yaml`) from the PR to an S3 bucket. If this template file is used later in a context where it's interpreted or executed, it could lead to a security vulnerability. The severity is medium because it's not confirmed if the template file is used in a dangerous way.",,,filip.tepes@outlook.com,ftepes@amazon.com,mingjow@amazon.co.uk,vinmv@amazon.com,mingjouwu@gmail.com,raajarp@amazon.com,,,,
aws-samples,https://github.com/aws-samples/dbt-glue/blob/HEAD/.github/workflows/integration.yml,PR Target,medium,"This workflow uses `pull_request_target` and checks out the PR's code. While it doesn't directly execute code from the PR, it sets up AWS credentials and runs `tox`. The `tox.ini` file could potentially contain configurations that execute arbitrary code from the PR, leading to a vulnerability. The severity is medium because it's unclear if `tox.ini` allows for such execution.",,,moomindani@gmail.com,sekiyama@amazon.com,menuetb@amazon.com,,,,,,,
spring-projects,https://github.com/spring-projects/spring-security/blob/HEAD/.github/workflows/merge-dependabot-pr.yml,PR Target,low,"This workflow uses `pull_request_target` and checks out the PR's code. However, it only merges the PR if it originates from 'dependabot[bot]' and specific conditions are met. While it fetches the code, it doesn't appear to execute anything directly from it. The risk is low because the workflow is designed to handle Dependabot PRs, which are generally considered trustworthy.",,,marcusdacoregio@gmail.com,,,,,,,,,
spring-projects,https://github.com/spring-projects/spring-session/blob/HEAD/.github/workflows/merge-dependabot-pr.yml,PR Target,low,"This workflow uses `pull_request_target` and checks out the PR's code. However, it only merges the PR if it originates from 'dependabot[bot]' and specific conditions are met. While it fetches the code, it doesn't appear to execute anything directly from it. The risk is low because the workflow is designed to handle Dependabot PRs, which are generally considered trustworthy.",,,marcusdacoregio@gmail.com,,,,,,,,,
aws,https://github.com/aws/aws-cdk/blob/HEAD/.github/workflows/request-cli-integ-test.yml,PR Target,low,"This workflow uses `pull_request_target` and checks out the PR's code. However, it primarily focuses on identifying changes in specific files and pushing a branch to trigger another pipeline. While it has write access, it doesn't seem to execute any code directly from the PR. The risk is low as the workflow's purpose is to trigger a separate pipeline for further checks.",,,kornherm@amazon.co.uk,,,,,,,,,
google,https://github.com/google/season-of-docs/blob/HEAD/.github/workflows/markdown-lint.yml,PR Target,very low,"This workflow uses `pull_request_target` and checks out the PR's code. However, it only uses it for linting Markdown files with `markdownlint-cli2-action` and doesn't execute any code from the PR. The risk is very low as the workflow's scope is limited to linting and commenting on Markdown files.",,,erin@wordnik.com,emckean@google.com,,,,,,,,
google,https://github.com/google/osdfir-infrastructure/blob/HEAD/.github/workflows/generate-chart-readme.yaml,PR Target,low,"This workflow uses `pull_request_target` and checks out the PR's code. It then runs `readme-generator-for-helm` to update README files based on changes in `values.yaml`. While it doesn't directly execute code from the PR, the `values.yaml` file could potentially contain malicious content that might be leveraged in future steps or by other tools. The severity is low because the potential for exploitation depends on how the generated README files are used.",,,,,,,,,,,,
cockpit-project,https://github.com/cockpit-project/cockpit/blob/HEAD/.github/workflows/dependabot.yml,PR Target,medium,"This workflow uses `pull_request_target` and checks out the PR's code. It then runs `make tools/node-modules`, `./tools/node-modules install`, and `./tools/node-modules push`, which suggests that it might execute scripts or commands from the PR. The use of SSH keys (`NODE_CACHE_DEPLOY_KEY`, `SELF_DEPLOY_KEY`) further increases the potential impact of a compromise. The severity is medium because it's unclear what these scripts and commands do and how much control the PR has over them.",,,jvanderwaa@redhat.com,,,,,,,,,
cockpit-project,https://github.com/cockpit-project/cockpit-podman/blob/HEAD/.github/workflows/dependabot.yml,PR Target,medium,"This workflow uses `pull_request_target` and checks out the PR's code. It then runs `make tools/node-modules`, `./tools/node-modules install`, and `./tools/node-modules push`, which suggests that it might execute scripts or commands from the PR. The use of SSH keys (`NODE_CACHE_DEPLOY_KEY`, `SELF_DEPLOY_KEY`) further increases the potential impact of a compromise. The severity is medium because it's unclear what these scripts and commands do and how much control the PR has over them.",,,jvanderwaa@redhat.com,,,,,,,,,
cockpit-project,https://github.com/cockpit-project/cockpit-machines/blob/HEAD/.github/workflows/dependabot.yml,PR Target,medium,"This workflow uses `pull_request_target` and checks out the PR's code. It then runs `make tools/node-modules`, `./tools/node-modules install`, and `./tools/node-modules push`, which suggests that it might execute scripts or commands from the PR. The use of SSH keys (`NODE_CACHE_DEPLOY_KEY`, `SELF_DEPLOY_KEY`) further increases the potential impact of a compromise. The severity is medium because it's unclear what these scripts and commands do and how much control the PR has over them.",,,jvanderwaa@redhat.com,,,,,,,,,
Hammerspoon,https://github.com/Hammerspoon/Dash-User-Contributions/blob/HEAD/.github/workflows/test-docsets.yml,PR Target,low,"This workflow uses `pull_request_target` and checks out the PR's code. However, it seems to primarily use it for running tests using `docsetcontrib` and posting the results as a comment. While it downloads external resources using `wget`, it doesn't appear to execute arbitrary code from the PR. The risk is low as the workflow's actions are limited to testing and commenting.",,,support@kapeli.com,,,,,,,,,
tweag,https://github.com/tweag/nixpkgs/blob/HEAD/.github/workflows/backport.yml,PR Target,low,"This workflow uses `pull_request_target` and checks out the PR's code. However, it only uses it for creating backport PRs using `korthout/backport-action`. It doesn't seem to execute any code directly from the PR. The risk is low as the workflow's purpose is limited to backporting.",,,victor@engmark.name,silvan.mosberger@tweag.io,hexa@darmstadt.ccc.de,winter@winter.cafe,varunsh@stepsecurity.io,joerg@thalheim.io,domen@dev.si,mail@nh2.me,,
platformio,https://github.com/platformio/zephyr/blob/HEAD/.github/workflows/bluetooth.yaml,PR Target,medium,"This workflow uses `pull_request_target` and checks out the PR's code. It then runs `tests/bluetooth/bsim_bt/compile.sh` and `tests/bluetooth/bsim_bt/run_parallel.sh`, which suggests that it might execute scripts from the PR. The severity is medium because it's unclear what these scripts do and how much control the PR has over them.",,,anas.nashif@intel.com,,,,,,,,,
platformio,https://github.com/platformio/zephyr/blob/HEAD/.github/workflows/clang.yaml,PR Target,medium,"This workflow uses `pull_request_target` and checks out the PR's code. It then runs various scripts, including `./scripts/ci/what_changed.py`, `./scripts/ci/get_twister_opt.py`, and `./scripts/twister`. The execution of these scripts, especially `./scripts/twister`, suggests potential for running code from the PR. The severity is medium because the exact behavior of these scripts and the level of control the PR has over them are unclear.",,,anas.nashif@intel.com,kumar.gala@linaro.org,Torsten.Rasmussen@nordicsemi.no,,,,,,,
platformio,https://github.com/platformio/zephyr/blob/HEAD/.github/workflows/manifest.yml,PR Target,low,"This workflow uses `pull_request_target` and checks out the PR's code. However, it only uses it for generating a manifest using `zephyrproject-rtos/action-manifest`. It doesn't seem to execute any code directly from the PR. The risk is low as the workflow's purpose is limited to manifest generation.",,,marti.bolivar@nordicsemi.no,carles.cufi@nordicsemi.no,anas.nashif@intel.com,,,,,,,
ether,https://github.com/ether/etherpad-next/blob/HEAD/.github/workflows/build.yml,PR Target,low,"This workflow uses `pull_request_target` and checks out the PR's code. However, it primarily focuses on building the project using `turbo` and doesn't appear to execute arbitrary code from the PR directly. While it installs dependencies with `npm i`, it uses the `--omit=dev` flag, reducing the risk of executing potentially malicious development scripts. The severity is low as the workflow's actions are primarily related to building the project.",,,augustin.mauroy@outlook.fr,,,,,,,,,
praetorian-inc,https://github.com/praetorian-inc/graph-google-cloud-1/blob/HEAD/.github/workflows/questions.yml,PR Target,high,This workflow uses the `pull_request_target` trigger and checks out the PR's code using `actions/checkout@v2`. It then executes the PR's code by running `yarn --cwd source j1-integration validate-question-file` with access to repository secrets `MANAGED_QUESTIONS_JUPITERONE_ACCOUNT_ID` and `MANAGED_QUESTIONS_JUPITERONE_API_KEY`. This allows a malicious PR to execute arbitrary code on the runner with access to sensitive information.,,nick.dowmon@jupiterone.com,nick.dowmon@jupiterone.com,,,,,,,,,
tweag,https://github.com/tweag/hello-plutarch/blob/HEAD/.github/workflows/template.yaml,Untrusted Input,high,The workflow uses github.event.head_commit.message to construct a commit message. A malicious actor could craft a commit message containing shell metacharacters that would be interpreted as commands when the commit message is used in a 'git commit' command.,github.event.head_commit.message,nicolas.jeannerod@tweag.io,nicolas.jeannerod@tweag.io,,,,,,,,,
openwrt,https://github.com/openwrt/routing/blob/HEAD/.github/workflows/check-autorelease-deprecation.yml,PR Target,medium,"This workflow uses the `pull_request_target` trigger and checks out the pull request's code using `actions/checkout`. However, it only performs read operations on the code (using `find`, `grep`, `sed`, `git diff`, and `git log`) and doesn't execute any scripts from the PR. While this doesn't allow for direct code execution, it could potentially allow an attacker to exfiltrate sensitive information from the repository through carefully crafted input.",,,mail@aparcar.org,paul.spooren@rhebo.com,,,,,,,,
openwrt,https://github.com/openwrt/packages/blob/HEAD/.github/workflows/check-autorelease-deprecation.yml,PR Target,medium,"This workflow uses the `pull_request_target` trigger and checks out the pull request's code using `actions/checkout`. However, it only performs read operations on the code (using `find`, `grep`, `sed`, `git diff`, and `git log`) and doesn't execute any scripts from the PR. While this doesn't allow for direct code execution, it could potentially allow an attacker to exfiltrate sensitive information from the repository through carefully crafted input.",,,cnsztl@immortalwrt.org,mail@aparcar.org,paul.spooren@rhebo.com,,,,,,,
openwrt,https://github.com/openwrt/telephony/blob/HEAD/.github/workflows/check-autorelease-deprecation.yml,PR Target,medium,"This workflow uses the `pull_request_target` trigger and checks out the pull request's code using `actions/checkout`. However, it only performs read operations on the code (using `find`, `grep`, `sed`, `git diff`, and `git log`) and doesn't execute any scripts from the PR. While this doesn't allow for direct code execution, it could potentially allow an attacker to exfiltrate sensitive information from the repository through carefully crafted input.",,,sebastian_ml@gmx.net,,,,,,,,,
Khan,https://github.com/Khan/label-studio/blob/HEAD/.github/workflows/follow-merge-upstream-repo-sync.yml,Untrusted Input,high,"The workflow uses github.event.client_payload.title in a shell script without proper sanitization, potentially allowing for code injection.",github.event.client_payload.title,nikita.belonogov@heartex.com,nikita.belonogov@heartex.com,sergey.zhuk@heartex.com,,,,,,,,
yarnpkg,https://github.com/yarnpkg/berry/blob/HEAD/.github/workflows/pr-smart-merge.yml,PR Target,high,"This workflow uses the `pull_request_target` trigger and checks out the PR's code using `github.event.pull_request.head.sha`. It then performs various tasks related to merging changes, including generating and applying changesets. This grants a malicious PR author the ability to execute arbitrary code within the workflow runner, potentially gaining access to sensitive secrets like `YARNBOT_TOKEN`. Additionally, the workflow pushes changes back to the repository using the bot token, allowing a malicious PR to modify the repository's content. Due to the potential for remote code execution and unauthorized repository modifications, the severity is rated as high.",,nison.mael@gmail.com,me@rdil.rocks,nison.mael@gmail.com,paul.soporan@gmail.com,,,,,,,
yarnpkg,https://github.com/yarnpkg/example-repo-zipn/blob/HEAD/.github/workflows/pr-smart-merge.yml,PR Target,high,"This workflow uses the `pull_request_target` trigger and checks out the PR's code using `github.event.pull_request.head.sha`. It then performs various tasks related to merging changes, including generating and applying changesets. This grants a malicious PR author the ability to execute arbitrary code within the workflow runner, potentially gaining access to sensitive secrets like `YARNBOT_TOKEN`. Additionally, the workflow pushes changes back to the repository using the bot token, allowing a malicious PR to modify the repository's content. Due to the potential for remote code execution and unauthorized repository modifications, the severity is rated as high.",,nison.mael@gmail.com,nison.mael@gmail.com,paul.soporan@gmail.com,,,,,,,,
scikit-learn,https://github.com/scikit-learn/scikit-learn/blob/HEAD/.github/workflows/lint.yml,PR Target,medium,"This workflow uses the `pull_request_target` trigger and checks out the pull request's code using `actions/checkout`. It then executes a script downloaded from the main branch (`./build_tools/linting.sh`). While this script is fetched from a trusted source, a malicious pull request could potentially modify the workflow itself to point to a different, malicious script. This requires modifying the workflow file before the checkout step, which might be more difficult but still possible.",,,loic.esteve@ymail.com,adrin.jalali@gmail.com,,,,,,,,
Azure-Samples,https://github.com/Azure-Samples/azure-search-openai-demo/blob/HEAD/.github/workflows/validate-markdown.yml,PR Target,low,"This workflow uses the `pull_request_target` trigger and checks out the pull request's code using `actions/checkout`. However, it only uses the checked out code as input for the `john0isaac/action-check-markdown` action, which performs validation checks on Markdown files. This doesn't involve executing any code from the PR, making it less likely to be exploitable.",,,johnaziz269@gmail.com,,,,,,,,,
yarnpkg,https://github.com/yarnpkg/example-repo-zip0/blob/HEAD/.github/workflows/pr-smart-merge.yml,PR Target,high,"This workflow uses the `pull_request_target` trigger and checks out the PR's code using `github.event.pull_request.head.sha`. It then performs various tasks related to merging changes, including generating and applying changesets. This grants a malicious PR author the ability to execute arbitrary code within the workflow runner, potentially gaining access to sensitive secrets like `YARNBOT_TOKEN`. Additionally, the workflow pushes changes back to the repository using the bot token, allowing a malicious PR to modify the repository's content. Due to the potential for remote code execution and unauthorized repository modifications, the severity is rated as high.",,nison.mael@gmail.com,nison.mael@gmail.com,paul.soporan@gmail.com,,,,,,,,
jenkinsci,https://github.com/jenkinsci/artifactory-plugin/blob/HEAD/.github/workflows/frogbot-scan-pr.yml,PR Target,low,"This workflow uses the `pull_request_target` trigger and checks out the pull request's code using `actions/checkout`. However, it only uses the checked out code as input for the `jfrog/frogbot` action, which performs security scans. This doesn't involve executing any code from the PR, making it less likely to be exploitable.",,,eyalbenmoshe@jfrog.com,,,,,,,,,
Automattic,https://github.com/Automattic/gutenberg/blob/HEAD/.github/workflows/upload-release-to-plugin-repo.yml,Untrusted Input,high,The workflow uses github.event.release.body to update the changelog file. A malicious actor could craft a release body containing shell metacharacters that would be interpreted as commands when the changelog is updated.,github.event.release.body,ockham@raz.or.at,ockham@raz.or.at,,,,,,,,,
jenkinsci,https://github.com/jenkinsci/jfrog-plugin/blob/HEAD/.github/workflows/frogbot-scan-pr.yml,PR Target,low,"This workflow uses the `pull_request_target` trigger and checks out the pull request's code using `actions/checkout`. However, it only uses the checked out code as input for the `jfrog/frogbot` action, which performs security scans. This doesn't involve executing any code from the PR, making it less likely to be exploitable.",,,eyalbenmoshe@jfrog.com,,,,,,,,,
Automattic,https://github.com/Automattic/jetpack/blob/HEAD/.github/workflows/gardening.yml,PR Target,medium,"This workflow uses the `pull_request_target` trigger and checks out the pull request's code using `actions/checkout`. However, it explicitly states that no code should be executed from this checkout. The workflow then uses a custom action (`./projects/github-actions/repo-gardening`) to manage labels and assignees. While this action is built from the repository's code, it's built from the main branch, not the PR's code. This reduces the risk of code execution from the PR, but it's still possible if the custom action itself is vulnerable.",,,jeremy@jeremy.hu,karenlattfield@gmail.com,,,,,,,,
elastic,https://github.com/elastic/official-images/blob/HEAD/.github/workflows/munge-pr.yml,PR Target,medium,"This workflow uses the `pull_request_target` trigger and checks out the pull request's code using `actions/checkout`. It then executes a script from the repository (`./.github/workflows/.bashbrew`) and a script from a Docker image (`oisupport/bashbrew:diff-pr`). While these scripts are fetched from trusted sources, a malicious pull request could potentially modify the workflow itself to point to different, malicious scripts. This requires modifying the workflow file before the checkout step, which might be more difficult but still possible.",,,mgrigorov@openeuler.sh,admwiggin@gmail.com,,,,,,,,
NVIDIA,https://github.com/NVIDIA/kata-containers/blob/HEAD/.github/workflows/add-pr-sizing-label.yaml,PR Target,low,"This workflow uses the `pull_request_target` trigger and checks out the pull request's code using `actions/checkout`. However, it only uses the checked out code to determine the PR size and apply labels. It doesn't execute any code from the PR, making it less likely to be exploitable.",,,fabiano.fidencio@intel.com,zkaiser@nvidia.com,james.o.hunt@intel.com,,,,,,,
NVIDIA,https://github.com/NVIDIA/kata-containers/blob/HEAD/.github/workflows/move-issues-to-in-progress.yaml,PR Target,low,"This workflow uses the `pull_request_target` trigger and checks out the pull request's code using `actions/checkout`. However, it only uses the checked out code to allow the `hub` command to communicate with the project. It doesn't execute any code from the PR itself, making it less likely to be exploitable.",,,fabiano.fidencio@intel.com,bin@hyper.sh,zhongtaohu.tim@linux.alibaba.com,james.o.hunt@intel.com,,,,,,
Automattic,https://github.com/Automattic/gutenberg-big-sky/blob/HEAD/.github/workflows/upload-release-to-plugin-repo.yml,Untrusted Input,high,The workflow uses github.event.release.body to update the changelog file. A malicious actor could craft a release body containing shell metacharacters that would be interpreted as commands when the changelog is updated.,github.event.release.body,ockham@raz.or.at,grzegorz@gziolo.pl,ockham@raz.or.at,,,,,,,,
influxdata,https://github.com/influxdata/intellij-flux/blob/HEAD/.github/workflows/release.yml,Untrusted Input,high,The workflow uses github.event.release.body in a shell script that sets an environment variable and uses it in a gradlew command. An attacker could craft a malicious release body to inject arbitrary commands into the shell script.,github.event.release.body,onelson@gmail.com,onelson@gmail.com,,,,,,,,,
openshift,https://github.com/openshift/cac-content-fork/blob/HEAD/.github/workflows/compare-ds.yaml,PR Target,medium,"This workflow uses the `pull_request_target` trigger and checks out the pull request's code using `actions/checkout@v4`. While it doesn't appear to directly execute code from the PR, it does perform operations like `dnf install` and `pip install`, which could potentially be influenced by malicious packages or scripts introduced in the PR. Further investigation is needed to determine the exact impact and potential for exploitation.",,,mburket@redhat.com,ggasparb@redhat.com,jcerny@redhat.com,mlysonek@redhat.com,matyc@redhat.com,ekolesni@redhat.com,,,,
openshift,https://github.com/openshift/cac-content-fork/blob/HEAD/.github/workflows/ctf.yaml,PR Target,medium,"This workflow uses the `pull_request_target` trigger and checks out the pull request's code using `actions/checkout@v4`. It then executes `python3 ./ctf/content_test_filtering.py`, which could potentially run malicious code introduced in the PR. The severity is medium because it's unclear what this script does and its potential impact.",,,mburket@redhat.com,jcerny@redhat.com,ggasparb@redhat.com,mlysonek@redhat.com,ekolesni@redhat.com,,,,,
sourcegraph,https://github.com/sourcegraph/handbook/blob/HEAD/.github/workflows/codenotify.yml,PR Target,low,"This workflow uses the `pull_request_target` trigger and checks out the pull request's code using `actions/checkout@v3`. However, it doesn't appear to execute any code from the PR, only using it for the `sourcegraph/codenotify@v0.4` action. The severity is low because the potential for exploitation seems limited.",,,dax@sourcegraph.com,felix.b@outlook.com,,,,,,,,
sourcegraph,https://github.com/sourcegraph/cody/blob/HEAD/.github/workflows/semgrep.yml,PR Target,low,"This workflow uses the `pull_request_target` trigger and checks out the pull request's code using `actions/checkout@v4`. However, it doesn't appear to execute any code from the PR directly. It uses `semgrep ci` for static analysis, which is unlikely to be directly exploitable. The severity is low because the potential for exploitation seems limited.",,,s.shivasurya@gmail.com,,,,,,,,,
sourcegraph,https://github.com/sourcegraph/jetbrains/blob/HEAD/.github/workflows/semgrep.yml,PR Target,low,"This workflow uses the `pull_request_target` trigger and checks out the pull request's code using `actions/checkout@v4`. However, it doesn't appear to execute any code from the PR directly. It uses `semgrep ci` for static analysis, which is unlikely to be directly exploitable. The severity is low because the potential for exploitation seems limited.",,,s.shivasurya@gmail.com,,,,,,,,,
adobe,https://github.com/adobe/jfrog-client-go/blob/HEAD/.github/workflows/tests.yml,PR Target,high,This workflow uses the `pull_request_target` trigger and checks out the pull request's code using `actions/checkout`. It then executes the code using `go vet -v ./...` and `go test -v`. This allows a malicious pull request to execute arbitrary code on the runner with access to repository secrets.,,ortil1@gmail.com,ortil1@gmail.com,,,,,,,,,
DataDog,https://github.com/DataDog/airbyte/blob/HEAD/.github/workflows/commands-for-testing-tool.yml,Untrusted Input,very high,"The workflow passes github.event.comment.body directly to a docker run command without sanitization. A malicious actor could submit a pull request with a crafted comment containing malicious code, leading to arbitrary code execution within the docker container. This allows potential access to secrets mounted within the container, including AIRBYTEIO_PAT, OSS_BUILD_RUNNER_GITHUB_PAT, SUPERTOPHER_PAT, DAVINCHIA_PAT, and GCP_GSM_CREDENTIALS_FOR_TESTING_TOOL.",github.event.comment.body,perangel@gmail.com,perangel@gmail.com,v.pochtar@gmail.com,,,,,,,,
w3c,https://github.com/w3c/echidna/blob/HEAD/.github/workflows/node.js.yml,PR Target,medium,"This workflow uses the `pull_request_target` trigger and checks out the pull request's code using `actions/checkout@v4`. It then executes `npm install` and `npm run build`, which could potentially run malicious scripts introduced in the PR. However, it only does so if the actor is 'dependabot[bot]'. Further investigation is needed to determine the exact impact and potential for exploitation in this specific scenario.",,,denis@w3.org,jennyliang@w3.org,nschonni@gmail.com,,,,,,,
w3c,https://github.com/w3c/node-w3capi/blob/HEAD/.github/workflows/node.js.yml,PR Target,medium,"This workflow uses the `pull_request_target` trigger and checks out the pull request's code using `actions/checkout@v4`. It then executes `npm ci` and `npm test`, which could potentially run malicious scripts introduced in the PR. However, it only does so if the actor is 'dependabot[bot]'. Further investigation is needed to determine the exact impact and potential for exploitation in this specific scenario.",,,denis@w3.org,,,,,,,,,
dotnet,https://github.com/dotnet/docs/blob/HEAD/.github/workflows/check-for-build-warnings.yml,PR Target,low,"This workflow uses the `pull_request_target` trigger and checks out the pull request's code using `actions/checkout@v4.1.5`. However, it doesn't appear to execute any code from the PR, only using it for the `dotnet/docs-tools/actions/status-checker@main` action. The severity is low because the potential for exploitation seems limited.",,,david.pine@microsoft.com,,,,,,,,,
toptal,https://github.com/toptal/OpenMetadata/blob/HEAD/.github/workflows/airflow-apis-tests-3_9.yml,PR Target,high,"This workflow uses the `pull_request_target` trigger, checks out the PR's code, and executes `make install_all install_test`, `./docker/run_local_docker.sh`, and `make install_apis coverage_apis`. These commands likely execute code from the checked-out PR, making it highly exploitable. An attacker could gain access to the target repository's secrets via the `SONAR_TOKEN` environment variable.",,peremiquelbrull@gmail.com,peremiquelbrull@gmail.com,ayush@getcollate.io,anuj.j@deuexsolutions.com,nahuel@getcollate.io,onkar.10r@gmail.com,,,,,
dotnet,https://github.com/dotnet/Silk.NET/blob/HEAD/.github/workflows/public-api.yml,PR Target,medium,"This workflow uses the `pull_request_target` trigger and checks out the pull request's code using `actions/checkout@v2`. It then executes `./build.sh EnsureApiDeclared` and `./build.sh ShipApi`, which could potentially run malicious code introduced in the PR. Further investigation is needed to determine the exact functionality of these scripts and their potential impact.",,,alex@alexrp.com,ep1cm1n10n123@gmail.com,,,,,,,,
dotnet,https://github.com/dotnet/docs-aspire/blob/HEAD/.github/workflows/check-for-build-warnings.yml,PR Target,low,"This workflow uses the `pull_request_target` trigger and checks out the pull request's code using `actions/checkout@v4`. However, it doesn't appear to execute any code from the PR, only using it for the `dotnet/docs-tools/actions/status-checker@main` action. The severity is low because the potential for exploitation seems limited.",,,david.pine.7@gmail.com,,,,,,,,,
alibaba,https://github.com/alibaba/havenask-federation/blob/HEAD/.github/workflows/gradle_check_part1.yml,PR Target,medium,"This workflow uses the `pull_request_target` trigger and checks out the pull request's code using `actions/checkout@v3`. It then executes `./gradlew test`, which could potentially run malicious code introduced in the PR through build scripts or dependencies. Further investigation is needed to determine the exact impact and potential for exploitation.",,,weizijun.wzj@alibaba-inc.com,,,,,,,,,
alibaba,https://github.com/alibaba/havenask-federation/blob/HEAD/.github/workflows/gradle_check_part2.yml,PR Target,medium,"This workflow uses the `pull_request_target` trigger and checks out the pull request's code using `actions/checkout@v3`. It then executes `./gradlew check`, which could potentially run malicious code introduced in the PR through build scripts or dependencies. Further investigation is needed to determine the exact impact and potential for exploitation.",,,weizijun.wzj@alibaba-inc.com,,,,,,,,,
alibaba,https://github.com/alibaba/havenask-federation/blob/HEAD/.github/workflows/gradle_check_part3.yml,PR Target,medium,"This workflow uses the `pull_request_target` trigger and checks out the pull request's code using `actions/checkout@v3`. It then executes `./gradlew checkPart1`, which could potentially run malicious code introduced in the PR through build scripts or dependencies. Further investigation is needed to determine the exact impact and potential for exploitation.",,,weizijun.wzj@alibaba-inc.com,,,,,,,,,
toptal,https://github.com/toptal/OpenMetadata/blob/HEAD/.github/workflows/maven-build.yml,PR Target,high,"This workflow uses the `pull_request_target` trigger, checks out the PR's code, and executes `mvn clean package -am`. This command likely builds and packages code from the PR, making it highly exploitable. An attacker could potentially modify the build process to gain access to the target repository's secrets.",,peremiquelbrull@gmail.com,peremiquelbrull@gmail.com,anuj.j@deuexsolutions.com,nahuel@getcollate.io,teddy.crepineau@gmail.com,,,,,,
splunk,https://github.com/splunk/llvm-project/blob/HEAD/.github/workflows/pr-code-format.yml,PR Target,low,"This workflow uses the `pull_request_target` trigger and checks out the pull request's code using `actions/checkout@v4`. However, it explicitly mentions avoiding execution of code from the PR for security reasons. It uses `python ./code-format-tools/llvm/utils/git/code-format-helper.py` for code formatting, which is unlikely to be directly exploitable. The severity is low because the potential for exploitation seems limited.",,,agrossman154@yahoo.com,chris.bieneman@me.com,tobias@hieta.se,,,,,,,
mitre,https://github.com/mitre/ansible-rhel7-stig-hardening/blob/HEAD/.github/workflows/devel_pipeline_validation.yml,PR Target,medium,"This workflow uses the `pull_request_target` trigger and checks out the pull request's code using `actions/checkout@v4`. It then executes `terraform` commands and an Ansible playbook, which could potentially run malicious code introduced in the PR. Further investigation is needed to determine the exact impact and potential for exploitation.",,,mark.bollyuk@gmail.com,,,,,,,,,
mitre,https://github.com/mitre/ansible-rhel7-stig-hardening/blob/HEAD/.github/workflows/main_pipeline_validation.yml,PR Target,medium,"This workflow uses the `pull_request_target` trigger and checks out the pull request's code using `actions/checkout@v4`. It then executes `terraform` commands and an Ansible playbook, which could potentially run malicious code introduced in the PR. Further investigation is needed to determine the exact impact and potential for exploitation.",,,mark.bollyuk@gmail.com,,,,,,,,,
toptal,https://github.com/toptal/OpenMetadata/blob/HEAD/.github/workflows/maven-postgres-tests-build.yml,PR Target,high,"This workflow uses the `pull_request_target` trigger, checks out the PR's code, and executes `mvn -Ppostgres-tests clean package -am`. This command likely builds and packages code from the PR, making it highly exploitable. An attacker could potentially modify the build process to gain access to the target repository's secrets.",,peremiquelbrull@gmail.com,peremiquelbrull@gmail.com,,,,,,,,,
mitre,https://github.com/mitre/UBUNTU18-STIG/blob/HEAD/.github/workflows/devel_pipeline_validation.yml,PR Target,medium,"This workflow uses the `pull_request_target` trigger and checks out the pull request's code using `actions/checkout@v3`. It then executes `terraform` commands and an Ansible playbook, which could potentially run malicious code introduced in the PR. Further investigation is needed to determine the exact impact and potential for exploitation.",,,mark.bollyuk@gmail.com,,,,,,,,,
mitre,https://github.com/mitre/UBUNTU18-STIG/blob/HEAD/.github/workflows/main_pipeline_validation.yml,PR Target,medium,"This workflow uses the `pull_request_target` trigger and checks out the pull request's code using `actions/checkout@v3`. It then executes `terraform` commands and an Ansible playbook, which could potentially run malicious code introduced in the PR. Further investigation is needed to determine the exact impact and potential for exploitation.",,,mark.bollyuk@gmail.com,,,,,,,,,
Orange-OpenSource,https://github.com/Orange-OpenSource/frr-orange/blob/HEAD/.github/workflows/behind-base.yml,PR Target,low,"This workflow uses the `pull_request_target` trigger and checks out the pull request's code using `actions/checkout@v3`. However, it doesn't appear to execute any code from the PR, only using it for `git log` and the `actions-ecosystem/action-add-labels@v1` action. The severity is low because the potential for exploitation seems limited.",,,donatas@opensourcerouting.org,,,,,,,,,
toptal,https://github.com/toptal/OpenMetadata/blob/HEAD/.github/workflows/maven-sonar-build.yml,PR Target,high,"This workflow uses the `pull_request_target` trigger, checks out the PR's code, and executes `mvn -Pstatic-code-analysis clean package -am`. This command likely builds and packages code from the PR, making it highly exploitable. An attacker could potentially modify the build process to gain access to the target repository's secrets.",,peremiquelbrull@gmail.com,peremiquelbrull@gmail.com,,,,,,,,,
toptal,https://github.com/toptal/OpenMetadata/blob/HEAD/.github/workflows/playwright-integration-tests-mysql.yml,PR Target,high,"This workflow uses the `pull_request_target` trigger, checks out the PR's code, and executes `python3 -m venv env`, `make install_dev generate install_e2e_tests`, `./docker/run_local_docker.sh`, and `make install_e2e_tests run_e2e_tests`. These commands likely execute code from the checked-out PR, making it highly exploitable. An attacker could gain access to the target repository's secrets via the environment variables passed to the `make run_e2e_tests` command.",,peremiquelbrull@gmail.com,ayush@getcollate.io,peremiquelbrull@gmail.com,teddy.crepineau@gmail.com,,,,,,,
OWASP,https://github.com/OWASP/OWASP-VWAD/blob/HEAD/.github/workflows/validate.yml,PR Target,low,"This workflow uses the `pull_request_target` trigger and checks out the PR's code. However, it only performs JSON schema validation and doesn't execute any code from the PR. While it does have write access to the repository, the potential impact is limited to modifying repository content, making the severity low.",,,,,,,,,,,,
OWASP,https://github.com/OWASP/wstg/blob/HEAD/.github/workflows/md-link-check.yml,PR Target,low,"This workflow uses the `pull_request_target` trigger and checks out the PR's code. However, it only performs markdown link checks and doesn't execute any code from the PR. While it does have write access to the repository, the potential impact is limited to modifying repository content, making the severity low.",,,virgoj@protonmail.com,rejah@beaglesecurity.com,rejah@appfabs.com,,,,,,,
OWASP,https://github.com/OWASP/wstg/blob/HEAD/.github/workflows/md-lint-check.yml,PR Target,low,"This workflow uses the `pull_request_target` trigger and checks out the PR's code. However, it only performs markdown linting and doesn't execute any code from the PR. While it does have write access to the repository, the potential impact is limited to modifying repository content, making the severity low.",,,virgoj@protonmail.com,rejah@beaglesecurity.com,rejah@appfabs.com,,,,,,,
OWASP,https://github.com/OWASP/wstg/blob/HEAD/.github/workflows/md-textlint-check.yml,PR Target,low,"This workflow uses the `pull_request_target` trigger and checks out the PR's code. However, it only performs terminology linting on markdown files and doesn't execute any code from the PR. While it does have write access to the repository, the potential impact is limited to modifying repository content, making the severity low.",,,virgoj@protonmail.com,rejah@beaglesecurity.com,,,,,,,,
OWASP,https://github.com/OWASP/www-community/blob/HEAD/.github/workflows/validate-tools-json.yml,PR Target,low,"This workflow uses the `pull_request_target` trigger and checks out the PR's code. However, it only performs JSON schema validation and doesn't execute any code from the PR. While it does have write access to the repository, the potential impact is limited to modifying repository content, making the severity low.",,,,,,,,,,,,
awslabs,https://github.com/awslabs/aws-cloudformation-controller-for-flux/blob/HEAD/.github/workflows/integ-tests-pr.yml,PR Target,medium,"This workflow uses the `pull_request_target` trigger and checks out the PR's code using `github.event.pull_request.head.sha`. It then sets up a local Kubernetes cluster using Kind and deploys resources to it. While it doesn't directly execute code from the PR, a malicious PR could potentially modify the deployment manifests or introduce malicious resources, leading to compromise of the local cluster. The severity is rated as medium due to the potential for privilege escalation within the local cluster.",,,liguori@amazon.com,,,,,,,,,
toptal,https://github.com/toptal/OpenMetadata/blob/HEAD/.github/workflows/playwright-integration-tests-postgres.yml,PR Target,high,"This workflow uses the `pull_request_target` trigger, checks out the PR's code, and executes `python3 -m venv env`, `make install_dev generate install_e2e_tests`, `./docker/run_local_docker.sh`, and `make install_e2e_tests run_e2e_tests`. These commands likely execute code from the checked-out PR, making it highly exploitable. An attacker could gain access to the target repository's secrets via the environment variables passed to the `make run_e2e_tests` command.",,peremiquelbrull@gmail.com,ayush@getcollate.io,peremiquelbrull@gmail.com,teddy.crepineau@gmail.com,,,,,,,
toptal,https://github.com/toptal/OpenMetadata/blob/HEAD/.github/workflows/py-tests.yml,PR Target,high,"This workflow uses the `pull_request_target` trigger, checks out the PR's code, and executes `make run_python_tests` and `make coverage`. These commands likely execute code from the checked-out PR, making it highly exploitable. An attacker could gain access to the target repository's secrets via the `SONAR_TOKEN` environment variable.",,peremiquelbrull@gmail.com,pablo.takara@getcollate.io,peremiquelbrull@gmail.com,ayush@getcollate.io,nahuel@getcollate.io,,,,,,
juspay,https://github.com/juspay/nixpkgs/blob/HEAD/.github/workflows/backport.yml,PR Target,medium,"This workflow uses the `pull_request_target` trigger and checks out the PR's code using `github.event.pull_request.head.sha`. It then uses the `korthout/backport-action` to create backport PRs. While it doesn't directly execute code from the PR, a malicious PR could potentially modify the backporting process, leading to unintended code changes in other branches. The severity is rated as medium due to the potential for unintended code modifications.",,,hexa@darmstadt.ccc.de,winter@winter.cafe,varunsh@stepsecurity.io,joerg@thalheim.io,domen@dev.si,mail@nh2.me,,,,
broadinstitute,https://github.com/broadinstitute/pupmod-simp-auditd/blob/HEAD/.github/workflows/pr_glci.yml,PR Target,medium,"This workflow uses the `pull_request_target` trigger and checks out the PR's code. It then performs a syntax check on a `.gitlab-ci.yml` file and triggers a GitLab CI pipeline if the contributor has write access to the repository. While it doesn't directly execute code from the PR, a malicious PR could potentially modify the `.gitlab-ci.yml` file to execute arbitrary code in the GitLab CI environment. The severity is rated as medium due to the potential for remote code execution in a different CI system.",,,chris.tessmer@onyxpoint.com,,,,,,,,,
broadinstitute,https://github.com/broadinstitute/pupmod-simp-auditd/blob/HEAD/.github/workflows/pr_glci_cleanup.yml,PR Target,low,"This workflow uses the `pull_request_target` trigger and checks out the PR's code. However, it only performs cleanup tasks on GitLab CI pipelines and branches. It doesn't execute any code from the PR, and its access is limited to interacting with the GitLab API. Therefore, the severity is rated as low.",,,chris.tessmer@onyxpoint.com,,,,,,,,,
toptal,https://github.com/toptal/OpenMetadata/blob/HEAD/.github/workflows/yarn-coverage.yml,PR Target,high,"This workflow uses the `pull_request_target` trigger, checks out the PR's code, and executes `yarn install`, `yarn test:cov-summary`, and `npm install -g sonarqube-scanner`. These commands likely execute code from the checked-out PR. Additionally, the workflow exposes the `SONAR_TOKEN` secret as an environment variable to the `sonar-scanner` command, making it highly exploitable.",,peremiquelbrull@gmail.com,peremiquelbrull@gmail.com,sachinchaurasiyachotey87@gmail.com,nahuel@getcollate.io,ayush@getcollate.io,,,,,,
Unity-Technologies,https://github.com/Unity-Technologies/create-data-open-metadata/blob/HEAD/.github/workflows/maven-build.yml,PR Target,high,"This workflow uses the `pull_request_target` trigger and checks out the PR's code using `actions/checkout@v3` with `ref: ${{ github.event.pull_request.head.sha }}`. It then builds the code with Maven, potentially executing malicious code from the PR. The workflow has access to the `GITHUB_TOKEN` secret, which could be exfiltrated by malicious code. Additionally, the workflow runs `npm install` and `npm build`, which could execute malicious scripts defined in the PR's `package.json` file.",,peremiquelbrull@gmail.com,peremiquelbrull@gmail.com,nahuel@getcollate.io,teddy.crepineau@gmail.com,ayush@getcollate.io,,,,,,
ClickHouse,https://github.com/ClickHouse/docker-library-official-images/blob/HEAD/.github/workflows/munge-pr.yml,PR Target,medium,"This workflow uses the `pull_request_target` trigger and checks out the PR's code using `github.event.pull_request.head.sha`. It then performs various tasks related to managing Docker images, including gathering metadata, applying labels, and generating diffs. While it doesn't directly execute code from the PR, a malicious PR could potentially modify the metadata gathering or diff generation process, leading to misleading information or unintended changes in the workflow's behavior. The severity is rated as medium due to the potential for manipulation of workflow processes.",,,mgrigorov@openeuler.sh,admwiggin@gmail.com,,,,,,,,
Unity-Technologies,https://github.com/Unity-Technologies/create-data-open-metadata/blob/HEAD/.github/workflows/py-checkstyle.yml,PR Target,high,"This workflow uses the `pull_request_target` trigger and checks out the PR's code using `actions/checkout@v3` with `ref: ${{ github.event.pull_request.head.sha }}`. It then runs `make generate`, `make py_format_check`, and `make py_format`, which could execute malicious code from the PR. The workflow has access to the `GITHUB_TOKEN` secret, which could be exfiltrated by malicious code.",,peremiquelbrull@gmail.com,nahuel@getcollate.io,peremiquelbrull@gmail.com,ayush@getcollate.io,p.brull@stuart.com,,,,,,
Unity-Technologies,https://github.com/Unity-Technologies/create-data-open-metadata/blob/HEAD/.github/workflows/py-tests.yml,PR Target,high,"This workflow uses the `pull_request_target` trigger and checks out the PR's code using `actions/checkout@v3` with `ref: ${{ github.event.pull_request.head.sha }}`. It then runs various commands, including `./docker/run_local_docker.sh`, `make run_python_tests`, and `make coverage`, which could execute malicious code from the PR. The workflow has access to the `GITHUB_TOKEN` and `INGESTION_SONAR_SECRET` secrets, which could be exfiltrated by malicious code.",,peremiquelbrull@gmail.com,peremiquelbrull@gmail.com,nahuel@getcollate.io,ayush@getcollate.io,,,,,,,
ClickHouse,https://github.com/ClickHouse/ibis/blob/HEAD/.github/workflows/pr-title.yml,PR Target,low,"This workflow uses the `pull_request_target` trigger and checks out the PR's code using `github.event.pull_request.head.sha`. However, it only performs a commit message linting check and doesn't execute any code from the PR. While it does have write access to issues and pull requests, the potential impact is limited to commenting and modifying PR metadata, making the severity low.",,,gil@forsyth.dev,,,,,,,,,
Unity-Technologies,https://github.com/Unity-Technologies/create-data-open-metadata/blob/HEAD/.github/workflows/yarn-coverage.yml,PR Target,high,"This workflow uses the `pull_request_target` trigger and checks out the PR's code using `actions/checkout@v3` with `ref: ${{ github.event.pull_request.head.sha }}`. It then runs `yarn install`, `yarn test:cov-summary`, and `sonar-scanner`, which could execute malicious code from the PR. The workflow has access to the `GITHUB_TOKEN` and `UI_SONAR_TOKEN` secrets, which could be exfiltrated by malicious code.",,peremiquelbrull@gmail.com,sachinchaurasiyachotey87@gmail.com,nahuel@getcollate.io,peremiquelbrull@gmail.com,ayush@getcollate.io,,,,,,
espressif,https://github.com/espressif/esp-coredump/blob/HEAD/.github/workflows/dangerjs.yml,PR Target,high,"This workflow uses `pull_request_target`, checks out the PR's code using `actions/checkout@v3`, and then executes code from the PR using `espressif/github-actions/danger_pr_review@master`. This action is likely running code from the PR, making it highly exploitable.",,peter.dragun@espressif.com,peter.dragun@espressif.com,,,,,,,,,
espressif,https://github.com/espressif/esp-idf-kconfig/blob/HEAD/.github/workflows/dangerjs.yml,PR Target,high,"This workflow uses `pull_request_target`, checks out the PR's code using `actions/checkout@v3`, and then executes code from the PR using `espressif/github-actions/danger_pr_review@master`. This action is likely running code from the PR, making it highly exploitable.",,peter.dragun@espressif.com,peter.dragun@espressif.com,,,,,,,,,
influxdata,https://github.com/influxdata/official-images/blob/HEAD/.github/workflows/munge-pr.yml,PR Target,medium,"This workflow uses the `pull_request_target` trigger and checks out the PR's code using `github.event.pull_request.head.sha`. It then performs various tasks related to managing Docker images, including gathering metadata, applying labels, and generating diffs. While it doesn't directly execute code from the PR, a malicious PR could potentially modify the metadata gathering or diff generation process, leading to misleading information or unintended changes in the workflow's behavior. The severity is rated as medium due to the potential for manipulation of workflow processes.",,,mgrigorov@openeuler.sh,admwiggin@gmail.com,,,,,,,,
influxdata,https://github.com/influxdata/google-cloud-rust/blob/HEAD/.github/workflows/ci.yaml,PR Target,medium,"This workflow uses the `pull_request_target` trigger and checks out the PR's code using `github.event.pull_request.head.ref`. It then runs various tests and checks, including interacting with Google Cloud services. While it doesn't directly execute arbitrary code from the PR, a malicious PR could potentially modify the test setup or introduce malicious dependencies, leading to compromise of the runner environment or exfiltration of sensitive information. The severity is rated as medium due to the potential for environment compromise and data exfiltration.",,,naohiro.y@gmail.com,fredrik@enestad.com,,,,,,,,
ansible,https://github.com/ansible/aws-cdk/blob/HEAD/.github/workflows/request-cli-integ-test.yml,PR Target,medium,"This workflow uses the `pull_request_target` trigger and checks out the PR's code using `github.event.pull_request.head.ref`. It then checks for changes in specific files and, if found, pushes a commit to a specific branch (`test-main-pipeline`) in the repository. While it doesn't directly execute arbitrary code from the PR, a malicious PR could potentially modify the files checked for changes or introduce unwanted changes in the forced push, leading to unintended modifications in the target branch. The severity is rated as medium due to the potential for unauthorized repository modifications.",,,kornherm@amazon.co.uk,,,,,,,,,
ansible,https://github.com/ansible/gcp-cloud-sql-proxy/blob/HEAD/.github/workflows/codeql.yml,PR Target,low,"This workflow uses the `pull_request_target` trigger and checks out the PR's code using `github.event.pull_request.head.sha`. However, it only performs CodeQL analysis and doesn't execute any code from the PR. While it does have write access to security events, the potential impact is limited to reporting vulnerabilities, making the severity low.",,,jackwoth@google.com,,,,,,,,,
espressif,https://github.com/espressif/esp-idf-monitor/blob/HEAD/.github/workflows/dangerjs.yml,PR Target,high,"This workflow uses `pull_request_target`, checks out the PR's code using `actions/checkout@v3`, and then executes code from the PR using `espressif/github-actions/danger_pr_review@master`. This action is likely running code from the PR, making it highly exploitable.",,peter.dragun@espressif.com,peter.dragun@espressif.com,,,,,,,,,
CleverRaven,https://github.com/CleverRaven/Cataclysm-DDA/blob/HEAD/.github/workflows/linter.yml,PR Target,high,"This workflow uses the `pull_request_target` trigger and checks out the PR's code using `actions/checkout@v4` with the `ref` set to the PR's head SHA. It then proceeds to execute the PR's code by running `sudo apt-get install astyle`, `make astyle-fast`, and `make style-all-json-parallel`. This allows a malicious PR to execute arbitrary code on the runner with write access to the repository.",,phantrungson17@gmail.com,phantrungson17@gmail.com,,,,,,,,,
Shopify,https://github.com/Shopify/nixpkgs/blob/HEAD/.github/workflows/backport.yml,PR Target,medium,"This workflow uses the `pull_request_target` trigger and checks out the pull request's code using `actions/checkout`. It then uses the `zeebe-io/backport-action` to create backport PRs. While the action itself might not be directly exploitable, a malicious pull request could potentially manipulate the backport process to introduce unwanted code into other branches.",,,domen@dev.si,mail@nh2.me,,,,,,,,
ipfs,https://github.com/ipfs/github-mgmt/blob/HEAD/.github/workflows/fix.yml,PR Target,high,"This workflow uses the `pull_request_target` trigger and checks out the PR's code using `actions/checkout@v4`. It then executes a script from the PR's code using `node lib/actions/fix-yaml-config.js`. This script has access to several secrets, including `RO_AWS_ACCESS_KEY_ID`, `RO_AWS_SECRET_ACCESS_KEY`, `RO_GITHUB_APP_ID`, `RO_GITHUB_APP_INSTALLATION_ID`, and `RO_GITHUB_APP_PEM_FILE`. This allows a malicious PR to execute arbitrary code on the runner with access to sensitive information.",,piotr.galar@gmail.com,piotr.galar@gmail.com,,,,,,,,,
elastic,https://github.com/elastic/idea-indexing-metrics-collector/blob/HEAD/.github/workflows/release.yml,Untrusted Input,high,The workflow uses github.event.release.body to extract the changelog content and uses it in a 'patchChangelog' Gradle task. A malicious actor could craft a release body containing malicious code that could be executed during the Gradle task.,github.event.release.body,rene@elastic.co,rene@elastic.co,rene@breskeby.com,,,,,,,,
nodesource,https://github.com/nodesource/nodejs.org/blob/HEAD/.github/workflows/lighthouse.yml,PR Target,medium,"This workflow uses the `pull_request_target` trigger and checks out the pull request's code using `actions/checkout`. It then runs a lighthouse audit on a Vercel preview URL. While the workflow doesn't directly execute code from the pull request, a malicious pull request could potentially manipulate the preview URL or the content being audited to expose sensitive information.",,,brian.muenzenmeyer@gmail.com,cwunder@gnome.org,,,,,,,,
directus,https://github.com/directus/cli/blob/HEAD/.github/workflows/dependabot.yml,PR Target,high,"This workflow uses the `pull_request_target` trigger and checks out the PR's code using `actions/checkout@v2` with a custom token (`secrets.PUSH_PAT`). It then executes `pnpm i --lockfile-only`, modifies the `pnpm-lock.yaml` file, and pushes the changes back to the repository. This allows a malicious PR to modify the repository's dependencies and potentially introduce malicious code.",,rijkvanzanten@me.com,rijkvanzanten@me.com,,,,,,,,,
nodesource,https://github.com/nodesource/nodejs.org/blob/HEAD/.github/workflows/translations-pr.yml,PR Target,medium,"This workflow uses the `pull_request_target` trigger and checks out the pull request's code using `actions/checkout`. It then runs `eslint`, `prettier`, and pushes changes back to the pull request. While the workflow primarily focuses on formatting translated files, a malicious pull request could potentially manipulate the linting and formatting process to introduce unwanted changes.",,,cwunder@gnome.org,brian.muenzenmeyer@gmail.com,cwunder@hubspot.com,adhirajd007@gmail.com,,,,,,
nodesource,https://github.com/nodesource/fastify/blob/HEAD/.github/workflows/benchmark-parser.yml,PR Target,low,"This workflow uses the `pull_request_target` trigger and checks out the pull request's code using `actions/checkout`. It then runs benchmarks and comments the results on the PR. While it executes code from the pull request, the potential impact of a malicious pull request is limited to manipulating benchmark results.",,,iselwin@gmail.com,aras.abbasi@googlemail.com,,,,,,,,
nodesource,https://github.com/nodesource/fastify/blob/HEAD/.github/workflows/benchmark.yml,PR Target,low,"This workflow uses the `pull_request_target` trigger and checks out the pull request's code using `actions/checkout`. It then runs benchmarks and comments the results on the PR. While it executes code from the pull request, the potential impact of a malicious pull request is limited to manipulating benchmark results.",,,behemoth89@gmail.com,aras.abbasi@googlemail.com,rafael.nunu@hotmail.com,frazer.dev@outlook.com,yagiz@nizipli.com,,,,,
xamarin,https://github.com/xamarin/xamarin-macios/blob/HEAD/.github/workflows/bump-global-json.yml,PR Target,high,This workflow uses the `pull_request_target` trigger and checks out the PR's code using `actions/checkout@v4`. It then executes the PR's code by running `make global.json`. This allows a malicious PR to execute arbitrary code on the runner with write access to the repository.,,rolf@xamarin.com,rolf@xamarin.com,,,,,,,,,
infinitered,https://github.com/infinitered/ExpensifyApp/blob/HEAD/.github/workflows/testBuild.yml,PR Target,high,"This workflow uses the `pull_request_target` trigger and checks out the PR's code using `github.event.pull_request.head.sha`. It then proceeds to execute various build and deployment steps for Android, iOS, desktop, and web platforms. This grants a malicious PR author the ability to execute arbitrary code within the workflow runner, potentially gaining access to sensitive secrets like `LARGE_SECRET_PASSPHRASE`, `AWS_ACCESS_KEY_ID`, `AWS_SECRET_ACCESS_KEY`, `MYAPP_UPLOAD_STORE_PASSWORD`, `MYAPP_UPLOAD_KEY_PASSWORD`, `DEVELOPER_ID_SECRET_PASSPHRASE`, `CSC_LINK`, `CSC_KEY_PASSWORD`, `APPLE_ID`, and `APPLE_ID_PASSWORD`. Due to the potential access to numerous high-value secrets, the severity is rated as high.",,rory@expensify.com,rory@expensify.com,vit@expensify.com,andrew@expensify.com,mariusz.stanisz@swmansion.com,pedro.a.c.guerreiro@gmail.com,jules@expensify.com,allroundexperts@gmail.com,radoslaw.krzemien@swmansion.com,mihail.nso@gmail.com,hayata@expensify.com
grafana,https://github.com/grafana/official-images/blob/HEAD/.github/workflows/munge-pr.yml,PR Target,medium,"This workflow uses the `pull_request_target` trigger and checks out the pull request's code using `actions/checkout`. It then generates a diff and comments on the PR. While it executes code from the pull request, the potential impact of a malicious pull request is limited to manipulating the diff output and comments.",,,admwiggin@gmail.com,,,,,,,,,
broadinstitute,https://github.com/broadinstitute/cromwhelm/blob/HEAD/.github/workflows/update-and-publish-helm-chart.yml,Untrusted Input,high,The workflow uses github.event.head_commit.message in a shell script that extracts a Jira ID. An attacker could craft a malicious commit message to inject arbitrary commands into the shell script.,github.event.head_commit.message,rtitle@broadinstitute.org,michael.l.spector@gmail.com,rtitle@broadinstitute.org,aednichols@gmail.com,salonipshah11@gmail.com,,,,,,
GoogleCloudPlatform,https://github.com/GoogleCloudPlatform/cloud-sql-nodejs-connector/blob/HEAD/.github/workflows/coverage.yml,PR Target,high,"This workflow uses the `pull_request_target` trigger, checks out the pull request's code using `actions/checkout`, and then executes code using `npm install` and `npx tap test`. This allows an attacker to execute arbitrary code in the context of the workflow, potentially gaining access to secrets or modifying the repository.",,ruyadorno@google.com,renovate@whitesourcesoftware.com,ruyadorno@google.com,,,,,,,,
GoogleCloudPlatform,https://github.com/GoogleCloudPlatform/cloud-sql-nodejs-connector/blob/HEAD/.github/workflows/lint.yml,PR Target,high,"This workflow uses the `pull_request_target` trigger, checks out the pull request's code using `actions/checkout`, and then executes code using `npm install` and `npm run lint`. This allows an attacker to execute arbitrary code in the context of the workflow, potentially gaining access to secrets or modifying the repository.",,ruyadorno@google.com,renovate@whitesourcesoftware.com,jackwoth@google.com,ruyadorno@google.com,,,,,,,
nodejs,https://github.com/nodejs/nodejs.org/blob/HEAD/.github/workflows/lighthouse.yml,PR Target,medium,"This workflow uses the `pull_request_target` trigger and checks out the pull request's code using `actions/checkout`. It then runs a lighthouse audit on a Vercel preview URL. While the workflow doesn't directly execute code from the pull request, a malicious pull request could potentially manipulate the preview URL or the content being audited to expose sensitive information.",,,brian.muenzenmeyer@gmail.com,cwunder@gnome.org,,,,,,,,
GoogleCloudPlatform,https://github.com/GoogleCloudPlatform/cloud-sql-nodejs-connector/blob/HEAD/.github/workflows/tests.yml,PR Target,high,"This workflow uses the `pull_request_target` trigger, checks out the pull request's code using `actions/checkout`, and then executes code using `npm ci`, `npm run prepare`, `npm link`, `npx tap`, and various test scripts. This allows an attacker to execute arbitrary code in the context of the workflow, potentially gaining access to secrets or modifying the repository.",,ruyadorno@google.com,renovate@whitesourcesoftware.com,jackwoth@google.com,ruyadorno@google.com,shubhadayini@google.com,,,,,,
nodejs,https://github.com/nodejs/nodejs.org/blob/HEAD/.github/workflows/translations-pr.yml,PR Target,medium,"This workflow uses the `pull_request_target` trigger and checks out the pull request's code using `actions/checkout`. It then runs `eslint`, `prettier`, and pushes changes back to the pull request. While the workflow primarily focuses on formatting translated files, a malicious pull request could potentially manipulate the linting and formatting process to introduce unwanted changes.",,,cwunder@gnome.org,brian.muenzenmeyer@gmail.com,cwunder@hubspot.com,adhirajd007@gmail.com,,,,,,
cloudflare,https://github.com/cloudflare/Azure-Sentinel/blob/HEAD/.github/workflows/convertKqlFuncYamlToArmTemplate.yaml,PR Target,high,"This workflow is vulnerable to PR target attacks. It uses the `pull_request_target` trigger and checks out the PR's code. It then runs the `kqlFuncYaml2Arm.ps1` script, potentially executing malicious code. While it attempts to mitigate the risk by setting `persist-credentials` to false, the script's execution with elevated permissions still poses a significant threat.",,sivang@microsoft.com,sivang@microsoft.com,,,,,,,,,
apache,https://github.com/apache/doris/blob/HEAD/.github/workflows/clang-format.yml,PR Target,medium,"This workflow uses the `pull_request_target` trigger and checks out the pull request's code using `actions/checkout`. It then runs clang-format on the code. While it executes code from the pull request, the potential impact of a malicious pull request is limited to manipulating the code formatting.",,,hello_stephen@qq.com,adonis0147@gmail.com,pxl290@qq.com,morningman.cmy@gmail.com,kezhenxu94@apache.org,,,,,
apache,https://github.com/apache/doris/blob/HEAD/.github/workflows/code-checks.yml,PR Target,medium,"This workflow uses the `pull_request_target` trigger and checks out the pull request's code using `actions/checkout`. It then runs ShellCheck and clang-tidy on the code. While it executes code from the pull request, the potential impact of a malicious pull request is limited to manipulating the code analysis results.",,,pxl290@qq.com,w41ter.l@gmail.com,adonis0147@gmail.com,acm_master@163.com,airborne08@gmail.com,kaka11.chen@gmail.com,morningman@163.com,,,
apache,https://github.com/apache/doris/blob/HEAD/.github/workflows/license-eyes.yml,PR Target,low,"This workflow uses the `pull_request_target` trigger and checks out the pull request's code using `actions/checkout`. It then runs a license check on the code. While it accesses the pull request's code, the potential impact of a malicious pull request is limited to manipulating the license check results.",,,adonis0147@gmail.com,hello_stephen@qq.com,morningman.cmy@gmail.com,,,,,,,
apache,https://github.com/apache/doris-streamloader/blob/HEAD/.github/workflows/license-eyes.yml,PR Target,low,"This workflow uses the `pull_request_target` trigger and checks out the pull request's code using `actions/checkout`. It then runs a license check on the code. While it accesses the pull request's code, the potential impact of a malicious pull request is limited to manipulating the license check results.",,,freeman.zhang1992@gmail.com,,,,,,,,,
cloudflare,https://github.com/cloudflare/Azure-Sentinel/blob/HEAD/.github/workflows/runAsimTesters.yaml,PR Target,high,"This workflow is vulnerable due to the use of `pull_request_target` and checking out the PR's code. It then runs `runAsimTesters.ps1` with elevated permissions using `azure/powershell@v1`, potentially allowing malicious code execution. Access to sensitive secrets like `AZURE_CLIENT_ID`, `AZURE_TENANT_ID`, and `AZURE_SUBSCRIPTION_ID` significantly increases the risk.",,sivang@microsoft.com,sivang@microsoft.com,,,,,,,,,
Xilinx,https://github.com/Xilinx/llvm-project/blob/HEAD/.github/workflows/email-check.yaml,PR Target,very low,"This workflow uses the `pull_request_target` trigger and checks out the PR's code using `actions/checkout@v4`. However, it only extracts the author's email from the commit log and validates it. It does not execute any code from the PR, so it's not susceptible to arbitrary code execution.",,,anton@korobeynikov.info,david.spickett@linaro.org,,,,,,,,
Xilinx,https://github.com/Xilinx/llvm-project/blob/HEAD/.github/workflows/pr-code-format.yml,PR Target,low,"This workflow uses the `pull_request_target` trigger and checks out the PR's code twice using `actions/checkout@v4`. However, it explicitly avoids executing any code from the PR and only uses it as data for formatting purposes. While there's a potential risk of data exfiltration, the impact is limited as it doesn't involve code execution.",,,matthias.gehre@amd.com,agrossman154@yahoo.com,tstellar@redhat.com,chris.bieneman@me.com,tobias@hieta.se,,,,,
eslint,https://github.com/eslint/tsc-meetings/blob/HEAD/.github/workflows/generate-transcript.yml,Untrusted Input,high,"The workflow uses github.event.issue.title in a git commit command and in a pull request title and body without proper sanitization, potentially allowing for code injection.",github.event.issue.title,snitin315@gmail.com,snitin315@gmail.com,amareshsm13@gmail.com,kai@kaicataldo.com,,,,,,,
npm,https://github.com/npm/statusboard/blob/HEAD/.github/workflows/publish.yml,PR Target,medium,"This workflow uses the `pull_request_target` trigger and checks out the PR's code using `actions/checkout@v3`. It then runs `npm install`, `npm run build`, and uploads the build artifacts. While it doesn't directly execute arbitrary code, a malicious PR could potentially modify the build process to include malicious code or exfiltrate data.",,,JamesMGreene@github.com,luke@lukekarrys.com,,,,,,,,
hashicorp,https://github.com/hashicorp/vscode-terraform/blob/HEAD/.github/workflows/add-copyright-headers.yml,PR Target,low,"This workflow uses the `pull_request_target` trigger and checks out the PR's code using `actions/checkout@v4`. It then uses the `hashicorp/setup-copywrite` action to add copyright headers and pushes the changes back to the PR branch. While it modifies the repository content, it doesn't execute arbitrary code from the PR.",,,,,,,,,,,,
hashicorp,https://github.com/hashicorp/terraform-provider-aws/blob/HEAD/.github/workflows/library_versions.yml,PR Target,very low,"This workflow uses the `pull_request_target` trigger and checks out the PR's code using `actions/checkout@v4`. However, it only inspects the diff for specific library versions and leaves a comment if necessary. It doesn't execute any code from the PR.",,,Kit_Ewbank@hotmail.com,,,,,,,,,
hashicorp,https://github.com/hashicorp/terraform-cdk/blob/HEAD/.github/workflows/pr-copyright.yml,PR Target,low,"This workflow uses the `pull_request_target` trigger and checks out the PR's code using `actions/checkout@v4`. It then uses the `hashicorp/setup-copywrite` action to add copyright headers and pushes the changes back to the PR branch. While it modifies the repository content, it doesn't execute arbitrary code from the PR.",,,ansgar@hashicorp.com,danielmschmidt92@gmail.com,mutahhir.hayat@hashicorp.com,,,,,,,
hashicorp,https://github.com/hashicorp/terraform-ls/blob/HEAD/.github/workflows/add-copyright-headers.yml,PR Target,low,"This workflow uses the `pull_request_target` trigger and checks out the PR's code using `actions/checkout@v4`. It then uses the `hashicorp/setup-copywrite` action to add copyright headers and pushes the changes back to the PR branch. While it modifies the repository content, it doesn't execute arbitrary code from the PR.",,,,,,,,,,,,
hashicorp,https://github.com/hashicorp/syntax/blob/HEAD/.github/workflows/add-copyright-headers.yml,PR Target,low,"This workflow uses the `pull_request_target` trigger and checks out the PR's code using `actions/checkout@v4`. It then uses the `hashicorp/setup-copywrite` action to add copyright headers and pushes the changes back to the PR branch. While it modifies the repository content, it doesn't execute arbitrary code from the PR.",,,ansgar@hashicorp.com,,,,,,,,,
hashicorp,https://github.com/hashicorp/cdktf-aws-cdk/blob/HEAD/.github/workflows/auto-approve.yml,PR Target,very low,"This workflow uses the `pull_request_target` trigger and checks out the PR's code using `actions/checkout@v4`. However, it only uses the GitHub CLI to approve the PR and add comments. It doesn't execute any code from the PR.",,,nara.kasbergen@gmail.com,,,,,,,,,
hashicorp,https://github.com/hashicorp/cdktf-aws-cdk/blob/HEAD/.github/workflows/update-snapshots.yml,PR Target,medium,"This workflow uses the `pull_request_target` trigger and checks out the PR's code using `actions/checkout@v4`. It then runs `yarn test -- --passWithNoTests --updateSnapshot` in each example directory and pushes the changes back to the PR branch. While it doesn't directly execute arbitrary code, a malicious PR could potentially modify the test scripts to include malicious code or exfiltrate data.",,,nara.kasbergen@gmail.com,,,,,,,,,
hashicorp,https://github.com/hashicorp/terraform-cdk-action/blob/HEAD/.github/workflows/auto-approve.yml,PR Target,very low,"This workflow uses the `pull_request_target` trigger and checks out the PR's code using `actions/checkout@v4`. However, it only uses the GitHub CLI to approve the PR and add comments. It doesn't execute any code from the PR.",,,nara.kasbergen@gmail.com,,,,,,,,,
Kong,https://github.com/Kong/official-images/blob/HEAD/.github/workflows/munge-pr.yml,PR Target,low,"This workflow uses the `pull_request_target` trigger and checks out the PR's code using `actions/checkout@v3`. It then performs various operations like fetching data from external repositories, generating diffs, and adding comments. However, it doesn't execute any code directly from the PR.",,,admwiggin@gmail.com,,,,,,,,,
Kong,https://github.com/Kong/k8s-operatorhub-community-operators/blob/HEAD/.github/workflows/operator_test.yaml,PR Target,very low,"This workflow uses the `pull_request_target` trigger and checks out the PR's code using `actions/checkout@v2`. However, it primarily uses the code to extract information and run tests using external scripts and tools. It doesn't directly execute arbitrary code from the PR.",,,mavala@redhat.com,jbreza@redhat.com,,,,,,,,
Azure,https://github.com/Azure/azure-cli-extensions/blob/HEAD/.github/workflows/VersionCalPRComment.yml,PR Target,low,"This workflow uses the `pull_request_target` trigger and checks out the PR's code using `actions/checkout@master`. It then performs various operations like fetching data from other repositories, running scripts to generate metadata, and adding comments. However, it doesn't directly execute arbitrary code from the PR.",,,,,,,,,,,,
Azure,https://github.com/Azure/AzOps/blob/HEAD/.github/workflows/tests.yml,PR Target,medium,"This workflow uses the `pull_request_target` trigger and checks out the PR's code using `actions/checkout@v4`. It then executes various PowerShell scripts from the PR, including `./scripts/Dependencies.ps1` and `./src/tests/Pester.ps1`. This allows a malicious PR to potentially execute arbitrary code with access to secrets.",,,jesper@fajers.se,johan@dahlbom.eu,,,,,,,,
naver,https://github.com/naver/scavenger/blob/HEAD/.github/workflows/tag.yml,Untrusted Input,high,"The workflow uses github.event.pull_request.title in a shell script and a gradlew command without proper sanitization, potentially allowing for code injection.",github.event.pull_request.title,sohyun.ku@nts-corp.com,sohyun.ku@nts-corp.com,,,,,,,,,
Azure,https://github.com/Azure/Enterprise-Scale/blob/HEAD/.github/workflows/test-portal.yml,PR Target,medium,"This workflow uses the `pull_request_target` trigger and checks out the PR's code using `actions/checkout@v3`. It then executes various PowerShell scripts from the PR, including `./src/scripts/Invoke-ActionRegisterSubscriptions.ps1` and `./src/scripts/Invoke-ActionRunEslzArmDeployment.ps1`. This allows a malicious PR to potentially execute arbitrary code with access to secrets.",,,kevin.rowlandson@microsoft.com,,,,,,,,,
freeCodeCamp,https://github.com/freeCodeCamp/chinese/blob/HEAD/.github/workflows/WebPageToMarkdown.yml,Untrusted Input,high,"The workflow uses github.event.issue.body as input to the 'freeCodeCamp-China/article-webpage-to-markdown-action' action. While the action itself might sanitize the input, it's unclear how it handles potentially malicious content. Depending on the action's implementation, this could lead to code injection or other vulnerabilities.",github.event.issue.body,stevending1st@163.com,stevending1st@163.com,shiy2008@gmail.com,yidajiabei@gmail.com,luojiyin@hotmail.com,1139274654@qq.com,,,,,
Azure,https://github.com/Azure/terraform-azurerm-lz-vending/blob/HEAD/.github/workflows/go-test-deployment.yml,PR Target,medium,"This workflow uses the `pull_request_target` trigger and checks out the PR's code using `actions/checkout@v4`. It then runs `make testdeploy` with various environment variables, including secrets. While it doesn't directly execute arbitrary code, a malicious PR could potentially modify the test scripts to include malicious code or exfiltrate data.",,,matt.white@microsoft.com,,,,,,,,,
Azure,https://github.com/Azure/terraform-azurerm-lz-vending/blob/HEAD/.github/workflows/go-test-unit.yml,PR Target,medium,"This workflow uses the `pull_request_target` trigger and checks out the PR's code using `actions/checkout@v4`. It then runs `make test` with various environment variables, including secrets. While it doesn't directly execute arbitrary code, a malicious PR could potentially modify the test scripts to include malicious code or exfiltrate data.",,,matt.white@microsoft.com,,,,,,,,,
Azure,https://github.com/Azure/alzlib/blob/HEAD/.github/workflows/go-test.yml,PR Target,medium,"This workflow uses the `pull_request_target` trigger and checks out the PR's code using `actions/checkout`. While it sets `persist-credentials` to false, potentially malicious code from the PR could still be executed in the workflow runner environment. The severity is medium because it's unclear what `make test`, `make testrace`, and `make testcover` do. If these commands execute code from the checked-out PR, the severity could be higher.",,,,,,,,,,,,
Kong,https://github.com/Kong/kubernetes-ingress-controller/blob/HEAD/.github/workflows/validate_kong_image_trigger_via_label.yaml,Untrusted Input,high,"The workflow extracts the container image repo and tag from `github.event.issue.body` and uses them in a `gh workflow run` command. A malicious actor could craft an issue body that injects arbitrary values for the repo and tag, potentially leading to the execution of untrusted container images.",github.event.issue.body,tao.yi@konghq.com,tao.yi@konghq.com,,,,,,,,,
espressif,https://github.com/espressif/esptool/blob/HEAD/.github/workflows/dangerjs.yml,PR Target,high,"This workflow uses `pull_request_target`, checks out the PR's code using `actions/checkout@v4`, and then executes code from the PR using `espressif/shared-github-dangerjs@v1`. This action is likely running code from the PR, making it highly exploitable.",,tomas.sebestik@espressif.com,radim.karnis@espressif.com,tomas.sebestik@espressif.com,,,,,,,,
toptal,https://github.com/toptal/OpenMetadata/blob/HEAD/.github/workflows/java-checkstyle.yml,PR Target,medium,"This workflow uses the `pull_request_target` trigger, checks out the PR's code, and executes `mvn spotless:apply`. While this command might format the code, it's unclear if it executes arbitrary code from the PR. The severity is medium because it depends on the behavior of `mvn spotless:apply`.",,,peremiquelbrull@gmail.com,anuj.j@deuexsolutions.com,teddy.crepineau@gmail.com,nahuel@getcollate.io,,,,,,
espressif,https://github.com/espressif/esp-idf/blob/HEAD/.github/workflows/dangerjs.yml,PR Target,high,"This workflow uses `pull_request_target`, checks out the PR's code using `actions/checkout@v4`, and then executes code from the PR using `espressif/shared-github-dangerjs@v1`. This action is likely running code from the PR, making it highly exploitable.",,tomas.sebestik@espressif.com,tomas.sebestik@espressif.com,,,,,,,,,
espressif,https://github.com/espressif/idf-python-wheels/blob/HEAD/.github/workflows/danger.yml,PR Target,high,"This workflow uses `pull_request_target`, checks out the PR's code using `actions/checkout@v4`, and then executes code from the PR using `espressif/shared-github-dangerjs@v1`. This action is likely running code from the PR, making it highly exploitable.",,tomas.sebestik@espressif.com,tomas.sebestik@espressif.com,,,,,,,,,
espressif,https://github.com/espressif/idf-component-manager/blob/HEAD/.github/workflows/dangerjs_pr_checks.yml,PR Target,high,"This workflow uses `pull_request_target`, checks out the PR's code using `actions/checkout@v3`, and then executes code from the PR using `espressif/github-actions/danger_pr_review@master`. This action is likely running code from the PR, making it highly exploitable.",,tomas.sebestik@espressif.com,tomas.sebestik@espressif.com,sergei.silnov@espressif.com,,,,,,,,
espressif,https://github.com/espressif/conventional-precommit-linter/blob/HEAD/.github/workflows/dangerjs.yml,PR Target,high,"This workflow uses `pull_request_target`, checks out the PR's code using `actions/checkout@v4`, and then executes code from the PR using `espressif/shared-github-dangerjs@v1`. This action is likely running code from the PR, making it highly exploitable.",,tomas.sebestik@espressif.com,tomas.sebestik@espressif.com,,,,,,,,,
espressif,https://github.com/espressif/sync-jira-actions/blob/HEAD/.github/workflows/dangerjs.yml,PR Target,high,"This workflow uses `pull_request_target`, checks out the PR's code using `actions/checkout@v4`, and then executes code from the PR using `espressif/shared-github-dangerjs@v1`. This action is likely running code from the PR, making it highly exploitable.",,tomas.sebestik@espressif.com,tomas.sebestik@espressif.com,,,,,,,,,
toptal,https://github.com/toptal/OpenMetadata/blob/HEAD/.github/workflows/py-checkstyle.yml,PR Target,medium,"This workflow uses the `pull_request_target` trigger, checks out the PR's code, and executes `make generate` and `make py_format_check`. While these commands might format and check the code, it's unclear if they execute arbitrary code from the PR. The severity is medium because it depends on the behavior of these commands.",,,peremiquelbrull@gmail.com,nahuel@getcollate.io,ayush@getcollate.io,p.brull@stuart.com,,,,,,
espressif,https://github.com/espressif/sync-pr-to-gitlab/blob/HEAD/.github/workflows/dangerjs.yml,PR Target,high,"This workflow uses `pull_request_target`, checks out the PR's code using `actions/checkout@v4`, and then executes code from the PR using `espressif/shared-github-dangerjs@v1`. This action is likely running code from the PR, making it highly exploitable.",,tomas.sebestik@espressif.com,tomas.sebestik@espressif.com,,,,,,,,,
broadinstitute,https://github.com/broadinstitute/cromwell/blob/HEAD/.github/workflows/scalafmt-fix.yml,Untrusted Input,high,The workflow uses github.event.comment.body in a conditional statement that determines whether to run a ScalaFmt fixup. An attacker could potentially trigger the fixup by leaving a comment containing the word 'scalafmt' and inject arbitrary commands into the subsequent 'sbt scalafmtAll' command.,github.event.comment.body,twiseman@broadinstitute.org,twiseman@broadinstitute.org,,,,,,,,,
vaadin,https://github.com/vaadin/flow/blob/HEAD/.github/workflows/validation.yml,PR Target,medium,"This workflow uses the `pull_request_target` trigger and checks out the PR's code. However, it's unclear if any of the subsequent steps execute code from the checked-out PR. The severity is medium because it depends on the behavior of the `mvn` commands and the `./scripts/computeMatrix.js` script.",,,manolo@vaadin.com,marco@vaadin.com,artur@vaadin.com,taefi.soroosh@gmail.com,joheriks@vaadin.com,,,,,
vaadin,https://github.com/vaadin/cookbook/blob/HEAD/.github/workflows/validation.yml,PR Target,medium,"This workflow uses the `pull_request_target` trigger, checks out the PR's code, and executes `mvn -ntp -B -e -V clean install -Pproduction`. While this command likely builds the project, it's unclear if it executes arbitrary code from the PR. The severity is medium because it depends on the behavior of the `mvn` command.",,,manolo@vaadin.com,artur@vaadin.com,,,,,,,,
vaadin,https://github.com/vaadin/hilla/blob/HEAD/.github/workflows/validation.yml,PR Target,medium,"This workflow uses the `pull_request_target` trigger and checks out the PR's code. However, it's unclear if any of the subsequent steps execute code from the checked-out PR. The severity is medium because it depends on the behavior of the `npm`, `mvn`, and `perl` commands.",,,platosha@gmail.com,taefi.soroosh@gmail.com,vladrin@vaadin.com,sissbruecker@vaadin.com,artur@vaadin.com,manolo@vaadin.com,anton@vaadin.com,,,
vaadin,https://github.com/vaadin/bundles/blob/HEAD/.github/workflows/validation.yml,PR Target,low,"This workflow uses the `pull_request_target` trigger and checks out the PR's code. However, the only subsequent steps are `npm ci` and `npm test`, which are unlikely to execute arbitrary code from the PR. The severity is low because the potential impact is limited.",,,platosha@gmail.com,,,,,,,,,
broadinstitute,https://github.com/broadinstitute/taigapy/blob/HEAD/.github/workflows/check_pr_title.yml,Untrusted Input,high,The workflow uses github.event.pull_request.title directly in a shell command that runs the 'cz check' command. An attacker could craft a malicious pull request title to inject arbitrary commands into the shell.,github.event.pull_request.title,twiseman@broadinstitute.org,,,,,,,,,,
Shopify,https://github.com/Shopify/airbyte/blob/HEAD/.github/workflows/commands-for-testing-tool.yml,Untrusted Input,high,"The workflow is vulnerable to command injection due to the usage of unsanitized user input from `github.event.comment.body` in a `docker run` command. A malicious actor could craft a comment that injects arbitrary commands into the container execution, potentially gaining control of the runner and accessing sensitive information like secrets.",github.event.comment.body,v.pochtar@gmail.com,v.pochtar@gmail.com,,,,,,,,,
DataDog,https://github.com/DataDog/kata-containers/blob/HEAD/.github/workflows/add-pr-sizing-label.yaml,PR Target,low,"This workflow uses the `pull_request_target` trigger and checks out the PR's code. However, the subsequent steps involve rebasing the PR and adding a label, which are unlikely to execute arbitrary code. The severity is low because the potential impact is limited.",,,fabiano.fidencio@intel.com,zkaiser@nvidia.com,james.o.hunt@intel.com,,,,,,,
DataDog,https://github.com/DataDog/kata-containers/blob/HEAD/.github/workflows/move-issues-to-in-progress.yaml,PR Target,low,"This workflow uses the `pull_request_target` trigger and checks out the PR's code. However, the subsequent steps involve rebasing the PR and moving linked issues, which are unlikely to execute arbitrary code. The severity is low because the potential impact is limited.",,,zkaiser@nvidia.com,fabiano.fidencio@intel.com,bin@hyper.sh,zhongtaohu.tim@linux.alibaba.com,james.o.hunt@intel.com,,,,,
DataDog,https://github.com/DataDog/community-operators/blob/HEAD/.github/workflows/operator_test.yaml,PR Target,medium,"This workflow uses the `pull_request_target` trigger and checks out the PR's code. It then executes various commands, including `ansible-pull` and `bash <(curl -sL $OPP_SCRIPT_URL)`. While these commands might install and test the operator, it's unclear if they execute arbitrary code from the PR. The severity is medium because it depends on the behavior of these commands and the scripts they download.",,,mavala@redhat.com,jbreza@redhat.com,,,,,,,,
4GeeksAcademy,https://github.com/4GeeksAcademy/4geeks-website-v2-aleperix/blob/HEAD/.github/workflows/cypress.yml,PR Target,medium,"This workflow uses the `pull_request_target` trigger, checks out the PR's code, and executes `npm install`, `npm run build`, and `npm run serve`. While these commands might build and serve the website, it's unclear if they execute arbitrary code from the PR. The severity is medium because it depends on the behavior of these commands.",,,gustavomm199@gmail.com,gustavomm19@hotmail.com,calisayaariel62@gmail.com,aalejo@gmail.com,,,,,,
4GeeksAcademy,https://github.com/4GeeksAcademy/accept-a-paymen-pruebat/blob/HEAD/.github/workflows/ci.yml,PR Target,medium,"This workflow uses the `pull_request_target` trigger and checks out the PR's code. It then executes various commands, including `source sample-ci/helpers.sh`, `docker-compose up -d`, and `bundle exec rspec`. While these commands might set up the environment and run tests, it's unclear if they execute arbitrary code from the PR. The severity is medium because it depends on the behavior of these commands and the scripts they source.",,,hibariya@gmail.com,cjavilla@stripe.com,,,,,,,,
4GeeksAcademy,https://github.com/4GeeksAcademy/accept-a-payment/blob/HEAD/.github/workflows/ci.yml,PR Target,medium,"This workflow uses the `pull_request_target` trigger and checks out the PR's code. It then executes various commands, including `source sample-ci/helpers.sh`, `docker-compose up -d`, and `bundle exec rspec`. While these commands might set up the environment and run tests, it's unclear if they execute arbitrary code from the PR. The severity is medium because it depends on the behavior of these commands and the scripts they source.",,,hibariya@gmail.com,cjavilla@stripe.com,,,,,,,,
bitwarden,https://github.com/bitwarden/server/blob/HEAD/.github/workflows/scan.yml,PR Target,low,"This workflow uses the `pull_request_target` trigger and checks out the PR's code. However, the subsequent steps involve running static analysis tools (Checkmarx and SonarCloud), which are unlikely to execute arbitrary code from the PR. The severity is low because the potential impact is limited.",,,mbishop@bitwarden.com,,,,,,,,,
bitwarden,https://github.com/bitwarden/clients/blob/HEAD/.github/workflows/scan.yml,PR Target,medium,"This workflow uses the `pull_request_target` trigger and checks out the PR's code using `actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11`. While it doesn't seem to execute code from the PR directly, the use of `pull_request_target` with an untrusted checkout is generally discouraged and could potentially allow access to the repository token. The severity is marked as medium because it's unclear whether the checked-out code is used in a way that could lead to remote code execution.",,,mbishop@bitwarden.com,,,,,,,,,
bitwarden,https://github.com/bitwarden/template/blob/HEAD/.github/workflows/scan.yml,PR Target,medium,"Similar to the previous workflow, this one also uses `pull_request_target` and checks out the PR's code using `actions/checkout@44c2b7a8a4ea60a981eaca3cf939b5f4305c123b`. It's unclear whether the checked-out code is used in a way that could lead to RCE, so the severity is marked as medium.",,,mbishop@bitwarden.com,,,,,,,,,
bitwarden,https://github.com/bitwarden/sdk/blob/HEAD/.github/workflows/scan.yml,PR Target,medium,"This workflow follows the same pattern as the previous two, using `pull_request_target` and checking out the PR's code with `actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b`. The severity is medium due to the lack of clarity on how the checked-out code is used.",,,mbishop@bitwarden.com,,,,,,,,,
bitwarden,https://github.com/bitwarden/passwordless-java/blob/HEAD/.github/workflows/scan.yml,PR Target,medium,This workflow uses `pull_request_target` and checks out the PR's code using `actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29`. The severity is medium because it's unclear whether the checked-out code is used in a way that could lead to remote code execution.,,,,,,,,,,,,
bitwarden,https://github.com/bitwarden/authenticator-ios/blob/HEAD/.github/workflows/scan.yml,PR Target,medium,This workflow uses `pull_request_target` and checks out the PR's code using `actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b`. The severity is medium because it's unclear whether the checked-out code is used in a way that could lead to remote code execution.,,,mbishop@bitwarden.com,kbertelsen@bitwarden.com,,,,,,,,
bitwarden,https://github.com/bitwarden/authenticator-android/blob/HEAD/.github/workflows/scan.yml,PR Target,medium,This workflow uses `pull_request_target` and checks out the PR's code using `actions/checkout@44c2b7a8a4ea60a981eaca3cf939b5f4305c123b`. The severity is medium because it's unclear whether the checked-out code is used in a way that could lead to remote code execution.,,,mbishop@bitwarden.com,matt@withinfocus.com,,,,,,,,
obsproject,https://github.com/obsproject/obs-crowdin-sync/blob/HEAD/.github/workflows/build.yml,Untrusted Input,high,"The workflow uses github.event.head_commit.message in a 'git commit' command. A malicious actor could craft a commit message that includes shell commands, leading to arbitrary code execution on the runner.",github.event.head_commit.message,vainock@pm.me,vainock@pm.me,,,,,,,,,
splunk,https://github.com/splunk/kafka-connect-splunk/blob/HEAD/.github/workflows/ci_build_test.yaml,PR Target,high,"This workflow uses the `pull_request_target` trigger and checks out the pull request's code using `actions/checkout@v3`. It then executes various commands like `curl`, `fossa analyze`, `fossa test`, `mvn`, `pip install`, `python`, `sed`, and `sudo`, which could potentially run malicious code introduced in the PR. The severity is high because it directly executes code from the PR and uses powerful commands like `sudo`.",,vhiteshbhai@splunk.com,vhiteshbhai@splunk.com,pszkamruk@splunk.com,ftrivedi@splunk.com,ankitm@splunk.com,meiw@splunk.com,,,,,
ARM-software,https://github.com/ARM-software/ebbr/blob/HEAD/.github/workflows/main.yaml,Untrusted Input,high,"The workflow uses github.event.pull_request.title in a shell script without proper sanitization, potentially allowing for code injection.",github.event.pull_request.title,vincent.stehle@arm.com,vincent.stehle@arm.com,grant.likely@arm.com,,,,,,,,
mercari,https://github.com/mercari/datastore/blob/HEAD/.github/workflows/cicd.yml,PR Target,high,This workflow uses the `pull_request_target` trigger and checks out the pull request's code. It then executes `./setup.sh` and `./test.sh` which are potentially controlled by the attacker. This allows for arbitrary code execution in the context of the workflow.,,vvakame+dev@gmail.com,vvakame+dev@gmail.com,,,,,,,,,
espressif,https://github.com/espressif/llvm-project/blob/HEAD/.github/workflows/pr-code-format.yml,PR Target,medium,"This workflow uses `pull_request_target` and checks out the PR's code twice using `actions/checkout@v4`. However, it explicitly mentions avoiding execution of code from the PR for security reasons. While it fetches code formatting tools and runs a Python script, it seems to be using the fetched tools and not directly executing code from the PR. Therefore, the severity is marked as medium due to the potential risks associated with `pull_request_target` and untrusted checkout, even though direct code execution from the PR is not evident.",,,agrossman154@yahoo.com,tstellar@redhat.com,chris.bieneman@me.com,tobias@hieta.se,,,,,,
Kong,https://github.com/Kong/kong/blob/HEAD/.github/workflows/perf.yml,Untrusted Input,high,"The workflow uses `github.event.comment.body` to determine test suites and tags, which are then used in a `bin/busted` command. This could allow a malicious actor to inject arbitrary commands via a crafted comment, potentially gaining control of the runner.",github.event.comment.body,wangchong@konghq.com,hans.huebner@gmail.com,wangchong@konghq.com,isa@konghq.com,flrgh@protonmail.com,yi.sun@konghq.com,add_sp@outlook.com,aapo.talvensaari@gmail.com,i@shoujo.io,,
Kong,https://github.com/Kong/colin-kong/blob/HEAD/.github/workflows/perf.yml,Untrusted Input,high,"Similar to Workflow 18, this workflow uses `github.event.comment.body` to determine test suites and tags, which are then used in a `bin/busted` command. This could allow a malicious actor to inject arbitrary commands via a crafted comment, potentially gaining control of the runner.",github.event.comment.body,wangchong@konghq.com,i@shoujo.io,fffonion@gmail.com,datong.sun@konghq.com,wangchong@konghq.com,,,,,,
aliyun,https://github.com/aliyun/ros-templates/blob/HEAD/.github/workflows/iact3-test.yml,Untrusted Input,high,"The workflow uses github.event.pull_request.user.login, github.event.pull_request.number, and github.event.pull_request.title in curl commands that send notifications to DingTalk. A malicious actor could craft a pull request with a specially crafted user login, number, or title containing shell metacharacters to inject arbitrary commands into the curl commands.","github.event.pull_request.user.login, github.event.pull_request.number, and github.event.pull_request.title",xiaocheng.xc@alibaba-inc.com,xiaocheng.xc@alibaba-inc.com,shiruixin.srx@alibaba-inc.com,,,,,,,,
Tencent,https://github.com/Tencent/tdesign-mobile-react/blob/HEAD/.github/workflows/auto-release.yml,Untrusted Input,high,The workflow uses github.event.comment.body to update the CHANGELOG.md file. A malicious actor could craft a comment containing shell metacharacters that would be interpreted as commands when the changelog is updated.,github.event.comment.body,xiaosansiji@gmail.com,xiaosansiji@gmail.com,leejimqiu@gmail.com,,,,,,,,
alibaba,https://github.com/alibaba/GraphScope/blob/HEAD/.github/workflows/pr-check.yml,Untrusted Input,high,The workflow uses github.event.pull_request.title in a shell script that checks for documentation changes. An attacker could craft a malicious pull request title to inject arbitrary commands into the shell script.,github.event.pull_request.title,xujingbo.xjb@alibaba-inc.com,xujingbo.xjb@alibaba-inc.com,xiaolei.zl@alibaba-inc.com,linzhu.ht@alibaba-inc.com,,,,,,,
jenkinsci,https://github.com/jenkinsci/artifactory-plugin/blob/HEAD/.github/workflows/tests.yml,PR Target,high,"This workflow uses the `pull_request_target` trigger and checks out the pull request's code using `actions/checkout`. It then executes the code using `mvn -V -B -U --no-transfer-progress clean verify -DskipITs=false ""-Dfindbugs.failOnError=false""`. This allows a malicious pull request to execute arbitrary code on the runner with access to repository secrets.",,yahavi@jfrog.com,sverdlov93@gmail.com,yahavi@jfrog.com,mark.earl.waite@gmail.com,robin@jfrog.com,ortil1@gmail.com,,,,,
juspay,https://github.com/juspay/hyper-sdk-react/blob/HEAD/.github/workflows/release.yml,Untrusted Input,high,The workflow uses github.event.pull_request.title in a shell script that determines the release type. An attacker could craft a malicious pull request title to inject arbitrary commands into the shell script.,github.event.pull_request.title,yaswanth6240@gmail.com,yaswanth6240@gmail.com,,,,,,,,,
juspay,https://github.com/juspay/hyper-sdk-cordova/blob/HEAD/.github/workflows/release.yml,Untrusted Input,high,The workflow uses github.event.pull_request.title in a shell script that determines the release type. An attacker could craft a malicious pull request title to inject arbitrary commands into the shell script.,github.event.pull_request.title,yaswanth6240@gmail.com,yaswanth6240@gmail.com,,,,,,,,,
juspay,https://github.com/juspay/hyper-sdk-capacitor/blob/HEAD/.github/workflows/release.yml,Untrusted Input,high,The workflow uses github.event.pull_request.title in a shell script that determines the release type. An attacker could craft a malicious pull request title to inject arbitrary commands into the shell script.,github.event.pull_request.title,yaswanth6240@gmail.com,yaswanth6240@gmail.com,,,,,,,,,
microsoft,https://github.com/microsoft/promptflow/blob/HEAD/.github/workflows/promptflow-executor-e2e-test.yml,PR Target,high,"This workflow uses the `pull_request_target` trigger and checks out the PR's code. It then runs various Python scripts, including `scripts/building/run_coverage_tests.py`. These scripts could potentially execute malicious code from the PR. The workflow has access to several secrets, including `AZURE_SUBSCRIPTION_ID`, `AZURE_TENANT_ID`, and `AZURE_CLIENT_ID`, which could be exfiltrated by malicious code.",,yigao@microsoft.com,yigao@microsoft.com,linatanglily@gmail.com,350053002@qq.com,,,,,,,
Unity-Technologies,https://github.com/Unity-Technologies/create-data-open-metadata/blob/HEAD/.github/workflows/airflow-apis-tests-3_9.yml,PR Target,medium,"This workflow uses `pull_request_target` and checks out the PR's code using `actions/checkout@v3`. It then proceeds to install dependencies, generate models, and run tests. While it executes code, it's unclear whether it directly executes code from the PR or just uses the checked-out code for building and testing the project itself. Therefore, the severity is marked as medium due to the potential risks associated with `pull_request_target` and untrusted checkout, even though direct code execution from the PR is not evident.",,,peremiquelbrull@gmail.com,nahuel@getcollate.io,onkar.10r@gmail.com,ayush@getcollate.io,,,,,,
Unity-Technologies,https://github.com/Unity-Technologies/create-data-open-metadata/blob/HEAD/.github/workflows/cypress-integration-tests-mysql.yml,PR Target,medium,"This workflow uses `pull_request_target` and checks out the PR's code using `actions/checkout@v3`. It then installs dependencies, generates data models, starts a server, and runs Cypress tests. While it executes code, it's unclear whether it directly executes code from the PR or just uses the checked-out code for building and testing the project itself. Therefore, the severity is marked as medium due to the potential risks associated with `pull_request_target` and untrusted checkout, even though direct code execution from the PR is not evident.",,,shailesh.parmar.webdev@gmail.com,peremiquelbrull@gmail.com,anuj.j@deuexsolutions.com,onkar.10r@gmail.com,smarty_anuj359@yahoo.com,ayush@getcollate.io,,,,
Unity-Technologies,https://github.com/Unity-Technologies/create-data-open-metadata/blob/HEAD/.github/workflows/cypress-integration-tests-postgresql.yml,PR Target,medium,"This workflow uses `pull_request_target` and checks out the PR's code using `actions/checkout@v3`. It then installs dependencies, generates data models, starts a server, and runs Cypress tests. While it executes code, it's unclear whether it directly executes code from the PR or just uses the checked-out code for building and testing the project itself. Therefore, the severity is marked as medium due to the potential risks associated with `pull_request_target` and untrusted checkout, even though direct code execution from the PR is not evident.",,,shailesh.parmar.webdev@gmail.com,peremiquelbrull@gmail.com,anuj.j@deuexsolutions.com,onkar.10r@gmail.com,smarty_anuj359@yahoo.com,ayush@getcollate.io,,,,
Unity-Technologies,https://github.com/Unity-Technologies/create-data-open-metadata/blob/HEAD/.github/workflows/java-checkstyle.yml,PR Target,medium,"This workflow uses `pull_request_target` and checks out the PR's code using `actions/checkout@v3`. It then sets up Java, runs checkstyle, and performs git operations. While it executes code, it's unclear whether it directly executes code from the PR or just uses the checked-out code for building and testing the project itself. Therefore, the severity is marked as medium due to the potential risks associated with `pull_request_target` and untrusted checkout, even though direct code execution from the PR is not evident.",,,teddy.crepineau@gmail.com,nahuel@getcollate.io,peremiquelbrull@gmail.com,p.brull@stuart.com,,,,,,
microsoft,https://github.com/microsoft/promptflow/blob/HEAD/.github/workflows/promptflow-executor-unit-test.yml,PR Target,high,"This workflow uses the `pull_request_target` trigger and checks out the PR's code. It then runs various Python scripts, including `scripts/building/run_coverage_tests.py`. These scripts could potentially execute malicious code from the PR. The workflow has access to several secrets, including `AZURE_SUBSCRIPTION_ID`, `AZURE_TENANT_ID`, and `AZURE_CLIENT_ID`, which could be exfiltrated by malicious code.",,yigao@microsoft.com,yigao@microsoft.com,linatanglily@gmail.com,tangheyi.09@gmail.com,,,,,,,
microsoft,https://github.com/microsoft/promptflow/blob/HEAD/.github/workflows/promptflow-global-config-test.yml,PR Target,high,"This workflow uses the `pull_request_target` trigger and checks out the PR's code. It then runs various commands, including `poetry install`, `poetry run pip install`, and `poetry run pytest`. These commands could potentially execute malicious code from the PR. The workflow has access to several secrets, including `AZURE_SUBSCRIPTION_ID`, `AZURE_TENANT_ID`, and `AZURE_CLIENT_ID`, which could be exfiltrated by malicious code.",,yigao@microsoft.com,yigao@microsoft.com,linatanglily@gmail.com,,,,,,,,
aquasecurity,https://github.com/aquasecurity/aqua-operator/blob/HEAD/.github/workflows/test.yml,PR Target,high,This workflow uses the `pull_request_target` trigger and checks out the pull request's code using `actions/checkout`. It then executes the code using `make test`. This allows a malicious pull request to execute arbitrary code on the runner with access to repository secrets.,,yossi.gilad@aquasec.com,yossi.gilad@aquasec.com,,,,,,,,,
aquasecurity,https://github.com/aquasecurity/terraform-provider-aquasec/blob/HEAD/.github/workflows/test.yml,PR Target,high,This workflow uses the `pull_request_target` trigger and checks out the pull request's code using `actions/checkout`. It then executes the code using `go build -v .` and `go test -v -cover ./aquasec/ -timeout 15m`. This allows a malicious pull request to execute arbitrary code on the runner with access to repository secrets.,,yossi.gilad@aquasec.com,baruch.bilanski@aquasec.com,yossi.gilad@aquasec.com,fahimabrar02@gmail.com,bkmorrow@gmail.com,jerbia@gmail.com,prashanthsoordelu@gmail.com,,,,
weaveworks,https://github.com/weaveworks/cluster-bootstrap-controller/blob/HEAD/.github/workflows/ci.yaml,PR Target,medium,"This workflow uses the `pull_request_target` trigger and checks out the PR's code in the `build` and `build-push-helm-chart` jobs. However, it only uses the checked-out code for building and pushing a Docker image and a Helm chart. While it's possible for a malicious PR to modify the build process, it's less likely to lead to arbitrary code execution compared to workflows that directly execute code from the PR.",,,kevin@weave.works,simon@weave.works,,,,,,,,
weaveworks,https://github.com/weaveworks/cluster-controller/blob/HEAD/.github/workflows/ci.yaml,PR Target,medium,"This workflow uses the `pull_request_target` trigger and checks out the PR's code in the `build` job. However, it only uses the checked-out code for building and pushing a Docker image. While it's possible for a malicious PR to modify the build process, it's less likely to lead to arbitrary code execution compared to workflows that directly execute code from the PR.",,,yiannis@weave.works,footless@gmail.com,,,,,,,,
weaveworks,https://github.com/weaveworks/gitopssets-controller/blob/HEAD/.github/workflows/ci.yaml,PR Target,medium,"This workflow uses the `pull_request_target` trigger and checks out the PR's code in the `build` and `build-push-helm-chart` jobs. However, it only uses the checked-out code for building and pushing a Docker image and a Helm chart. While it's possible for a malicious PR to modify the build process, it's less likely to lead to arbitrary code execution compared to workflows that directly execute code from the PR.",,,kevin@weave.works,yiannis@weave.works,footless@gmail.com,sara@weave.works,simon@weave.works,,,,,
weaveworks,https://github.com/weaveworks/flux-shard-controller/blob/HEAD/.github/workflows/ci.yaml,PR Target,medium,"This workflow uses the `pull_request_target` trigger and checks out the PR's code in the `build` and `build-push-helm-chart` jobs. However, it only uses the checked-out code for building and pushing a Docker image and a Helm chart. While it's possible for a malicious PR to modify the build process, it's less likely to lead to arbitrary code execution compared to workflows that directly execute code from the PR.",,,footless@gmail.com,simon@weave.works,,,,,,,,
weaveworks,https://github.com/weaveworks/weave-assured-flux2/blob/HEAD/.github/workflows/backport.yaml,PR Target,low,"This workflow uses the `pull_request_target` trigger and checks out the PR's code. However, it only uses the checked-out code for creating backport PRs using the `korthout/backport-action`. This action doesn't seem to execute arbitrary code from the PR, so the risk of exploitation is low.",,,stefan.prodan@gmail.com,,,,,,,,,
weaveworks,https://github.com/weaveworks/weave-assured-source-controller/blob/HEAD/.github/workflows/backport.yaml,PR Target,low,"This workflow uses the `pull_request_target` trigger and checks out the PR's code. However, it only uses the checked-out code for creating backport PRs using the `korthout/backport-action`. This action doesn't seem to execute arbitrary code from the PR, so the risk of exploitation is low.",,,aurelcanciu@gmail.com,hidde@hhh.computer,,,,,,,,
weaveworks,https://github.com/weaveworks/weave-assured-image-automation-controller/blob/HEAD/.github/workflows/backport.yaml,PR Target,low,"This workflow uses the `pull_request_target` trigger and checks out the PR's code. However, it only uses the checked-out code for creating backport PRs using the `korthout/backport-action`. This action doesn't seem to execute arbitrary code from the PR, so the risk of exploitation is low.",,,aurelcanciu@gmail.com,stefan.prodan@gmail.com,hidde@hhh.computer,,,,,,,
weaveworks,https://github.com/weaveworks/weave-assured-image-reflector-controller/blob/HEAD/.github/workflows/backport.yaml,PR Target,low,"This workflow uses the `pull_request_target` trigger and checks out the PR's code. However, it only uses the checked-out code for creating backport PRs using the `korthout/backport-action`. This action doesn't seem to execute arbitrary code from the PR, so the risk of exploitation is low.",,,aurelcanciu@gmail.com,stefan.prodan@gmail.com,hidde@hhh.computer,,,,,,,
weaveworks,https://github.com/weaveworks/weave-assured-helm-controller/blob/HEAD/.github/workflows/backport.yaml,PR Target,low,"This workflow uses the `pull_request_target` trigger and checks out the PR's code. However, it only uses the checked-out code for creating backport PRs using the `korthout/backport-action`. This action doesn't seem to execute arbitrary code from the PR, so the risk of exploitation is low.",,,aurelcanciu@gmail.com,hidde@hhh.computer,,,,,,,,
weaveworks,https://github.com/weaveworks/weave-assured-notification-controller/blob/HEAD/.github/workflows/backport.yaml,PR Target,low,"This workflow uses the `pull_request_target` trigger and checks out the PR's code. However, it only uses the checked-out code for creating backport PRs using the `korthout/backport-action`. This action doesn't seem to execute arbitrary code from the PR, so the risk of exploitation is low.",,,aurelcanciu@gmail.com,stefan.prodan@gmail.com,,,,,,,,
weaveworks,https://github.com/weaveworks/weave-assured-kustomize-controller/blob/HEAD/.github/workflows/backport.yaml,PR Target,low,"This workflow uses the `pull_request_target` trigger and checks out the PR's code. However, it only uses the checked-out code for creating backport PRs using the `korthout/backport-action`. This action doesn't seem to execute arbitrary code from the PR, so the risk of exploitation is low.",,,hidde@hhh.computer,stefan.prodan@gmail.com,,,,,,,,
microsoft,https://github.com/microsoft/kata-containers/blob/HEAD/.github/workflows/add-pr-sizing-label.yaml,PR Target,medium,"This workflow uses the `pull_request_target` trigger and checks out the PR's code. It then runs a script called `./tests/git-helper.sh` and another script called `pr-add-size-label.sh`. While the exact functionality of these scripts is unclear, they could potentially execute code from the PR. The workflow has access to the `KATA_GITHUB_ACTIONS_PR_SIZE_TOKEN` secret, which could be exfiltrated by malicious code.",,,fabiano.fidencio@intel.com,zkaiser@nvidia.com,james.o.hunt@intel.com,,,,,,,
microsoft,https://github.com/microsoft/kata-containers/blob/HEAD/.github/workflows/move-issues-to-in-progress.yaml,PR Target,medium,"This workflow uses the `pull_request_target` trigger and checks out the PR's code. It then runs a script called `./tests/git-helper.sh` and another script called `hub-util.sh`. While the exact functionality of these scripts is unclear, they could potentially execute code from the PR. The workflow has access to the `KATA_GITHUB_ACTIONS_TOKEN` secret, which could be exfiltrated by malicious code.",,,zkaiser@nvidia.com,fabiano.fidencio@intel.com,bin@hyper.sh,zhongtaohu.tim@linux.alibaba.com,james.o.hunt@intel.com,,,,,
microsoft,https://github.com/microsoft/kata-containers/blob/HEAD/.github/workflows/require-pr-porting-labels.yaml,PR Target,medium,"This workflow uses the `pull_request_target` trigger and checks out the PR's code. It then runs a script called `./tests/git-helper.sh` and another script called `pr-porting-checks.sh`. While the exact functionality of these scripts is unclear, they could potentially execute code from the PR. The workflow has access to the `KATA_GITHUB_ACTIONS_TOKEN` secret, which could be exfiltrated by malicious code.",,,fabiano.fidencio@intel.com,bin@hyper.sh,gabriela.cervantes.tellez@intel.com,james.o.hunt@intel.com,,,,,,
microsoft,https://github.com/microsoft/generative-ai-for-beginners/blob/HEAD/.github/workflows/validate-markdown.yml,PR Target,low,"This workflow uses the `pull_request_target` trigger and checks out the PR's code. However, it only uses the checked-out code for validating Markdown files using the `john0isaac/action-check-markdown` action. This action doesn't seem to execute arbitrary code from the PR, so the risk of exploitation is low.",,,johnaziz269@gmail.com,leestott@microsoft.com,,,,,,,,
IBM,https://github.com/IBM/ibm-common-service-operator/blob/HEAD/.github/workflows/ocp.yaml,PR Target,high,"This workflow uses the `pull_request_target` trigger and checks out the PR's code using `actions/checkout@v2`. It then executes various `make` commands, including `make build-dev-image`, `make clis`, `make bundle-manifests`, `make build-bundle-image`, `make run-bundle`, and `make cleanup-bundle`. This allows a malicious PR to execute arbitrary code on the runner with access to the Kubernetes cluster and several secrets, including `AWS_OCP_KUBECONFIG`, `QUAY_USERNAME`, `QUAY_PASSWORD`, `SCRATCH_USERNAME`, and `SCRATCH_TOKEN`.",,yuchen.fan@ibm.com,yuchen.fan@ibm.com,zbhenryli@gmail.com,,,,,,,,
dotnet,https://github.com/dotnet/docfx/blob/HEAD/.github/workflows/ci.yml,PR Target,high,"This workflow uses the `pull_request_target` trigger and checks out the pull request's code using `actions/checkout@v4`. It then executes various commands like `npm run lint`, `npm test`, `dotnet test`, and `dotnet run`, which could potentially run malicious code introduced in the PR. The severity is high because it directly executes code from the PR.",,yufeih@live.com,yufeih@live.com,aiko@aitsys.dev,,,,,,,,
containerd,https://github.com/containerd/accelerated-container-image/blob/HEAD/.github/workflows/ci.yml,PR Target,high,This workflow uses the `pull_request_target` trigger and checks out the PR's code using `actions/checkout@v4`. It then executes the PR's code by running `sudo GO_TESTFLAGS=-v make test`. This allows a malicious PR to execute arbitrary code on the runner with root privileges.,,zhuangbowei.zbw@alibaba-inc.com,zhuangbowei.zbw@alibaba-inc.com,yuchen.cc@alibaba-inc.com,lanzheng.liulz@alibaba-inc.com,tuji.yyf@alibaba-inc.com,miaohaoqi.mhq@alibaba-inc.com,macedonv@amazon.com,zchee.io@gmail.com,zhouchuan.tt@alibaba-inc.com,fuweid89@gmail.com,
AliyunContainerService,https://github.com/AliyunContainerService/keda/blob/HEAD/.github/workflows/pr-e2e.yml,Untrusted Input,high,"The workflow uses github.event.comment.body to extract a regular expression for filtering tests. A malicious actor could craft a comment containing a malicious regular expression that, when used in the 'make e2e-test' command, could lead to arbitrary code execution.",github.event.comment.body,zroubalik@gmail.com,zroubalik@gmail.com,Jorge_turrado@hotmail.es,kerkhove.tom@gmail.com,jorge.turrado@docplanner.com,vshenoy@microsoft.com,ahmels@microsoft.com,,,,
GoogleCloudPlatform,https://github.com/GoogleCloudPlatform/nodejs-docs-samples/blob/HEAD/.github/workflows/ai-platform-snippets.yaml,PR Target,medium,"This workflow uses the `pull_request_target` trigger and checks out the PR's code. It then runs `make test` with the PR's code. While the exact functionality of `make test` is unclear, it could potentially execute code from the PR. The workflow has access to several secrets, including `caip_id` and `location`, which could be exfiltrated by malicious code.",,,katie@glasnt.com,kweinmeister@google.com,itseric@google.com,anassri@google.com,,,,,,
weaveworks,https://github.com/weaveworks/cluster-reflector-controller/blob/HEAD/.github/workflows/ci.yml,PR Target,medium,"This workflow uses the `pull_request_target` trigger and checks out the PR's code in the `build` and `build-push-helm-chart` jobs. However, it only uses the checked-out code for building and pushing a Docker image and a Helm chart. While it's possible for a malicious PR to modify the build process, it's less likely to lead to arbitrary code execution compared to workflows that directly execute code from the PR.",,,simon@weave.works,ahmed.magdy@weave.works,,,,,,,,
alteryx,https://github.com/alteryx/featuretools/blob/HEAD/.github/workflows/looking_glass_airflow_performance_tests.yaml,Untrusted Input,high,The workflow uses github.event.head_commit.author.name in a curl command that sends data to an Airflow server. A malicious actor could craft a commit with a specially crafted author name containing shell metacharacters to inject arbitrary commands into the curl command.,github.event.head_commit.author.name,,,,,,,,,,,
awslabs,https://github.com/awslabs/clickstream-android/blob/HEAD/.github/workflows/tag_and_release.yml,Untrusted Input,high,"The workflow uses github.event.head_commit.message to set an environment variable COMMIT_MESSAGE, which is later used in a shell script. An attacker could craft a malicious commit message to inject arbitrary commands into the shell script.",github.event.head_commit.message,,,,,,,,,,,
awslabs,https://github.com/awslabs/clickstream-swift/blob/HEAD/.github/workflows/tag_and_release.yml,Untrusted Input,high,"The workflow uses github.event.head_commit.message to set an environment variable COMMIT_MESSAGE, which is later used in a shell script. An attacker could craft a malicious commit message to inject arbitrary commands into the shell script.",github.event.head_commit.message,,,,,,,,,,,
boostorg,https://github.com/boostorg/nowide/blob/HEAD/.github/workflows/update_standalone.yml,Untrusted Input,high,"The workflow uses github.event.head_commit.message in a git commit command without proper sanitization, potentially allowing for code injection.",github.event.head_commit.message,,,,,,,,,,,
CiscoDevNet,https://github.com/CiscoDevNet/catalystwan/blob/HEAD/.github/workflows/version.yml,Untrusted Input,high,"The workflow uses github.event.head_commit.message to determine the version bump type and then passes it to the poetry version command without proper sanitization, potentially allowing for code injection.",github.event.head_commit.message,,,,,,,,,,,
ClickHouse,https://github.com/ClickHouse/ibis/blob/HEAD/.github/workflows/docs-preview.yml,PR Target,high,"This workflow uses the `pull_request_target` trigger and checks out the PR's code using `github.event.pull_request.head.sha`. It then builds documentation using Nix and deploys it to Netlify. This grants a malicious PR author the ability to execute arbitrary code within the workflow runner, potentially gaining access to sensitive secrets like `DOCS_BOT_APP_ID`, `DOCS_BOT_APP_PRIVATE_KEY`, `CACHIX_AUTH_TOKEN`, `NETLIFY_SITE_ID`, and `NETLIFY_AUTH_TOKEN`. Due to the potential access to sensitive Netlify and Cachix credentials, the severity is rated as high.",,,,,,,,,,,,
GoogleCloudPlatform,https://github.com/GoogleCloudPlatform/cloud-sql-proxy/blob/HEAD/.github/workflows/codeql.yml,PR Target,medium,"This workflow uses the `pull_request_target` trigger and checks out the PR's code using `actions/checkout@44c2b7a8a4ea60a981eaca3cf939b5f4305c123b` with `ref: ${{ github.event.pull_request.head.sha }}`. While it doesn't directly execute the code from the PR, the `github/codeql-action/autobuild@b7cec7526559c32f1616476ff32d17ba4c59b2d6` step might execute build scripts within the PR's code, potentially leading to arbitrary code execution.",,,enocom@google.com,jackwoth@google.com,,,,,,,,
GoogleCloudPlatform,https://github.com/GoogleCloudPlatform/cloud-sql-proxy/blob/HEAD/.github/workflows/govulncheck.yaml,PR Target,low,"This workflow uses the `pull_request_target` trigger and checks out the PR's code using `actions/checkout@44c2b7a8a4ea60a981eaca3cf939b5f4305c123b` with `ref: ${{ github.event.pull_request.head.sha }}`. However, the `golang/govulncheck-action@3a32958c2706f7048305d5a2e53633d7e37e97d0` step is configured with `repo-checkout: false`, which means it doesn't use the checked out code. Therefore, there is no direct execution of potentially malicious code from the PR.",,,jackwoth@google.com,enocom@google.com,,,,,,,,
GoogleCloudPlatform,https://github.com/GoogleCloudPlatform/cloud-sql-proxy/blob/HEAD/.github/workflows/lint.yaml,PR Target,low,"This workflow uses the `pull_request_target` trigger and checks out the PR's code using `actions/checkout@44c2b7a8a4ea60a981eaca3cf939b5f4305c123b` with `ref: ${{ github.event.pull_request.head.sha }}`. However, the workflow only performs linting using `golangci-lint` and doesn't execute any code from the PR. Therefore, there is no direct execution of potentially malicious code.",,,enocom@google.com,jackwoth@google.com,,,,,,,,
GoogleCloudPlatform,https://github.com/GoogleCloudPlatform/cloud-sql-proxy/blob/HEAD/.github/workflows/tests.yaml,PR Target,low,"This workflow uses the `pull_request_target` trigger and checks out the PR's code using `actions/checkout@44c2b7a8a4ea60a981eaca3cf939b5f4305c123b` with `ref: ${{ github.event.pull_request.head.sha }}`. While it runs tests using `go test`, it doesn't appear to execute any arbitrary code from the PR itself. The tests are run on the checked out code, but there's no indication of running scripts or binaries from the PR.",,,enocom@google.com,jackwoth@google.com,shubhadayini@google.com,,,,,,,
GoogleCloudPlatform,https://github.com/GoogleCloudPlatform/cloud-sql-jdbc-socket-factory/blob/HEAD/.github/workflows/codeql.yml,PR Target,medium,"This workflow uses the `pull_request_target` trigger and checks out the PR's code using `actions/checkout@44c2b7a8a4ea60a981eaca3cf939b5f4305c123b` with `ref: ${{ github.event.pull_request.head.sha }}`. While it doesn't directly execute the code from the PR, the `github/codeql-action/autobuild@b7cec7526559c32f1616476ff32d17ba4c59b2d6` step might execute build scripts within the PR's code, potentially leading to arbitrary code execution.",,,jackwoth@google.com,,,,,,,,,
GoogleCloudPlatform,https://github.com/GoogleCloudPlatform/cloud-sql-jdbc-socket-factory/blob/HEAD/.github/workflows/tests.yml,PR Target,low,"This workflow uses the `pull_request_target` trigger and checks out the PR's code using `actions/checkout@44c2b7a8a4ea60a981eaca3cf939b5f4305c123b` with `ref: ${{ github.event.pull_request.head.sha }}`. It runs tests using `./.github/scripts/run_tests.sh` and `./.github/scripts/run_tests_graalvm_native.sh`, but there's no clear indication of these scripts executing arbitrary code from the PR. The scripts might be vulnerable, but further analysis is needed to confirm.",,,jackwoth@google.com,enocom@google.com,shubhadayini@google.com,,,,,,,
GoogleCloudPlatform,https://github.com/GoogleCloudPlatform/cloud-sql-python-connector/blob/HEAD/.github/workflows/codeql.yml,PR Target,medium,"This workflow uses the `pull_request_target` trigger and checks out the PR's code using `actions/checkout@44c2b7a8a4ea60a981eaca3cf939b5f4305c123b` with `ref: ${{ github.event.pull_request.head.sha }}`. While it doesn't directly execute the code from the PR, the `github/codeql-action/autobuild@b7cec7526559c32f1616476ff32d17ba4c59b2d6` step might execute build scripts within the PR's code, potentially leading to arbitrary code execution.",,,jackwoth@google.com,,,,,,,,,
GoogleCloudPlatform,https://github.com/GoogleCloudPlatform/cloud-sql-python-connector/blob/HEAD/.github/workflows/coverage.yml,PR Target,low,"This workflow uses the `pull_request_target` trigger and checks out the PR's code using `actions/checkout@44c2b7a8a4ea60a981eaca3cf939b5f4305c123b` with `ref: ${{ github.event.pull_request.head.sha }}`. It runs tests using `nox --sessions unit-3.10`, but there's no clear indication of this command executing arbitrary code from the PR. The tests are run on the checked out code, but there's no indication of running scripts or binaries from the PR.",,,jackwoth@google.com,,,,,,,,,
GoogleCloudPlatform,https://github.com/GoogleCloudPlatform/cloud-sql-python-connector/blob/HEAD/.github/workflows/lint.yml,PR Target,low,"This workflow uses the `pull_request_target` trigger and checks out the PR's code using `actions/checkout@44c2b7a8a4ea60a981eaca3cf939b5f4305c123b` with `ref: ${{ github.event.pull_request.head.sha }}`. It runs linting using `nox --sessions lint`, but there's no clear indication of this command executing arbitrary code from the PR.",,,jackwoth@google.com,,,,,,,,,
GoogleCloudPlatform,https://github.com/GoogleCloudPlatform/cloud-sql-python-connector/blob/HEAD/.github/workflows/tests.yml,PR Target,low,"This workflow uses the `pull_request_target` trigger and checks out the PR's code using `actions/checkout@44c2b7a8a4ea60a981eaca3cf939b5f4305c123b` with `ref: ${{ github.event.pull_request.head.sha }}`. It runs tests using `nox -s system-${{ matrix.python-version }}` and `nox -s unit-${{ matrix.python-version }}`, but there's no clear indication of these commands executing arbitrary code from the PR. The tests are run on the checked out code, but there's no indication of running scripts or binaries from the PR.",,,jackwoth@google.com,,,,,,,,,
GoogleCloudPlatform,https://github.com/GoogleCloudPlatform/cloud-sql-go-connector/blob/HEAD/.github/workflows/codeql.yml,PR Target,medium,"This workflow uses the `pull_request_target` trigger and checks out the PR's code using `actions/checkout@44c2b7a8a4ea60a981eaca3cf939b5f4305c123b` with `ref: ${{ github.event.pull_request.head.sha }}`. While it doesn't directly execute the code from the PR, the `github/codeql-action/autobuild@b7cec7526559c32f1616476ff32d17ba4c59b2d6` step might execute build scripts within the PR's code, potentially leading to arbitrary code execution.",,,enocom@google.com,jackwoth@google.com,,,,,,,,
GoogleCloudPlatform,https://github.com/GoogleCloudPlatform/cloud-sql-go-connector/blob/HEAD/.github/workflows/cover.yaml,PR Target,low,"This workflow uses the `pull_request_target` trigger and checks out the PR's code using `actions/checkout@44c2b7a8a4ea60a981eaca3cf939b5f4305c123b` with `ref: ${{ github.event.pull_request.head.sha }}`. It runs tests using `go test`, but there's no clear indication of this command executing arbitrary code from the PR. The tests are run on the checked out code, but there's no indication of running scripts or binaries from the PR.",,,enocom@google.com,jackwoth@google.com,eno4@ecom.com,,,,,,,
GoogleCloudPlatform,https://github.com/GoogleCloudPlatform/cloud-sql-go-connector/blob/HEAD/.github/workflows/govulncheck.yaml,PR Target,low,"This workflow uses the `pull_request_target` trigger and checks out the PR's code using `actions/checkout@44c2b7a8a4ea60a981eaca3cf939b5f4305c123b` with `ref: ${{ github.event.pull_request.head.sha }}`. However, the `golang/govulncheck-action@3a32958c2706f7048305d5a2e53633d7e37e97d0` step is configured with `repo-checkout: false`, which means it doesn't use the checked out code. Therefore, there is no direct execution of potentially malicious code from the PR.",,,enocom@google.com,jackwoth@google.com,,,,,,,,
GoogleCloudPlatform,https://github.com/GoogleCloudPlatform/cloud-sql-go-connector/blob/HEAD/.github/workflows/lint.yaml,PR Target,low,"This workflow uses the `pull_request_target` trigger and checks out the PR's code using `actions/checkout@44c2b7a8a4ea60a981eaca3cf939b5f4305c123b` with `ref: ${{ github.event.pull_request.head.sha }}`. However, the workflow only performs linting using `golangci-lint` and doesn't execute any code from the PR. Therefore, there is no direct execution of potentially malicious code.",,,enocom@google.com,jackwoth@google.com,eno4@ecom.com,,,,,,,
GoogleCloudPlatform,https://github.com/GoogleCloudPlatform/cloud-sql-go-connector/blob/HEAD/.github/workflows/tests.yaml,PR Target,low,"This workflow uses the `pull_request_target` trigger and checks out the PR's code using `actions/checkout@44c2b7a8a4ea60a981eaca3cf939b5f4305c123b` with `ref: ${{ github.event.pull_request.head.sha }}`. While it runs tests using `go test`, it doesn't appear to execute any arbitrary code from the PR itself. The tests are run on the checked out code, but there's no indication of running scripts or binaries from the PR.",,,enocom@google.com,jackwoth@google.com,shubhadayini@google.com,eno4@ecom.com,,,,,,
GoogleCloudPlatform,https://github.com/GoogleCloudPlatform/emblem/blob/HEAD/.github/workflows/style-python.yml,PR Target,low,"This workflow uses the `pull_request_target` trigger and checks out the PR's code using `actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11` with `ref: ${{github.event.pull_request.head.ref}}`. It runs `black --check .` for code style checking, which doesn't execute arbitrary code from the PR.",,,adamross@google.com,,,,,,,,,
GoogleCloudPlatform,https://github.com/GoogleCloudPlatform/emblem/blob/HEAD/.github/workflows/style-terraform.yml,PR Target,low,"This workflow uses the `pull_request_target` trigger and checks out the PR's code using `actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11` with `ref: ${{github.event.pull_request.head.ref}}`. It runs `terraform fmt --recursive --check` for code style checking, which doesn't execute arbitrary code from the PR.",,,adamross@google.com,,,,,,,,,
GoogleCloudPlatform,https://github.com/GoogleCloudPlatform/alloydb-go-connector/blob/HEAD/.github/workflows/codeql.yml,PR Target,medium,"This workflow uses the `pull_request_target` trigger and checks out the PR's code using `actions/checkout@44c2b7a8a4ea60a981eaca3cf939b5f4305c123b` with `ref: ${{ github.event.pull_request.head.sha }}`. While it doesn't directly execute the code from the PR, the `github/codeql-action/autobuild@b7cec7526559c32f1616476ff32d17ba4c59b2d6` step might execute build scripts within the PR's code, potentially leading to arbitrary code execution.",,,enocom@google.com,jackwoth@google.com,,,,,,,,
GoogleCloudPlatform,https://github.com/GoogleCloudPlatform/alloydb-go-connector/blob/HEAD/.github/workflows/cover.yaml,PR Target,low,"This workflow uses the `pull_request_target` trigger and checks out the PR's code using `actions/checkout@44c2b7a8a4ea60a981eaca3cf939b5f4305c123b` with `ref: ${{ github.event.pull_request.head.sha }}`. It runs tests using `go test`, but there's no clear indication of this command executing arbitrary code from the PR. The tests are run on the checked out code, but there's no indication of running scripts or binaries from the PR.",,,enocom@google.com,jackwoth@google.com,,,,,,,,
GoogleCloudPlatform,https://github.com/GoogleCloudPlatform/alloydb-go-connector/blob/HEAD/.github/workflows/govulncheck.yaml,PR Target,medium,"This workflow uses the `pull_request_target` trigger and checks out the pull request's code using `actions/checkout`. Although it sets `repo-checkout: false` in the `golang/govulncheck-action`, indicating that it might not directly execute the checked-out code, it's still a potential risk as the workflow has write access to the repository and access to secrets. An attacker could potentially exploit this to modify the workflow or exfiltrate secrets.",,,enocom@google.com,jackwoth@google.com,,,,,,,,
espressif,https://github.com/espressif/arduino-esp32/blob/HEAD/.github/workflows/dangerjs.yml,PR Target,high,"This workflow uses `pull_request_target`, checks out the PR's code using `actions/checkout@v4`, and then executes code from the PR using `espressif/shared-github-dangerjs@v1`. This action is likely running code from the PR, making it highly exploitable.",,,,,,,,,,,,
espressif,https://github.com/espressif/idf-examples-launchpad-ci-action/blob/HEAD/.github/workflows/danger.yml,PR Target,high,"This workflow uses `pull_request_target`, checks out the PR's code using `actions/checkout@v3`, and then executes code from the PR using `espressif/github-actions/danger_pr_review@master`. This action is likely running code from the PR, making it highly exploitable.",,,,,,,,,,,,
GoogleCloudPlatform,https://github.com/GoogleCloudPlatform/alloydb-auth-proxy/blob/HEAD/.github/workflows/codeql.yml,PR Target,medium,"This workflow uses the `pull_request_target` trigger and checks out the pull request's code using `actions/checkout`. While it primarily uses the `github/codeql-action` for analysis, the workflow has write access to the repository and access to secrets. An attacker could potentially exploit this to modify the workflow or exfiltrate secrets.",,,enocom@google.com,jackwoth@google.com,,,,,,,,
GoogleCloudPlatform,https://github.com/GoogleCloudPlatform/alloydb-auth-proxy/blob/HEAD/.github/workflows/govulncheck.yaml,PR Target,medium,"This workflow uses the `pull_request_target` trigger and checks out the pull request's code using `actions/checkout`. Although it sets `repo-checkout: false` in the `golang/govulncheck-action`, indicating that it might not directly execute the checked-out code, it's still a potential risk as the workflow has write access to the repository and access to secrets. An attacker could potentially exploit this to modify the workflow or exfiltrate secrets.",,,enocom@google.com,jackwoth@google.com,,,,,,,,
forcedotcom,https://github.com/forcedotcom/code-analyzer-core/blob/HEAD/.github/workflows/verify-pr.yml,Untrusted Input,high,"The workflow uses github.event.pull_request.title in a regular expression match without proper sanitization, potentially allowing for code injection.",github.event.pull_request.title,,,,,,,,,,,
gchq,https://github.com/gchq/Gaffer/blob/HEAD/.github/workflows/release.yaml,Untrusted Input,high,"The workflow uses `github.event.milestone.title` to determine the release version and branch name, which are then used in various shell commands, including `git merge`, `git tag`, `git push`, and `mvn` commands. A malicious actor could create a milestone with a crafted title that injects arbitrary commands, potentially gaining control of the runner and compromising the repository.",github.event.milestone.title,,,,,,,,,,,
gchq,https://github.com/gchq/gaffer-docker/blob/HEAD/.github/workflows/release.yaml,Untrusted Input,high,"The workflow uses github.event.milestone.title to construct shell commands without proper sanitization in multiple steps. A malicious actor could create a milestone with a title containing malicious code, leading to arbitrary command execution on the runner. This allows potential exfiltration of secrets like ADMIN_GITHUB_TOKEN and GITHUB_TOKEN, as well as modification of repository content.",github.event.milestone.title,,,,,,,,,,,
GoogleCloudPlatform,https://github.com/GoogleCloudPlatform/cloud-sql-proxy-operator/blob/HEAD/.github/workflows/codeql.yml,PR Target,medium,"This workflow uses the `pull_request_target` trigger and checks out the pull request's code using `actions/checkout`. While it primarily uses the `github/codeql-action` for analysis, the workflow has write access to the repository and access to secrets. An attacker could potentially exploit this to modify the workflow or exfiltrate secrets.",,,enocom@google.com,jackwoth@google.com,,,,,,,,
gchq,https://github.com/gchq/gaffer-tools/blob/HEAD/.github/workflows/release.yaml,Untrusted Input,high,"The workflow uses github.event.milestone.title to construct shell commands without proper sanitization in multiple steps. A malicious actor could create a milestone with a title containing malicious code, leading to arbitrary command execution on the runner. This allows potential exfiltration of secrets like ADMIN_GITHUB_TOKEN, GPG_KEY_NAME, GPG_PASSPHRASE, OSS_NEXUS_USERNAME, and OSS_NEXUS_PASSWORD.",github.event.milestone.title,,,,,,,,,,,
GoogleCloudPlatform,https://github.com/GoogleCloudPlatform/cloud-sql-nodejs-connector/blob/HEAD/.github/workflows/codeql.yml,PR Target,medium,"This workflow uses the `pull_request_target` trigger and checks out the pull request's code using `actions/checkout`. While it primarily uses the `github/codeql-action` for analysis, the workflow has write access to the repository and access to secrets. An attacker could potentially exploit this to modify the workflow or exfiltrate secrets.",,,renovate@whitesourcesoftware.com,jackwoth@google.com,,,,,,,,
gchq,https://github.com/gchq/koryphe/blob/HEAD/.github/workflows/release.yaml,Untrusted Input,high,"The workflow uses github.event.milestone.title to construct shell commands without proper sanitization in multiple steps. A malicious actor could create a milestone with a title containing malicious code, leading to arbitrary command execution on the runner. This allows potential exfiltration of secrets like ADMIN_GITHUB_TOKEN, GPG_KEY_NAME, GPG_PASSPHRASE, OSS_NEXUS_USERNAME, and OSS_NEXUS_PASSWORD.",github.event.milestone.title,,,,,,,,,,,
libp2p,https://github.com/libp2p/github-mgmt/blob/HEAD/.github/workflows/fix.yml,PR Target,high,"This workflow uses the `pull_request_target` trigger and checks out the PR's code using `actions/checkout@v4`. It then executes a script from the PR's code using `node lib/actions/fix-yaml-config.js`. This script has access to several secrets, including `RO_AWS_ACCESS_KEY_ID`, `RO_AWS_SECRET_ACCESS_KEY`, `RO_GITHUB_APP_ID`, `RO_GITHUB_APP_INSTALLATION_ID`, and `RO_GITHUB_APP_PEM_FILE`. This allows a malicious PR to execute arbitrary code on the runner with access to sensitive information.",,,,,,,,,,,,
MetaMask,https://github.com/MetaMask/ios-branch-deep-linking-attribution/blob/HEAD/.github/workflows/sync-readme-changelog.yml,Untrusted Input,high,"The workflow uses github.event.release.body in a shell script without proper sanitization, potentially allowing for code injection.",github.event.release.body,,,,,,,,,,,
microsoft,https://github.com/microsoft/AzureTipsAndTricks/blob/HEAD/.github/workflows/create-pr.yml,Untrusted Input,high,"The workflow uses github.event.pull_request.title in a git commit command without proper sanitization. A malicious actor could submit a pull request with a crafted title containing malicious code, leading to arbitrary command execution during the commit operation in the private repository. This could allow modification of the private repository content and potential exfiltration of secrets like PRIVATE_REPO_PAT.",github.event.pull_request.title,,,,,,,,,,,
GoogleCloudPlatform,https://github.com/GoogleCloudPlatform/alloydb-java-connector/blob/HEAD/.github/workflows/codeql.yml,PR Target,medium,"This workflow uses the `pull_request_target` trigger and checks out the pull request's code using `actions/checkout`. While it primarily uses the `github/codeql-action` for analysis, the workflow has write access to the repository and access to secrets. An attacker could potentially exploit this to modify the workflow or exfiltrate secrets.",,,enocom@google.com,,,,,,,,,
GoogleCloudPlatform,https://github.com/GoogleCloudPlatform/alloydb-python-connector/blob/HEAD/.github/workflows/codeql.yaml,PR Target,medium,"This workflow uses the `pull_request_target` trigger and checks out the pull request's code using `actions/checkout`. While it primarily uses the `github/codeql-action` for analysis, the workflow has write access to the repository and access to secrets. An attacker could potentially exploit this to modify the workflow or exfiltrate secrets.",,,jackwoth@google.com,,,,,,,,,
microsoft,https://github.com/microsoft/coe-starter-kit/blob/HEAD/.github/workflows/sync-to-azdo.yml,Untrusted Input,high,"The workflow uses github.event.issue.milestone.title to construct shell commands without proper sanitization in multiple steps. A malicious actor could create a milestone with a title containing malicious code, leading to arbitrary command execution on the runner. This could potentially allow exfiltration of secrets like ADO_PERSONAL_ACCESS_TOKEN and GH_PERSONAL_ACCESS_TOKEN.",github.event.issue.milestone.title,,,,,,,,,,,
microsoft,https://github.com/microsoft/powercat-creator-kit/blob/HEAD/.github/workflows/sync-to-azdo.yml,Untrusted Input,high,"The workflow uses github.event.issue.milestone.title to construct shell commands without proper sanitization in multiple steps. A malicious actor could create a milestone with a title containing malicious code, leading to arbitrary command execution on the runner. This could potentially allow exfiltration of secrets like ADO_PERSONAL_ACCESS_TOKEN and GH_PERSONAL_ACCESS_TOKEN.",github.event.issue.milestone.title,,,,,,,,,,,
microsoft,https://github.com/microsoft/powercat-automation-kit/blob/HEAD/.github/workflows/SyncIssueWithAzDo.yml,Untrusted Input,high,"The workflow uses github.event.issue.milestone.title to construct shell commands without proper sanitization in multiple steps. A malicious actor could create a milestone with a title containing malicious code, leading to arbitrary command execution on the runner. This could potentially allow exfiltration of secrets like ADO_PERSONAL_ACCESS_TOKEN and GH_PERSONAL_ACCESS_TOKEN.",github.event.issue.milestone.title,,,,,,,,,,,
GoogleCloudPlatform,https://github.com/GoogleCloudPlatform/genai-databases-retrieval-app/blob/HEAD/.github/workflows/tests.yml,PR Target,medium,"This workflow uses the `pull_request_target` trigger and checks out the pull request's code using `actions/checkout`. While it runs linting tools like `black`, `isort`, and `mypy`, these tools are generally considered safe. However, the workflow still has write access to the repository and access to secrets, posing a potential risk. An attacker could potentially exploit this to modify the workflow or exfiltrate secrets.",,,akitsch@google.com,,,,,,,,,
auth0,https://github.com/auth0/passport-auth0/blob/HEAD/.github/workflows/semgrep.yml,PR Target,low,"This workflow uses the `pull_request_target` trigger and checks out the pull request's code using `actions/checkout`. However, it runs `semgrep ci` within a container (`returntocorp/semgrep`), which provides a level of isolation. While there's a theoretical risk of container escape, it's less likely to be exploitable compared to direct code execution in the workflow environment.",,,hello@evansims.com,evan.sims@auth0.com,,,,,,,,
auth0,https://github.com/auth0/passport-auth0/blob/HEAD/.github/workflows/snyk.yml,PR Target,low,"This workflow uses the `pull_request_target` trigger and checks out the pull request's code using `actions/checkout`. It then runs `snyk/actions/node` and `snyk test`, which are security analysis tools. While there's a theoretical risk of vulnerabilities in these tools, they are generally considered safe and less likely to be exploitable compared to direct code execution in the workflow environment.",,,frederik.prijck@auth0.com,hello@evansims.com,,,,,,,,
auth0,https://github.com/auth0/omniauth-auth0/blob/HEAD/.github/workflows/semgrep.yml,PR Target,low,"This workflow uses the `pull_request_target` trigger and checks out the pull request's code using `actions/checkout`. However, it runs `semgrep ci` within a container (`returntocorp/semgrep`), which provides a level of isolation. While there's a theoretical risk of container escape, it's less likely to be exploitable compared to direct code execution in the workflow environment.",,,hello@evansims.com,evan.sims@auth0.com,,,,,,,,
auth0,https://github.com/auth0/omniauth-auth0/blob/HEAD/.github/workflows/snyk.yml,PR Target,low,"This workflow uses the `pull_request_target` trigger and checks out the pull request's code using `actions/checkout`. It then runs `npm install -g snyk` and `snyk test`, which are security analysis tools. While there's a theoretical risk of vulnerabilities in these tools, they are generally considered safe and less likely to be exploitable compared to direct code execution in the workflow environment.",,,hello@evansims.com,,,,,,,,,
auth0,https://github.com/auth0/auth0.js/blob/HEAD/.github/workflows/browserstack.yml,PR Target,medium,"This workflow uses the 'pull_request_target' trigger and checks out the pull request code using 'actions/checkout@v4'. While it doesn't directly execute code from the PR, it does pass the PR's code to a build script ('build.sh') in the 'build' job. The severity is marked as medium because it's unclear what operations 'build.sh' performs and whether it's vulnerable to malicious code execution.",,,hello@evansims.com,,,,,,,,,
auth0,https://github.com/auth0/auth0.js/blob/HEAD/.github/workflows/semgrep.yml,PR Target,low,"This workflow uses 'pull_request_target' and checks out the PR code. However, it runs 'semgrep ci' within a 'returntocorp/semgrep' container. The severity is low because, while using untrusted input in 'semgrep ci' might have security implications, it's unlikely to directly lead to remote code execution within the container.",,,hello@evansims.com,evan.sims@auth0.com,,,,,,,,
auth0,https://github.com/auth0/auth0.js/blob/HEAD/.github/workflows/snyk.yml,PR Target,low,"Similar to the 'semgrep.yml' workflow, this one uses 'pull_request_target', checks out the PR code, and runs 'snyk test' within a controlled environment ('snyk/actions/node'). The severity is low because exploiting 'snyk test' with malicious input is less likely to lead to direct remote code execution.",,,frederik.prijck@auth0.com,hello@evansims.com,,,,,,,,
auth0,https://github.com/auth0/auth0-PHP/blob/HEAD/.github/workflows/tests.yml,PR Target,medium,"This workflow uses 'pull_request_target' and checks out the PR code multiple times. It also executes various composer commands (e.g., 'composer phpstan', 'composer psalm'). The severity is medium because it's unclear how these composer commands handle untrusted input and if they are vulnerable to code injection.",,,hello@evansims.com,,,,,,,,,
auth0,https://github.com/auth0/wordpress/blob/HEAD/.github/workflows/semgrep.yml,PR Target,low,"This workflow mirrors the pattern of 'semgrep.yml' in other repositories: 'pull_request_target', checkout, and running 'semgrep ci' within a 'returntocorp/semgrep' container. The severity remains low due to the contained environment of 'semgrep ci'.",,,hello@evansims.com,evan.sims@okta.com,evan.sims@auth0.com,,,,,,,
auth0,https://github.com/auth0/jwt-decode/blob/HEAD/.github/workflows/snyk.yml,PR Target,low,"This workflow is another instance of the 'snyk' pattern: 'pull_request_target', checkout, and running 'snyk test' within the 'snyk/actions/node' environment. The severity is low due to the controlled environment.",,,frederik.prijck@auth0.com,,,,,,,,,
auth0,https://github.com/auth0/laravel-auth0/blob/HEAD/.github/workflows/tests.yml,PR Target,medium,"This workflow uses 'pull_request_target', checks out the PR code, and executes various composer commands. Similar to 'tests.yml' in 'auth0-PHP', the severity is medium because the potential for code injection via composer commands is unclear.",,,hello@evansims.com,evan.sims@okta.com,evan.sims@auth0.com,,,,,,,
auth0,https://github.com/auth0/password-sheriff/blob/HEAD/.github/workflows/semgrep.yml,PR Target,low,"This workflow follows the familiar 'semgrep' pattern: 'pull_request_target', checkout, and 'semgrep ci' within a 'returntocorp/semgrep' container. The severity remains low due to the contained execution.",,,hello@evansims.com,evan.sims@auth0.com,,,,,,,,
auth0,https://github.com/auth0/password-sheriff/blob/HEAD/.github/workflows/snyk.yml,PR Target,low,"This workflow is another 'snyk' pattern instance: 'pull_request_target', checkout, and 'snyk test' within a controlled environment ('snyk/actions/php'). The severity is low due to the controlled environment.",,,hello@evansims.com,,,,,,,,,
auth0,https://github.com/auth0/ruby-auth0/blob/HEAD/.github/workflows/semgrep.yml,PR Target,low,"This workflow follows the 'semgrep' pattern: 'pull_request_target', checkout, and 'semgrep ci' within a 'returntocorp/semgrep' container. The severity remains low due to the contained execution.",,,evan.sims@okta.com,evan.sims@auth0.com,,,,,,,,
auth0,https://github.com/auth0/ruby-auth0/blob/HEAD/.github/workflows/snyk.yml,PR Target,low,"This workflow is another 'snyk' pattern instance: 'pull_request_target', checkout, and 'snyk test' after installing 'snyk' globally. The severity is low because while 'snyk test' might process untrusted input, it's less likely to lead to direct remote code execution.",,,hello@evansims.com,evan.sims@okta.com,,,,,,,,
auth0,https://github.com/auth0/auth0-python/blob/HEAD/.github/workflows/semgrep.yml,PR Target,low,"This workflow follows the 'semgrep' pattern: 'pull_request_target', checkout, and 'semgrep ci' within a 'returntocorp/semgrep' container. The severity remains low due to the contained execution.",,,hello@evansims.com,evan.sims@auth0.com,,,,,,,,
auth0,https://github.com/auth0/auth0-python/blob/HEAD/.github/workflows/snyk.yml,PR Target,low,"This workflow is another 'snyk' pattern instance: 'pull_request_target', checkout, and 'snyk test' within a controlled environment ('snyk/actions/python-3.7'). The severity is low due to the controlled environment.",,,hello@evansims.com,,,,,,,,,
microsoft,https://github.com/microsoft/powercat-business-approvals-kit/blob/HEAD/.github/workflows/SyncIssueWithAzDo.yml,Untrusted Input,high,"The workflow uses github.event.issue.milestone.title to construct shell commands without proper sanitization in multiple steps. A malicious actor could create a milestone with a title containing malicious code, leading to arbitrary command execution on the runner. This could potentially allow exfiltration of secrets like ADO_PERSONAL_ACCESS_TOKEN and GH_PERSONAL_ACCESS_TOKEN.",github.event.issue.milestone.title,,,,,,,,,,,
auth0,https://github.com/auth0/lock/blob/HEAD/.github/workflows/semgrep.yml,PR Target,low,"This workflow follows the 'semgrep' pattern: 'pull_request_target', checkout, and 'semgrep ci' within a 'returntocorp/semgrep' container. The severity remains low due to the contained execution.",,,evan.sims@okta.com,hello@evansims.com,evan.sims@auth0.com,,,,,,,
auth0,https://github.com/auth0/lock/blob/HEAD/.github/workflows/snyk.yml,PR Target,low,"This workflow is another 'snyk' pattern instance: 'pull_request_target', checkout, and 'snyk test' within the 'snyk/actions/node' environment. The severity is low due to the controlled environment.",,,frederik.prijck@auth0.com,hello@evansims.com,,,,,,,,
auth0,https://github.com/auth0/Lock.Android/blob/HEAD/.github/workflows/semgrep.yml,PR Target,low,"This workflow follows the 'semgrep' pattern: 'pull_request_target', checkout, and 'semgrep ci' within a 'returntocorp/semgrep' container. The severity remains low due to the contained execution.",,,hello@evansims.com,evan.sims@auth0.com,,,,,,,,
auth0,https://github.com/auth0/Lock.Android/blob/HEAD/.github/workflows/snyk.yml,PR Target,low,"This workflow is another 'snyk' pattern instance: 'pull_request_target', checkout, and 'snyk test' after installing 'snyk' globally. The severity is low because while 'snyk test' might process untrusted input, it's less likely to lead to direct remote code execution.",,,evan.sims@auth0.com,hello@evansims.com,,,,,,,,
auth0,https://github.com/auth0/symfony/blob/HEAD/.github/workflows/tests.yml,PR Target,medium,"This workflow uses 'pull_request_target' and checks out the PR code multiple times. It also executes various composer commands (e.g., 'composer phpstan', 'composer psalm'). The severity is medium because it's unclear how these composer commands handle untrusted input and if they are vulnerable to code injection.",,,hello@evansims.com,,,,,,,,,
auth0,https://github.com/auth0/angular2-jwt/blob/HEAD/.github/workflows/snyk.yml,PR Target,low,"This workflow is another instance of the 'snyk' pattern: 'pull_request_target', checkout, and running 'snyk test' within the 'snyk/actions/node' environment. The severity is low due to the controlled environment.",,,frederik.prijck@auth0.com,,,,,,,,,
auth0,https://github.com/auth0/auth0-vue/blob/HEAD/.github/workflows/browserstack.yml,PR Target,medium,"This workflow uses the 'pull_request_target' trigger and checks out the pull request code using 'actions/checkout@v4'. While it doesn't directly execute code from the PR, it does pass the PR's code to a build script ('build.sh') in the 'build' job. The severity is marked as medium because it's unclear what operations 'build.sh' performs and whether it's vulnerable to malicious code execution.",,,ewan.harris@okta.com,evan.sims@auth0.com,,,,,,,,
auth0,https://github.com/auth0/auth0-vue/blob/HEAD/.github/workflows/semgrep.yml,PR Target,low,"This workflow uses 'pull_request_target' and checks out the PR code. However, it runs 'semgrep ci' within a 'returntocorp/semgrep' container. The severity is low because, while using untrusted input in 'semgrep ci' might have security implications, it's unlikely to directly lead to remote code execution within the container.",,,evan.sims@auth0.com,,,,,,,,,
auth0,https://github.com/auth0/auth0-vue/blob/HEAD/.github/workflows/snyk.yml,PR Target,low,"Similar to the 'semgrep.yml' workflow, this one uses 'pull_request_target', checks out the PR code, and runs 'snyk test' within a controlled environment ('snyk/actions/node'). The severity is low because exploiting 'snyk test' with malicious input is less likely to lead to direct remote code execution.",,,frederik.prijck@auth0.com,evan.sims@auth0.com,,,,,,,,
auth0,https://github.com/auth0/auth0-java/blob/HEAD/.github/workflows/semgrep.yml,PR Target,low,"This workflow uses 'pull_request_target' and checks out the PR code. However, it runs 'semgrep ci' within a 'returntocorp/semgrep' container. The severity is low because, while using untrusted input in 'semgrep ci' might have security implications, it's unlikely to directly lead to remote code execution within the container.",,,jim.anderson@auth0.com,evan.sims@auth0.com,,,,,,,,
auth0,https://github.com/auth0/auth0-java/blob/HEAD/.github/workflows/snyk.yml,PR Target,low,"Similar to the 'semgrep.yml' workflow, this one uses 'pull_request_target', checks out the PR code, and runs 'snyk test' within a controlled environment ('snyk/actions/gradle-jdk11'). The severity is low because exploiting 'snyk test' with malicious input is less likely to lead to direct remote code execution.",,,jim.anderson@auth0.com,,,,,,,,,
auth0,https://github.com/auth0/react-native-auth0/blob/HEAD/.github/workflows/semgrep.yml,None,low,"This workflow uses pull_request_target, which allows untrusted code from a forked PR to run in the context of the base repository. However, the untrusted code is not directly executed. The authorize job gates running the run job on forked PRs, and the run job uses actions/checkout to check out the PR code, but doesn't directly execute it - it just runs a static analysis with semgrep on the checked out code. While there's still some risk in allowing untrusted code to be checked out and analyzed, the risk of malicious code execution seems low since the checked out code is not directly run or sourced into the environment.",,,hello@evansims.com,evan.sims@auth0.com,,,,,,,,
auth0,https://github.com/auth0/react-native-auth0/blob/HEAD/.github/workflows/snyk.yml,None,low,"Similar to the previous semgrep workflow, this uses pull_request_target and actions/checkout to check out PR code, but only runs a static Snyk analysis on it without directly executing the code. The risk of code execution is low, but there is still some risk in checking out and processing untrusted code.",,,hello@evansims.com,,,,,,,,,
auth0,https://github.com/auth0/Auth0.Android/blob/HEAD/.github/workflows/semgrep.yml,None,low,"Same as the previous semgrep workflows, this uses pull_request_target and checks out the PR code with actions/checkout, but only runs a static semgrep scan on the code without executing it. Low risk of code execution, but some risk in processing untrusted code.",,,hello@evansims.com,evan.sims@auth0.com,,,,,,,,
auth0,https://github.com/auth0/Auth0.Android/blob/HEAD/.github/workflows/snyk.yml,None,low,"Like the previous Snyk workflow, this uses pull_request_target and checks out PR code with actions/checkout, but only runs a static Snyk scan without code execution. Low execution risk, but some risk in processing untrusted code.",,,poovamraj@gmail.com,hello@evansims.com,,,,,,,,
auth0,https://github.com/auth0/node-jwks-rsa/blob/HEAD/.github/workflows/semgrep.yml,None,low,"Same pattern as previous semgrep workflows - uses pull_request_target, checks out PR code, but only runs static analysis without code execution. Low execution risk, some risk in processing untrusted code.",,,hello@evansims.com,evan.sims@auth0.com,,,,,,,,
auth0,https://github.com/auth0/node-jwks-rsa/blob/HEAD/.github/workflows/snyk.yml,None,low,"Follows the same pattern as previous Snyk workflows. Uses pull_request_target, checks out PR, runs static Snyk scan without executing code. Low execution risk, some risk in handling untrusted code.",,,frederik.prijck@auth0.com,hello@evansims.com,,,,,,,,
auth0,https://github.com/auth0/JWTDecode.Android/blob/HEAD/.github/workflows/semgrep.yml,None,low,"Same as previous semgrep workflows. Uses pull_request_target, checks out PR, runs static semgrep scan without code execution. Low execution risk, some untrusted code handling risk.",,,hello@evansims.com,evan.sims@auth0.com,,,,,,,,
auth0,https://github.com/auth0/JWTDecode.Android/blob/HEAD/.github/workflows/snyk.yml,None,low,"Same pattern as previous Snyk workflows - pull_request_target, PR checkout, static Snyk scan without code execution. Low execution risk, some untrusted code handling risk.",,,evan.sims@auth0.com,hello@evansims.com,,,,,,,,
auth0,https://github.com/auth0/idtoken-verifier/blob/HEAD/.github/workflows/semgrep.yml,None,low,"Follows the established pattern of the semgrep workflows. Uses pull_request_target, checks out PR, static semgrep scan without execution. Low execution risk, some untrusted code risk.",,,hello@evansims.com,evan.sims@auth0.com,,,,,,,,
auth0,https://github.com/auth0/idtoken-verifier/blob/HEAD/.github/workflows/snyk.yml,None,low,"Same as previous Snyk workflows. Uses pull_request_target, checks out PR, static Snyk scan, no code execution. Low execution risk, some untrusted code handling risk.",,,hello@evansims.com,,,,,,,,,
auth0,https://github.com/auth0/express-openid-connect/blob/HEAD/.github/workflows/semgrep.yml,None,low,"Matches the pattern of previous semgrep workflows. Uses pull_request_target, checks out PR code, runs static semgrep analysis without executing the code. Low execution risk, some risk in handling untrusted code.",,,hello@evansims.com,evan.sims@auth0.com,,,,,,,,
auth0,https://github.com/auth0/express-openid-connect/blob/HEAD/.github/workflows/snyk.yml,None,low,"Follows the same pattern as the other Snyk workflows. Uses pull_request_target, checks out PR code with actions/checkout, runs static Snyk scan without executing the code. Low code execution risk, some risk in processing untrusted code.",,,frederik.prijck@gmail.com,hello@evansims.com,,,,,,,,
microsoft,https://github.com/microsoft/promptflow/blob/HEAD/.github/workflows/tools_tests.yml,PR Target,high,"This workflow uses the `pull_request_target` trigger and checks out the PR's code. It then runs `pip install` with various packages, including the PR's code itself. This could potentially execute malicious code from the PR. The workflow has access to several secrets, including `CLIENT_ID`, `TENANT_ID`, and `TEST_WORKSPACE_SUB_ID`, which could be exfiltrated by malicious code.",,,,,,,,,,,,
auth0,https://github.com/auth0/auth0-spa-js/blob/HEAD/.github/workflows/semgrep.yml,None,low,"Follows the same pattern as previous semgrep workflows. Uses pull_request_target, checks out PR code, performs static semgrep analysis without executing the code. Low code execution risk, some risk in handling untrusted code.",,,frederik.prijck@auth0.com,evan.sims@okta.com,hello@evansims.com,evan.sims@auth0.com,,,,,,
auth0,https://github.com/auth0/auth0-spa-js/blob/HEAD/.github/workflows/snyk.yml,None,low,"Matches the pattern of previous Snyk workflows. Uses pull_request_target, checks out PR code, runs static Snyk scan without executing code. Low execution risk, some untrusted code handling risk.",,,frederik.prijck@auth0.com,evan.sims@okta.com,,,,,,,,
rabbitmq,https://github.com/rabbitmq/community-operators/blob/HEAD/.github/workflows/operator_test.yaml,PR Target,high,This workflow uses the `pull_request_target` trigger and checks out the pull request's code using `actions/checkout`. It then executes code from the PR using `ansible-pull` and `bash <(curl -sL $OPP_SCRIPT_URL)`. This allows a malicious pull request to execute arbitrary code on the runner with write access to the repository.,,,mavala@redhat.com,jbreza@redhat.com,,,,,,,,
auth0,https://github.com/auth0/nextjs-auth0/blob/HEAD/.github/workflows/semgrep.yml,None,low,"Same as previous semgrep workflows. Uses pull_request_target, checks out PR, runs static analysis without code execution. Low execution risk, some untrusted code handling risk.",,,hello@evansims.com,evan.sims@auth0.com,,,,,,,,
auth0,https://github.com/auth0/nextjs-auth0/blob/HEAD/.github/workflows/snyk.yml,None,low,"Follows the pattern of previous Snyk workflows. Uses pull_request_target, PR checkout, static Snyk scan without execution. Low execution risk, some untrusted code risk.",,,frederik.prijck@auth0.com,hello@evansims.com,,,,,,,,
rancher,https://github.com/rancher/elemental-toolkit/blob/HEAD/.github/workflows/build.yaml,PR Target,high,This workflow uses the `pull_request_target` trigger and checks out the PR's code using `actions/checkout@v4`. It then executes the PR's code by running `make DOCKER_ARGS=--push build`. This allows a malicious PR to execute arbitrary code on the runner with write access to the GitHub Packages.,,,dcassany@suse.com,fredrik.lonnegren@suse.com,edigiacinto@suse.com,igarcia@suse.com,kkaempf@suse.de,,,,,
SAP,https://github.com/SAP/sqlalchemy-hana/blob/HEAD/.github/workflows/main.yml,PR Target,high,"This workflow uses the `pull_request_target` trigger and checks out the pull request's code using `actions/checkout`. It then executes the code using `pip install -e .[dev,test,alembic]`, `pre-commit run --all`, `pip install -e .[test,alembic]`, `pytest`, and `diff-cover`. This allows a malicious pull request to execute arbitrary code on the runner with write access to the repository.",,,,,,,,,,,,
auth0,https://github.com/auth0/auth0-react/blob/HEAD/.github/workflows/semgrep.yml,None,low,"Same pattern as previous semgrep workflows. Pull_request_target, checks out PR, static semgrep analysis without execution. Low execution risk, some untrusted code handling risk.",,,frederik.prijck@auth0.com,hello@evansims.com,evan.sims@auth0.com,,,,,,,
auth0,https://github.com/auth0/auth0-react/blob/HEAD/.github/workflows/snyk.yml,None,low,"Same as previous Snyk workflows. Pull_request_target, PR checkout, static Snyk scan without execution. Low execution risk, some untrusted code handling risk.",,,frederik.prijck@auth0.com,hello@evansims.com,,,,,,,,
toptal,https://github.com/toptal/OpenMetadata/blob/HEAD/.github/workflows/cypress-integration-tests-mysql-pr.yml,PR Target,high,"This workflow uses the `pull_request_target` trigger, checks out the PR's code, and executes `pip install`, `make install_dev generate`, and `./docker/run_local_docker.sh`. These commands likely execute code from the checked-out PR. Additionally, the workflow exposes numerous secrets as environment variables to the `cypress-io/github-action@v4` step, making it highly exploitable.",,,,,,,,,,,,
auth0,https://github.com/auth0/auth0-angular/blob/HEAD/.github/workflows/semgrep.yml,None,low,"Same as previous semgrep workflows. Pull_request_target, PR checkout, static semgrep scan without execution. Low execution risk, some untrusted code handling risk.",,,frederik.prijck@auth0.com,hello@evansims.com,evan.sims@auth0.com,,,,,,,
auth0,https://github.com/auth0/auth0-angular/blob/HEAD/.github/workflows/snyk.yml,None,low,"Same pattern as previous Snyk workflows. Pull_request_target, PR checkout, static Snyk scan without code execution. Low execution risk, some untrusted code handling risk.",,,frederik.prijck@auth0.com,hello@evansims.com,,,,,,,,
auth0,https://github.com/auth0/node-oauth2-jwt-bearer/blob/HEAD/.github/workflows/semgrep.yml,None,low,"Matches previous semgrep workflows. Pull_request_target, PR checkout, static semgrep analysis without execution. Low execution risk, some untrusted code handling risk.",,,hello@evansims.com,evan.sims@auth0.com,,,,,,,,
auth0,https://github.com/auth0/node-oauth2-jwt-bearer/blob/HEAD/.github/workflows/snyk.yml,None,low,"Same as other Snyk workflows. Pull_request_target, PR checkout, static Snyk scan without code execution. Low execution risk, some untrusted code handling risk.",,,frederik.prijck@auth0.com,hello@evansims.com,,,,,,,,
auth0,https://github.com/auth0/go-auth0/blob/HEAD/.github/workflows/govulncheck.yml,None,low,"Uses pull_request_target and actions/checkout to check out PR head commit. However, the checked out code is only used for static vulnerability analysis via govulncheck, not executed. While there's still some risk in handling untrusted code, the risk of malicious code execution is low.",,,ewan.harris@okta.com,evan.sims@auth0.com,,,,,,,,
auth0,https://github.com/auth0/go-auth0/blob/HEAD/.github/workflows/semgrep.yml,None,low,"Follows the same pattern as previous semgrep workflows. Uses pull_request_target, checks out PR code, performs static semgrep analysis without executing the code. Low code execution risk, some untrusted code handling risk.",,,evan.sims@auth0.com,,,,,,,,,